{
	"id": "0a5d2219d59730dce2898e6ce449f920",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Web3BetsFO.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\nimport \"./interface/IWeb3BetsFO.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\n/// @author Victor Okoro\n/// @title Web3Bets Contract for FixedOdds decentralized betting exchange\n/// @notice Contains Web3Bets ecosystem's variables and functions\n/// @custom:security contact okoro.victor@web3bets.io\n\n/* \ncopied and modified code logic from github Repo: https://github.com/wizardoma/web3_bets_contract.git\n*/\ncontract Web3BetsFO is IWeb3BetsFO {\n    using SafeERC20 for IERC20;\n\n    address public contractOwner;\n    \n    address public override ecosystemAddress;\n    address public override holdersAddress;\n    address public override stableCoin;\n\n    address public override eventFactory;\n    address public override marketFactory;\n    address public override betFactory;\n\n    uint256 public override holdersVig = 50;\n    uint256 public override ecosystemVig = 50;\n    uint256 public override vigPercentage = 10;\n\n    address[] public systemAdmins;\n    address[] public eventAdmins;\n    address[] public blackList;\n\n    mapping(address => address) public admins;\n    mapping(address => address) public eventOwners;\n    mapping(address => address) public blacked;\n\n    IERC20 private _stableCoinWrapper = IERC20(stableCoin);\n\n    modifier onlyUser() {\n        require(\n            msg.sender == contractOwner,\n            \"You have no privilege to run this function\"\n        );\n        _;\n    }\n    modifier onlySystemAdmin {\n        require(\n            isSystemAdmin(msg.sender),\n            \"You have no privilege to run this function\"\n        );\n        _;\n    }\n    modifier uniqueSystemAdmin(address _addr) {\n        require(admins[_addr] == address(0), \"already a system admin\");\n        _;\n    }\n    modifier uniqueEventAdmin(address _addr) {\n        require(eventOwners[_addr] == address(0), \"already an event admin\");\n        _;\n    }\n    modifier uniqueBlack(address _addr) {\n        require(blacked[_addr] == address(0), \"already in blacklist\");\n        _;\n    }\n\n    constructor() {\n        contractOwner = msg.sender;\n    }\n    \n    function setHoldersAddress(address holder) external onlySystemAdmin {\n        holdersAddress = holder;\n    }\n\n    function setEcosystemAddress(address holder) external onlySystemAdmin {\n        ecosystemAddress = holder;\n    }\n\n    function setStableCoin(address holder) external onlySystemAdmin {\n        holdersAddress = holder;\n    }\n\n    function setEventFactory(address _factory) external onlySystemAdmin {\n        eventFactory = _factory;\n    }\n\n    function setMarketFactory(address _factory) external onlySystemAdmin {\n        marketFactory = _factory;\n    }\n\n    function setBetFactory(address _factory) external onlySystemAdmin {\n        betFactory = _factory;\n    }\n\n    function setVigPercentage(uint256 _percentage) external onlySystemAdmin {\n        require(\n            _percentage < 10,\n            \"Vig percentage must be expressed in 0 to 10 percentage. Example: 6\"\n        );\n        vigPercentage = _percentage;\n    }\n\n    function setVigPercentageShares(\n        uint256 hVig,\n        uint256 eVig\n    ) external onlySystemAdmin {\n        require(\n            hVig <= 100 && eVig <= 100,\n            \"Vig percentages shares must be expressed in a  0 to 100 ratio. Example: 30\"\n        );\n        require(\n            hVig + eVig  == 100,\n            \"The sum of all Vig percentage shares must be equal to 100\"\n        );\n\n        holdersVig = hVig;\n        ecosystemVig = eVig;\n    }\n\n    function shareBetEarnings(uint256 _vigAmount) external override {\n        require(_vigAmount > 0, \"bet earnings must be greater than 0\");\n        uint256 holdersShare = (_vigAmount * holdersVig )/ 100;\n        require(holdersShare > 0, \"holders' share must be greater than 0\");\n        uint256 ecosystemShare = (_vigAmount * ecosystemVig) / 100;\n        require(ecosystemShare > 0, \"ecosystem share must be greater than 0\");\n\n        _stableCoinWrapper.safeTransfer(ecosystemAddress, ecosystemShare);\n\n        _stableCoinWrapper.safeTransfer(holdersAddress, holdersShare);\n    }\n    \n    function addSystemAdmin(address _addr)\n        external\n        onlyUser\n        uniqueSystemAdmin(_addr)\n    {\n        require(holdersAddress == address(0) || ecosystemAddress == address(0), \"you must set holders and ecosystmeAddress addresses before adding event owners\");\n\n        systemAdmins.push(_addr);\n        admins[_addr] = _addr;\n    }\n\n    function deleteSystemAdmin(address _systemAdmin) external onlyUser {\n        require (admins[_systemAdmin] != address(0), \"Invalid event owner\");\n        \n        delete admins[_systemAdmin];\n\n        for (uint256 i = 0; i < systemAdmins.length; i++) {\n            if (systemAdmins[i] == _systemAdmin) {\n                delete systemAdmins[i];\n                break;\n            }\n        }\n    }\n    \n    function addEventAdmin(address _addr)\n        external\n        onlySystemAdmin\n        uniqueEventAdmin(_addr)\n    {\n        require(holdersAddress == address(0) || ecosystemAddress == address(0), \"you must set holders and ecosystmeAddress addresses before adding event owners\");\n\n        eventAdmins.push(_addr);\n        eventOwners[_addr] = _addr;\n    }\n\n    function deleteEventAdmin(address _eventOwner) external onlySystemAdmin {\n        require (eventOwners[_eventOwner] != address(0), \"Invalid event owner\");\n        \n        delete eventOwners[_eventOwner];\n\n        for (uint256 i = 0; i < eventAdmins.length; i++) {\n            if (eventAdmins[i] == _eventOwner) {\n                delete eventAdmins[i];\n                break;\n            }\n        }\n    }\n    \n    function addBlacked(address _addr)\n        external\n        onlySystemAdmin\n        uniqueBlack(_addr)\n    {\n        eventAdmins.push(_addr);\n        eventOwners[_addr] = _addr;\n    }\n\n    function removeBlacked(address _eventOwner) external onlySystemAdmin {\n        require (blacked[_eventOwner] != address(0), \"Invalid event owner\");\n        \n        delete blacked[_eventOwner];\n\n        for (uint256 i = 0; i < blackList.length; i++) {\n            if (blackList[i] == _eventOwner) {\n                delete blackList[i];\n                break;\n            }\n        }\n    }\n\n    function isSystemAdmin(address _addr) public view override returns (bool) {\n        if(admins[_addr] != address(0)){\n            for (uint256 i = 0; i < systemAdmins.length; i++) {\n                if (systemAdmins[i] == _addr) {\n                    return true;\n                    break;\n                }\n            }\n        }\n            return false;\n    }\n\n    function isEventAdmin(address _addr) public view override returns (bool) {\n        \n    }\n\n    function isBlack(address _addr) public view override returns (bool) {\n        \n    }\n\n}"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/draft-IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"contracts/interface/IWeb3BetsFO.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\ninterface IWeb3BetsFO{\n\n    function ecosystemAddress() external view returns(address);\n\n    function holdersAddress() external view returns(address);\n\n    function stableCoin() external view returns(address);\n\n    function eventFactory() external view returns(address);\n\n    function marketFactory() external view returns(address);\n\n    function betFactory() external view returns(address);\n\n    function holdersVig() external view returns(uint);\n\n    function ecosystemVig() external view returns(uint);\n\n    function vigPercentage() external returns(uint);\n\n    function shareBetEarnings(uint256 _vigAmount) external;\n\n    function isSystemAdmin(address _account) external returns (bool);\n\n    function isEventAdmin(address _account) external returns (bool);\n\n    function isBlack(address _account) external returns (bool);\n}"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ab000422977d375044dfeae3eb870ffe4eabe1f1312992d56a85f09d1b1967b064736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ab000422977d375044dfeae3eb870ffe4eabe1f1312992d56a85f09d1b1967b064736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB STOP DIV 0x22 SWAP8 PUSH30 0x375044DFEAE3EB870FFE4EABE1F1312992D56A85F09D1B1967B064736F6C PUSH4 0x43000804 STOP CALLER ",
							"sourceMap": "707:3748:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;707:3748:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ab000422977d375044dfeae3eb870ffe4eabe1f1312992d56a85f09d1b1967b064736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB STOP DIV 0x22 SWAP8 PUSH30 0x375044DFEAE3EB870FFE4EABE1F1312992D56A85F09D1B1967B064736F6C PUSH4 0x43000804 STOP CALLER ",
							"sourceMap": "707:3748:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ab000422977d375044dfeae3eb870ffe4eabe1f1312992d56a85f09d1b1967b064736f6c63430008040033",
									".code": [
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8305  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8305  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bc04e532bc5780dc3a9ad645814a2e2296de5f4da92fd4d9932455e782a945de64736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bc04e532bc5780dc3a9ad645814a2e2296de5f4da92fd4d9932455e782a945de64736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC DIV 0xE5 ORIGIN 0xBC JUMPI DUP1 0xDC GASPRICE SWAP11 0xD6 GASLIMIT DUP2 0x4A 0x2E 0x22 SWAP7 0xDE 0x5F 0x4D 0xA9 0x2F 0xD4 0xD9 SWAP4 0x24 SSTORE 0xE7 DUP3 0xA9 GASLIMIT 0xDE PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "194:8111:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8111:3;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bc04e532bc5780dc3a9ad645814a2e2296de5f4da92fd4d9932455e782a945de64736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC DIV 0xE5 ORIGIN 0xBC JUMPI DUP1 0xDC GASPRICE SWAP11 0xD6 GASLIMIT DUP2 0x4A 0x2E 0x22 SWAP7 0xDE 0x5F 0x4D 0xA9 0x2F 0xD4 0xD9 SWAP4 0x24 SSTORE 0xE7 DUP3 0xA9 GASLIMIT 0xDE PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "194:8111:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bc04e532bc5780dc3a9ad645814a2e2296de5f4da92fd4d9932455e782a945de64736f6c63430008040033",
									".code": [
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Web3BetsFO.sol": {
				"Web3BetsFO": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "addBlacked",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "addEventAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "addSystemAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "admins",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "betFactory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "blackList",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "blacked",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "contractOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_eventOwner",
									"type": "address"
								}
							],
							"name": "deleteEventAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_systemAdmin",
									"type": "address"
								}
							],
							"name": "deleteSystemAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ecosystemAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ecosystemVig",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "eventAdmins",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "eventFactory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "eventOwners",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "holdersAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "holdersVig",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "isBlack",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "isEventAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "isSystemAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "marketFactory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_eventOwner",
									"type": "address"
								}
							],
							"name": "removeBlacked",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_factory",
									"type": "address"
								}
							],
							"name": "setBetFactory",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "holder",
									"type": "address"
								}
							],
							"name": "setEcosystemAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_factory",
									"type": "address"
								}
							],
							"name": "setEventFactory",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "holder",
									"type": "address"
								}
							],
							"name": "setHoldersAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_factory",
									"type": "address"
								}
							],
							"name": "setMarketFactory",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "holder",
									"type": "address"
								}
							],
							"name": "setStableCoin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_percentage",
									"type": "uint256"
								}
							],
							"name": "setVigPercentage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "hVig",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "eVig",
									"type": "uint256"
								}
							],
							"name": "setVigPercentageShares",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_vigAmount",
									"type": "uint256"
								}
							],
							"name": "shareBetEarnings",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stableCoin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "systemAdmins",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vigPercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Victor Okoro",
						"custom:security": "contact okoro.victor@web3bets.io",
						"kind": "dev",
						"methods": {},
						"title": "Web3Bets Contract for FixedOdds decentralized betting exchange",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Web3BetsFO.sol\":548:6852  contract Web3BetsFO is IWeb3BetsFO {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Web3BetsFO.sol\":955:957  50 */\n  0x32\n    /* \"contracts/Web3BetsFO.sol\":918:957  uint256 public override holdersVig = 50 */\n  0x07\n  dup2\n  swap1\n  sstore\n    /* \"contracts/Web3BetsFO.sol\":963:1004  uint256 public override ecosystemVig = 50 */\n  0x08\n  sstore\n    /* \"contracts/Web3BetsFO.sol\":1050:1052  10 */\n  0x0a\n    /* \"contracts/Web3BetsFO.sol\":1010:1052  uint256 public override vigPercentage = 10 */\n  0x09\n  sstore\n    /* \"contracts/Web3BetsFO.sol\":1352:1362  stableCoin */\n  sload(0x03)\n    /* \"contracts/Web3BetsFO.sol\":1309:1363  IERC20 private _stableCoinWrapper = IERC20(stableCoin) */\n  0x10\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Web3BetsFO.sol\":1352:1362  stableCoin */\n  swap1\n  swap3\n  and\n    /* \"contracts/Web3BetsFO.sol\":1309:1363  IERC20 private _stableCoinWrapper = IERC20(stableCoin) */\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/Web3BetsFO.sol\":2120:2177  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Web3BetsFO.sol\":2144:2157  contractOwner */\n  0x00\n    /* \"contracts/Web3BetsFO.sol\":2144:2170  contractOwner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/Web3BetsFO.sol\":2160:2170  msg.sender */\n  caller\n    /* \"contracts/Web3BetsFO.sol\":2144:2170  contractOwner = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"contracts/Web3BetsFO.sol\":548:6852  contract Web3BetsFO is IWeb3BetsFO {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Web3BetsFO.sol\":548:6852  contract Web3BetsFO is IWeb3BetsFO {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x80036b34\n      gt\n      tag_37\n      jumpi\n      dup1\n      0xcbf89c63\n      gt\n      tag_38\n      jumpi\n      dup1\n      0xd5494869\n      gt\n      tag_39\n      jumpi\n      dup1\n      0xd5494869\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xd6c1ca26\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xe3c0ed78\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xed9f7eb9\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xf2210b2c\n      eq\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup1\n      0xcbf89c63\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xce606ee0\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xd37e87fd\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xd43cbb15\n      eq\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x992642e5\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x992642e5\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x9b460aa9\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xa8e01b28\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xcb146622\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      dup1\n      0x80036b34\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x85d8349b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x89fefbe1\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x9376b94c\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x387440e6\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x4fb43199\n      gt\n      tag_42\n      jumpi\n      dup1\n      0x4fb43199\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x64886880\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x681ada8c\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x6fdbd3f6\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x709ec8b4\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      dup1\n      0x387440e6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x429b62e5\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x486d1e50\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x4dcc434a\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      dup1\n      0x23af4e17\n      gt\n      tag_43\n      jumpi\n      dup1\n      0x23af4e17\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2e1a9618\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x327372e4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x332daccf\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      dup1\n      0x026c1a4d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06a5cb3a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x06ae7095\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x0da4ee50\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Web3BetsFO.sol\":1059:1088  address[] public systemAdmins */\n    tag_3:\n      tag_44\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1528:1560   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1510:1561   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1498:1500   */\n      0x20\n        /* \"#utility.yul\":1483:1501   */\n      add\n        /* \"contracts/Web3BetsFO.sol\":1059:1088  address[] public systemAdmins */\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Web3BetsFO.sol\":661:701  address public override ecosystemAddress */\n    tag_4:\n      sload(0x01)\n      tag_44\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Web3BetsFO.sol\":834:871  address public override marketFactory */\n    tag_5:\n      sload(0x05)\n      tag_44\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Web3BetsFO.sol\":707:745  address public override holdersAddress */\n    tag_6:\n      sload(0x02)\n      tag_44\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Web3BetsFO.sol\":2419:2523  function setStableCoin(address holder) external onlySystemAdmin {... */\n    tag_7:\n      tag_59\n      tag_60\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      stop\n        /* \"contracts/Web3BetsFO.sol\":877:911  address public override betFactory */\n    tag_8:\n      sload(0x06)\n      tag_44\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Web3BetsFO.sol\":6765:6849  function isBlack(address _addr) public view override returns (bool) {... */\n    tag_10:\n      tag_69\n      tag_70\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_70:\n      pop\n        /* \"contracts/Web3BetsFO.sol\":6827:6831  bool */\n      0x00\n      swap1\n        /* \"contracts/Web3BetsFO.sol\":6765:6849  function isBlack(address _addr) public view override returns (bool) {... */\n      jump\n    tag_69:\n      mload(0x40)\n        /* \"#utility.yul\":2016:2030   */\n      swap1\n      iszero\n        /* \"#utility.yul\":2009:2031   */\n      iszero\n        /* \"#utility.yul\":1991:2032   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1979:1981   */\n      0x20\n        /* \"#utility.yul\":1964:1982   */\n      add\n        /* \"contracts/Web3BetsFO.sol\":6765:6849  function isBlack(address _addr) public view override returns (bool) {... */\n      tag_48\n        /* \"#utility.yul\":1946:2038   */\n      jump\n        /* \"contracts/Web3BetsFO.sol\":1010:1052  uint256 public override vigPercentage = 10 */\n    tag_11:\n      tag_74\n      sload(0x09)\n      dup2\n      jump\n    tag_74:\n      mload(0x40)\n        /* \"#utility.yul\":8651:8676   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":8639:8641   */\n      0x20\n        /* \"#utility.yul\":8624:8642   */\n      add\n        /* \"contracts/Web3BetsFO.sol\":1010:1052  uint256 public override vigPercentage = 10 */\n      tag_48\n        /* \"#utility.yul\":8606:8682   */\n      jump\n        /* \"contracts/Web3BetsFO.sol\":1161:1202  mapping(address => address) public admins */\n    tag_12:\n      tag_44\n      tag_79\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_79:\n      mstore(0x20, 0x0d)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Web3BetsFO.sol\":918:957  uint256 public override holdersVig = 50 */\n    tag_13:\n      tag_74\n      sload(0x07)\n      dup2\n      jump\n        /* \"contracts/Web3BetsFO.sol\":2643:2753  function setMarketFactory(address _factory) external onlySystemAdmin {... */\n    tag_14:\n      tag_59\n      tag_86\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":6302:6664  function isSystemAdmin(address _addr) public view override returns (bool) {... */\n    tag_15:\n      tag_69\n      tag_89\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":3130:3591  function setVigPercentageShares(... */\n    tag_16:\n      tag_59\n      tag_93\n      calldatasize\n      0x04\n      tag_94\n      jump\t// in\n    tag_93:\n      tag_95\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":5908:6296  function removeBlacked(address _eventOwner) external onlySystemAdmin {... */\n    tag_17:\n      tag_59\n      tag_97\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":792:828  address public override eventFactory */\n    tag_18:\n      sload(0x04)\n      tag_44\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Web3BetsFO.sol\":1128:1154  address[] public blackList */\n    tag_19:\n      tag_44\n      tag_103\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_103:\n      tag_104\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":1260:1302  mapping(address => address) public blacked */\n    tag_20:\n      tag_44\n      tag_107\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_107:\n      mstore(0x20, 0x0f)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Web3BetsFO.sol\":1208:1254  mapping(address => address) public eventOwners */\n    tag_21:\n      tag_44\n      tag_111\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_111:\n      mstore(0x20, 0x0e)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Web3BetsFO.sol\":2759:2863  function setBetFactory(address _factory) external onlySystemAdmin {... */\n    tag_22:\n      tag_59\n      tag_115\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_115:\n      tag_116\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":963:1004  uint256 public override ecosystemVig = 50 */\n    tag_23:\n      tag_74\n      sload(0x08)\n      dup2\n      jump\n        /* \"contracts/Web3BetsFO.sol\":751:785  address public override stableCoin */\n    tag_24:\n      sload(0x03)\n      tag_44\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Web3BetsFO.sol\":5719:5902  function addBlacked(address _addr)... */\n    tag_25:\n      tag_59\n      tag_124\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_124:\n      tag_125\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":2301:2413  function setEcosystemAddress(address holder) external onlySystemAdmin {... */\n    tag_26:\n      tag_59\n      tag_127\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_127:\n      tag_128\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":3597:4175  function shareBetEarnings(uint256 _vigAmount) external override {... */\n    tag_28:\n      tag_59\n      tag_134\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_134:\n      tag_135\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":622:650  address public contractOwner */\n    tag_29:\n      sload(0x00)\n      tag_44\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Web3BetsFO.sol\":1094:1122  address[] public eventAdmins */\n    tag_30:\n      tag_44\n      tag_140\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_140:\n      tag_141\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":2529:2637  function setEventFactory(address _factory) external onlySystemAdmin {... */\n    tag_31:\n      tag_59\n      tag_144\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_144:\n      tag_145\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":4537:4933  function deleteSystemAdmin(address _systemAdmin) external onlyUser {... */\n    tag_32:\n      tag_59\n      tag_147\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_147:\n      tag_148\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":2869:3124  function setVigPercentage(uint256 _percentage) external onlySystemAdmin {... */\n    tag_33:\n      tag_59\n      tag_150\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_150:\n      tag_151\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":4943:5298  function addEventAdmin(address _addr)... */\n    tag_34:\n      tag_59\n      tag_153\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_153:\n      tag_154\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":4185:4531  function addSystemAdmin(address _addr)... */\n    tag_35:\n      tag_59\n      tag_156\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_156:\n      tag_157\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":5304:5709  function deleteEventAdmin(address _eventOwner) external onlySystemAdmin {... */\n    tag_36:\n      tag_59\n      tag_159\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_159:\n      tag_160\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":1059:1088  address[] public systemAdmins */\n    tag_47:\n      0x0a\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_161\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_161:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/Web3BetsFO.sol\":2419:2523  function setStableCoin(address holder) external onlySystemAdmin {... */\n    tag_62:\n        /* \"contracts/Web3BetsFO.sol\":1595:1620  isSystemAdmin(msg.sender) */\n      tag_164\n        /* \"contracts/Web3BetsFO.sol\":1609:1619  msg.sender */\n      caller\n        /* \"contracts/Web3BetsFO.sol\":1595:1608  isSystemAdmin */\n      tag_90\n        /* \"contracts/Web3BetsFO.sol\":1595:1620  isSystemAdmin(msg.sender) */\n      jump\t// in\n    tag_164:\n        /* \"contracts/Web3BetsFO.sol\":1574:1688  require(... */\n      tag_165\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_165:\n        /* \"contracts/Web3BetsFO.sol\":2493:2507  holdersAddress */\n      0x02\n        /* \"contracts/Web3BetsFO.sol\":2493:2516  holdersAddress = holder */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Web3BetsFO.sol\":2419:2523  function setStableCoin(address holder) external onlySystemAdmin {... */\n      jump\t// out\n        /* \"contracts/Web3BetsFO.sol\":2643:2753  function setMarketFactory(address _factory) external onlySystemAdmin {... */\n    tag_87:\n        /* \"contracts/Web3BetsFO.sol\":1595:1620  isSystemAdmin(msg.sender) */\n      tag_176\n        /* \"contracts/Web3BetsFO.sol\":1609:1619  msg.sender */\n      caller\n        /* \"contracts/Web3BetsFO.sol\":1595:1608  isSystemAdmin */\n      tag_90\n        /* \"contracts/Web3BetsFO.sol\":1595:1620  isSystemAdmin(msg.sender) */\n      jump\t// in\n    tag_176:\n        /* \"contracts/Web3BetsFO.sol\":1574:1688  require(... */\n      tag_177\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_177:\n        /* \"contracts/Web3BetsFO.sol\":2722:2735  marketFactory */\n      0x05\n        /* \"contracts/Web3BetsFO.sol\":2722:2746  marketFactory = _factory */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Web3BetsFO.sol\":2643:2753  function setMarketFactory(address _factory) external onlySystemAdmin {... */\n      jump\t// out\n        /* \"contracts/Web3BetsFO.sol\":6302:6664  function isSystemAdmin(address _addr) public view override returns (bool) {... */\n    tag_90:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":6389:6402  admins[_addr] */\n      dup2\n      dup2\n      and\n        /* \"contracts/Web3BetsFO.sol\":6370:6374  bool */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":6389:6402  admins[_addr] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":6389:6395  admins */\n      0x0d\n        /* \"contracts/Web3BetsFO.sol\":6389:6402  admins[_addr] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/Web3BetsFO.sol\":6370:6374  bool */\n      swap1\n      swap2\n        /* \"contracts/Web3BetsFO.sol\":6389:6402  admins[_addr] */\n      and\n        /* \"contracts/Web3BetsFO.sol\":6389:6416  admins[_addr] != address(0) */\n      iszero\n        /* \"contracts/Web3BetsFO.sol\":6386:6632  if(admins[_addr] != address(0)){... */\n      tag_181\n      jumpi\n        /* \"contracts/Web3BetsFO.sol\":6436:6445  uint256 i */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":6431:6622  for (uint256 i = 0; i < systemAdmins.length; i++) {... */\n    tag_182:\n        /* \"contracts/Web3BetsFO.sol\":6455:6467  systemAdmins */\n      0x0a\n        /* \"contracts/Web3BetsFO.sol\":6455:6474  systemAdmins.length */\n      sload\n        /* \"contracts/Web3BetsFO.sol\":6451:6474  i < systemAdmins.length */\n      dup2\n      lt\n        /* \"contracts/Web3BetsFO.sol\":6431:6622  for (uint256 i = 0; i < systemAdmins.length; i++) {... */\n      iszero\n      tag_183\n      jumpi\n        /* \"contracts/Web3BetsFO.sol\":6522:6527  _addr */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":6503:6527  systemAdmins[i] == _addr */\n      and\n        /* \"contracts/Web3BetsFO.sol\":6503:6515  systemAdmins */\n      0x0a\n        /* \"contracts/Web3BetsFO.sol\":6516:6517  i */\n      dup3\n        /* \"contracts/Web3BetsFO.sol\":6503:6518  systemAdmins[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_185\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_185:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Web3BetsFO.sol\":6503:6527  systemAdmins[i] == _addr */\n      eq\n        /* \"contracts/Web3BetsFO.sol\":6499:6608  if (systemAdmins[i] == _addr) {... */\n      iszero\n      tag_187\n      jumpi\n      pop\n        /* \"contracts/Web3BetsFO.sol\":6558:6562  true */\n      0x01\n      swap3\n        /* \"contracts/Web3BetsFO.sol\":6302:6664  function isSystemAdmin(address _addr) public view override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Web3BetsFO.sol\":6499:6608  if (systemAdmins[i] == _addr) {... */\n    tag_187:\n        /* \"contracts/Web3BetsFO.sol\":6476:6479  i++ */\n      dup1\n      tag_188\n      dup2\n      tag_189\n      jump\t// in\n    tag_188:\n      swap2\n      pop\n      pop\n        /* \"contracts/Web3BetsFO.sol\":6431:6622  for (uint256 i = 0; i < systemAdmins.length; i++) {... */\n      jump(tag_182)\n    tag_183:\n      pop\n        /* \"contracts/Web3BetsFO.sol\":6386:6632  if(admins[_addr] != address(0)){... */\n    tag_181:\n      pop\n        /* \"contracts/Web3BetsFO.sol\":6652:6657  false */\n      0x00\n      swap2\n        /* \"contracts/Web3BetsFO.sol\":6302:6664  function isSystemAdmin(address _addr) public view override returns (bool) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Web3BetsFO.sol\":3130:3591  function setVigPercentageShares(... */\n    tag_95:\n        /* \"contracts/Web3BetsFO.sol\":1595:1620  isSystemAdmin(msg.sender) */\n      tag_191\n        /* \"contracts/Web3BetsFO.sol\":1609:1619  msg.sender */\n      caller\n        /* \"contracts/Web3BetsFO.sol\":1595:1608  isSystemAdmin */\n      tag_90\n        /* \"contracts/Web3BetsFO.sol\":1595:1620  isSystemAdmin(msg.sender) */\n      jump\t// in\n    tag_191:\n        /* \"contracts/Web3BetsFO.sol\":1574:1688  require(... */\n      tag_192\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_192:\n        /* \"contracts/Web3BetsFO.sol\":3276:3279  100 */\n      0x64\n        /* \"contracts/Web3BetsFO.sol\":3268:3272  hVig */\n      dup3\n        /* \"contracts/Web3BetsFO.sol\":3268:3279  hVig <= 100 */\n      gt\n      iszero\n        /* \"contracts/Web3BetsFO.sol\":3268:3294  hVig <= 100 && eVig <= 100 */\n      dup1\n      iszero\n      tag_195\n      jumpi\n      pop\n        /* \"contracts/Web3BetsFO.sol\":3291:3294  100 */\n      0x64\n        /* \"contracts/Web3BetsFO.sol\":3283:3287  eVig */\n      dup2\n        /* \"contracts/Web3BetsFO.sol\":3283:3294  eVig <= 100 */\n      gt\n      iszero\n        /* \"contracts/Web3BetsFO.sol\":3268:3294  hVig <= 100 && eVig <= 100 */\n    tag_195:\n        /* \"contracts/Web3BetsFO.sol\":3247:3394  require(... */\n      tag_196\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3059:3061   */\n      0x20\n        /* \"contracts/Web3BetsFO.sol\":3247:3394  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3041:3062   */\n      mstore\n        /* \"#utility.yul\":3098:3100   */\n      0x4a\n        /* \"#utility.yul\":3078:3096   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3071:3101   */\n      mstore\n        /* \"#utility.yul\":3137:3171   */\n      0x5669672070657263656e746167657320736861726573206d7573742062652065\n        /* \"#utility.yul\":3117:3135   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3110:3172   */\n      mstore\n        /* \"#utility.yul\":3208:3242   */\n      0x787072657373656420696e206120203020746f2031303020726174696f2e2045\n        /* \"#utility.yul\":3188:3206   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3181:3243   */\n      mstore\n      shl(0xb4, 0x078616d706c653a20333)\n        /* \"#utility.yul\":3259:3278   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":3252:3293   */\n      mstore\n        /* \"#utility.yul\":3310:3329   */\n      0xa4\n      add\n        /* \"contracts/Web3BetsFO.sol\":3247:3394  require(... */\n      tag_166\n        /* \"#utility.yul\":3031:3335   */\n      jump\n        /* \"contracts/Web3BetsFO.sol\":3247:3394  require(... */\n    tag_196:\n        /* \"contracts/Web3BetsFO.sol\":3425:3436  hVig + eVig */\n      tag_199\n        /* \"contracts/Web3BetsFO.sol\":3432:3436  eVig */\n      dup2\n        /* \"contracts/Web3BetsFO.sol\":3425:3429  hVig */\n      dup4\n        /* \"contracts/Web3BetsFO.sol\":3425:3436  hVig + eVig */\n      tag_200\n      jump\t// in\n    tag_199:\n        /* \"contracts/Web3BetsFO.sol\":3441:3444  100 */\n      0x64\n        /* \"contracts/Web3BetsFO.sol\":3425:3444  hVig + eVig  == 100 */\n      eq\n        /* \"contracts/Web3BetsFO.sol\":3404:3527  require(... */\n      tag_201\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2633:2635   */\n      0x20\n        /* \"contracts/Web3BetsFO.sol\":3404:3527  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2615:2636   */\n      mstore\n        /* \"#utility.yul\":2672:2674   */\n      0x39\n        /* \"#utility.yul\":2652:2670   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2645:2675   */\n      mstore\n        /* \"#utility.yul\":2711:2745   */\n      0x5468652073756d206f6620616c6c205669672070657263656e74616765207368\n        /* \"#utility.yul\":2691:2709   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2684:2746   */\n      mstore\n        /* \"#utility.yul\":2782:2809   */\n      0x61726573206d75737420626520657175616c20746f2031303000000000000000\n        /* \"#utility.yul\":2762:2780   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2755:2810   */\n      mstore\n        /* \"#utility.yul\":2827:2846   */\n      0x84\n      add\n        /* \"contracts/Web3BetsFO.sol\":3404:3527  require(... */\n      tag_166\n        /* \"#utility.yul\":2605:2852   */\n      jump\n        /* \"contracts/Web3BetsFO.sol\":3404:3527  require(... */\n    tag_201:\n        /* \"contracts/Web3BetsFO.sol\":3538:3548  holdersVig */\n      0x07\n        /* \"contracts/Web3BetsFO.sol\":3538:3555  holdersVig = hVig */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Web3BetsFO.sol\":3565:3577  ecosystemVig */\n      0x08\n        /* \"contracts/Web3BetsFO.sol\":3565:3584  ecosystemVig = eVig */\n      sstore\n        /* \"contracts/Web3BetsFO.sol\":3130:3591  function setVigPercentageShares(... */\n      jump\t// out\n        /* \"contracts/Web3BetsFO.sol\":5908:6296  function removeBlacked(address _eventOwner) external onlySystemAdmin {... */\n    tag_98:\n        /* \"contracts/Web3BetsFO.sol\":1595:1620  isSystemAdmin(msg.sender) */\n      tag_205\n        /* \"contracts/Web3BetsFO.sol\":1609:1619  msg.sender */\n      caller\n        /* \"contracts/Web3BetsFO.sol\":1595:1608  isSystemAdmin */\n      tag_90\n        /* \"contracts/Web3BetsFO.sol\":1595:1620  isSystemAdmin(msg.sender) */\n      jump\t// in\n    tag_205:\n        /* \"contracts/Web3BetsFO.sol\":1574:1688  require(... */\n      tag_206\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_206:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":5996:6016  blacked[_eventOwner] */\n      dup2\n      dup2\n      and\n        /* \"contracts/Web3BetsFO.sol\":6028:6029  0 */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":5996:6016  blacked[_eventOwner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":5996:6003  blacked */\n      0x0f\n        /* \"contracts/Web3BetsFO.sol\":5996:6016  blacked[_eventOwner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      and\n        /* \"contracts/Web3BetsFO.sol\":5987:6054  require (blacked[_eventOwner] != address(0), \"Invalid event owner\") */\n      tag_209\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_211\n      jump\t// in\n    tag_209:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":6080:6100  blacked[_eventOwner] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":6080:6087  blacked */\n      0x0f\n        /* \"contracts/Web3BetsFO.sol\":6080:6100  blacked[_eventOwner] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Web3BetsFO.sol\":6073:6100  delete blacked[_eventOwner] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"contracts/Web3BetsFO.sol\":6111:6290  for (uint256 i = 0; i < blackList.length; i++) {... */\n    tag_212:\n        /* \"contracts/Web3BetsFO.sol\":6135:6144  blackList */\n      0x0c\n        /* \"contracts/Web3BetsFO.sol\":6135:6151  blackList.length */\n      sload\n        /* \"contracts/Web3BetsFO.sol\":6131:6151  i < blackList.length */\n      dup2\n      lt\n        /* \"contracts/Web3BetsFO.sol\":6111:6290  for (uint256 i = 0; i < blackList.length; i++) {... */\n      iszero\n      tag_213\n      jumpi\n        /* \"contracts/Web3BetsFO.sol\":6192:6203  _eventOwner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":6176:6203  blackList[i] == _eventOwner */\n      and\n        /* \"contracts/Web3BetsFO.sol\":6176:6185  blackList */\n      0x0c\n        /* \"contracts/Web3BetsFO.sol\":6186:6187  i */\n      dup3\n        /* \"contracts/Web3BetsFO.sol\":6176:6188  blackList[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_215\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_215:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Web3BetsFO.sol\":6176:6203  blackList[i] == _eventOwner */\n      eq\n        /* \"contracts/Web3BetsFO.sol\":6172:6280  if (blackList[i] == _eventOwner) {... */\n      iszero\n      tag_217\n      jumpi\n        /* \"contracts/Web3BetsFO.sol\":6230:6239  blackList */\n      0x0c\n        /* \"contracts/Web3BetsFO.sol\":6240:6241  i */\n      dup2\n        /* \"contracts/Web3BetsFO.sol\":6230:6242  blackList[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_218\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_218:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n        /* \"contracts/Web3BetsFO.sol\":6223:6242  delete blackList[i] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"contracts/Web3BetsFO.sol\":6111:6290  for (uint256 i = 0; i < blackList.length; i++) {... */\n      pop\n        /* \"contracts/Web3BetsFO.sol\":5908:6296  function removeBlacked(address _eventOwner) external onlySystemAdmin {... */\n      pop\n      jump\t// out\n        /* \"contracts/Web3BetsFO.sol\":6172:6280  if (blackList[i] == _eventOwner) {... */\n    tag_217:\n        /* \"contracts/Web3BetsFO.sol\":6153:6156  i++ */\n      dup1\n      tag_220\n      dup2\n      tag_189\n      jump\t// in\n    tag_220:\n      swap2\n      pop\n      pop\n        /* \"contracts/Web3BetsFO.sol\":6111:6290  for (uint256 i = 0; i < blackList.length; i++) {... */\n      jump(tag_212)\n    tag_213:\n      pop\n        /* \"contracts/Web3BetsFO.sol\":5908:6296  function removeBlacked(address _eventOwner) external onlySystemAdmin {... */\n      pop\n      jump\t// out\n        /* \"contracts/Web3BetsFO.sol\":1128:1154  address[] public blackList */\n    tag_104:\n      0x0c\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_161\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"contracts/Web3BetsFO.sol\":2759:2863  function setBetFactory(address _factory) external onlySystemAdmin {... */\n    tag_116:\n        /* \"contracts/Web3BetsFO.sol\":1595:1620  isSystemAdmin(msg.sender) */\n      tag_224\n        /* \"contracts/Web3BetsFO.sol\":1609:1619  msg.sender */\n      caller\n        /* \"contracts/Web3BetsFO.sol\":1595:1608  isSystemAdmin */\n      tag_90\n        /* \"contracts/Web3BetsFO.sol\":1595:1620  isSystemAdmin(msg.sender) */\n      jump\t// in\n    tag_224:\n        /* \"contracts/Web3BetsFO.sol\":1574:1688  require(... */\n      tag_225\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_225:\n        /* \"contracts/Web3BetsFO.sol\":2835:2845  betFactory */\n      0x06\n        /* \"contracts/Web3BetsFO.sol\":2835:2856  betFactory = _factory */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Web3BetsFO.sol\":2759:2863  function setBetFactory(address _factory) external onlySystemAdmin {... */\n      jump\t// out\n        /* \"contracts/Web3BetsFO.sol\":5719:5902  function addBlacked(address _addr)... */\n    tag_125:\n        /* \"contracts/Web3BetsFO.sol\":1595:1620  isSystemAdmin(msg.sender) */\n      tag_229\n        /* \"contracts/Web3BetsFO.sol\":1609:1619  msg.sender */\n      caller\n        /* \"contracts/Web3BetsFO.sol\":1595:1608  isSystemAdmin */\n      tag_90\n        /* \"contracts/Web3BetsFO.sol\":1595:1620  isSystemAdmin(msg.sender) */\n      jump\t// in\n    tag_229:\n        /* \"contracts/Web3BetsFO.sol\":1574:1688  require(... */\n      tag_230\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_230:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":2043:2057  blacked[_addr] */\n      dup1\n      dup3\n      and\n        /* \"contracts/Web3BetsFO.sol\":2069:2070  0 */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":2043:2057  blacked[_addr] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":2043:2050  blacked */\n      0x0f\n        /* \"contracts/Web3BetsFO.sol\":2043:2057  blacked[_addr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Web3BetsFO.sol\":5815:5820  _addr */\n      dup3\n      swap2\n        /* \"contracts/Web3BetsFO.sol\":2043:2057  blacked[_addr] */\n      and\n        /* \"contracts/Web3BetsFO.sol\":2043:2071  blacked[_addr] == address(0) */\n      iszero\n        /* \"contracts/Web3BetsFO.sol\":2035:2096  require(blacked[_addr] == address(0), \"already in blacklist\") */\n      tag_233\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7056:7058   */\n      0x20\n        /* \"contracts/Web3BetsFO.sol\":2035:2096  require(blacked[_addr] == address(0), \"already in blacklist\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7038:7059   */\n      mstore\n        /* \"#utility.yul\":7095:7097   */\n      0x14\n        /* \"#utility.yul\":7075:7093   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7068:7098   */\n      mstore\n      shl(0x62, 0x185b1c9958591e481a5b88189b1858dadb1a5cdd)\n        /* \"#utility.yul\":7114:7132   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7107:7157   */\n      mstore\n        /* \"#utility.yul\":7174:7192   */\n      0x64\n      add\n        /* \"contracts/Web3BetsFO.sol\":2035:2096  require(blacked[_addr] == address(0), \"already in blacklist\") */\n      tag_166\n        /* \"#utility.yul\":7028:7198   */\n      jump\n        /* \"contracts/Web3BetsFO.sol\":2035:2096  require(blacked[_addr] == address(0), \"already in blacklist\") */\n    tag_233:\n      pop\n        /* \"contracts/Web3BetsFO.sol\":5836:5847  eventAdmins */\n      0x0b\n        /* \"contracts/Web3BetsFO.sol\":5836:5859  eventAdmins.push(_addr) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      swap1\n      swap2\n      sstore\n      0x0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9\n      add\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":5869:5887  eventOwners[_addr] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":5869:5880  eventOwners */\n      0x0e\n        /* \"contracts/Web3BetsFO.sol\":5836:5859  eventAdmins.push(_addr) */\n      0x20\n        /* \"contracts/Web3BetsFO.sol\":5869:5887  eventOwners[_addr] */\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Web3BetsFO.sol\":5869:5895  eventOwners[_addr] = _addr */\n      dup1\n      sload\n      swap1\n      swap3\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/Web3BetsFO.sol\":5719:5902  function addBlacked(address _addr)... */\n      jump\t// out\n        /* \"contracts/Web3BetsFO.sol\":2301:2413  function setEcosystemAddress(address holder) external onlySystemAdmin {... */\n    tag_128:\n        /* \"contracts/Web3BetsFO.sol\":1595:1620  isSystemAdmin(msg.sender) */\n      tag_239\n        /* \"contracts/Web3BetsFO.sol\":1609:1619  msg.sender */\n      caller\n        /* \"contracts/Web3BetsFO.sol\":1595:1608  isSystemAdmin */\n      tag_90\n        /* \"contracts/Web3BetsFO.sol\":1595:1620  isSystemAdmin(msg.sender) */\n      jump\t// in\n    tag_239:\n        /* \"contracts/Web3BetsFO.sol\":1574:1688  require(... */\n      tag_240\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_240:\n        /* \"contracts/Web3BetsFO.sol\":2381:2397  ecosystemAddress */\n      0x01\n        /* \"contracts/Web3BetsFO.sol\":2381:2406  ecosystemAddress = holder */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Web3BetsFO.sol\":2301:2413  function setEcosystemAddress(address holder) external onlySystemAdmin {... */\n      jump\t// out\n        /* \"contracts/Web3BetsFO.sol\":3597:4175  function shareBetEarnings(uint256 _vigAmount) external override {... */\n    tag_135:\n        /* \"contracts/Web3BetsFO.sol\":3692:3693  0 */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":3679:3689  _vigAmount */\n      dup2\n        /* \"contracts/Web3BetsFO.sol\":3679:3693  _vigAmount > 0 */\n      gt\n        /* \"contracts/Web3BetsFO.sol\":3671:3733  require(_vigAmount > 0, \"bet earnings must be greater than 0\") */\n      tag_245\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7816:7818   */\n      0x20\n        /* \"contracts/Web3BetsFO.sol\":3671:3733  require(_vigAmount > 0, \"bet earnings must be greater than 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7798:7819   */\n      mstore\n        /* \"#utility.yul\":7855:7857   */\n      0x23\n        /* \"#utility.yul\":7835:7853   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7828:7858   */\n      mstore\n        /* \"#utility.yul\":7894:7928   */\n      0x626574206561726e696e6773206d757374206265206772656174657220746861\n        /* \"#utility.yul\":7874:7892   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7867:7929   */\n      mstore\n      shl(0xec, 0x06e203)\n        /* \"#utility.yul\":7945:7963   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7938:7971   */\n      mstore\n        /* \"#utility.yul\":7988:8007   */\n      0x84\n      add\n        /* \"contracts/Web3BetsFO.sol\":3671:3733  require(_vigAmount > 0, \"bet earnings must be greater than 0\") */\n      tag_166\n        /* \"#utility.yul\":7788:8013   */\n      jump\n        /* \"contracts/Web3BetsFO.sol\":3671:3733  require(_vigAmount > 0, \"bet earnings must be greater than 0\") */\n    tag_245:\n        /* \"contracts/Web3BetsFO.sol\":3743:3763  uint256 holdersShare */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":3794:3797  100 */\n      0x64\n        /* \"contracts/Web3BetsFO.sol\":3780:3790  holdersVig */\n      sload(0x07)\n        /* \"contracts/Web3BetsFO.sol\":3767:3777  _vigAmount */\n      dup4\n        /* \"contracts/Web3BetsFO.sol\":3767:3790  _vigAmount * holdersVig */\n      tag_248\n      swap2\n      swap1\n      tag_249\n      jump\t// in\n    tag_248:\n        /* \"contracts/Web3BetsFO.sol\":3766:3797  (_vigAmount * holdersVig )/ 100 */\n      tag_250\n      swap2\n      swap1\n      tag_251\n      jump\t// in\n    tag_250:\n        /* \"contracts/Web3BetsFO.sol\":3743:3797  uint256 holdersShare = (_vigAmount * holdersVig )/ 100 */\n      swap1\n      pop\n        /* \"contracts/Web3BetsFO.sol\":3830:3831  0 */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":3815:3827  holdersShare */\n      dup2\n        /* \"contracts/Web3BetsFO.sol\":3815:3831  holdersShare > 0 */\n      gt\n        /* \"contracts/Web3BetsFO.sol\":3807:3873  require(holdersShare > 0, \"holders' share must be greater than 0\") */\n      tag_252\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5944:5946   */\n      0x20\n        /* \"contracts/Web3BetsFO.sol\":3807:3873  require(holdersShare > 0, \"holders' share must be greater than 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5926:5947   */\n      mstore\n        /* \"#utility.yul\":5983:5985   */\n      0x25\n        /* \"#utility.yul\":5963:5981   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5956:5986   */\n      mstore\n        /* \"#utility.yul\":6022:6056   */\n      0x686f6c6465727327207368617265206d75737420626520677265617465722074\n        /* \"#utility.yul\":6002:6020   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5995:6057   */\n      mstore\n      shl(0xdc, 0x068616e203)\n        /* \"#utility.yul\":6073:6091   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6066:6101   */\n      mstore\n        /* \"#utility.yul\":6118:6137   */\n      0x84\n      add\n        /* \"contracts/Web3BetsFO.sol\":3807:3873  require(holdersShare > 0, \"holders' share must be greater than 0\") */\n      tag_166\n        /* \"#utility.yul\":5916:6143   */\n      jump\n        /* \"contracts/Web3BetsFO.sol\":3807:3873  require(holdersShare > 0, \"holders' share must be greater than 0\") */\n    tag_252:\n        /* \"contracts/Web3BetsFO.sol\":3883:3905  uint256 ecosystemShare */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":3938:3941  100 */\n      0x64\n        /* \"contracts/Web3BetsFO.sol\":3922:3934  ecosystemVig */\n      sload(0x08)\n        /* \"contracts/Web3BetsFO.sol\":3909:3919  _vigAmount */\n      dup5\n        /* \"contracts/Web3BetsFO.sol\":3909:3934  _vigAmount * ecosystemVig */\n      tag_255\n      swap2\n      swap1\n      tag_249\n      jump\t// in\n    tag_255:\n        /* \"contracts/Web3BetsFO.sol\":3908:3941  (_vigAmount * ecosystemVig) / 100 */\n      tag_256\n      swap2\n      swap1\n      tag_251\n      jump\t// in\n    tag_256:\n        /* \"contracts/Web3BetsFO.sol\":3883:3941  uint256 ecosystemShare = (_vigAmount * ecosystemVig) / 100 */\n      swap1\n      pop\n        /* \"contracts/Web3BetsFO.sol\":3976:3977  0 */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":3959:3973  ecosystemShare */\n      dup2\n        /* \"contracts/Web3BetsFO.sol\":3959:3977  ecosystemShare > 0 */\n      gt\n        /* \"contracts/Web3BetsFO.sol\":3951:4020  require(ecosystemShare > 0, \"ecosystem share must be greater than 0\") */\n      tag_257\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3949:3951   */\n      0x20\n        /* \"contracts/Web3BetsFO.sol\":3951:4020  require(ecosystemShare > 0, \"ecosystem share must be greater than 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3931:3952   */\n      mstore\n        /* \"#utility.yul\":3988:3990   */\n      0x26\n        /* \"#utility.yul\":3968:3986   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3961:3991   */\n      mstore\n        /* \"#utility.yul\":4027:4061   */\n      0x65636f73797374656d207368617265206d757374206265206772656174657220\n        /* \"#utility.yul\":4007:4025   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4000:4062   */\n      mstore\n      shl(0xd4, 0x07468616e203)\n        /* \"#utility.yul\":4078:4096   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4071:4107   */\n      mstore\n        /* \"#utility.yul\":4124:4143   */\n      0x84\n      add\n        /* \"contracts/Web3BetsFO.sol\":3951:4020  require(ecosystemShare > 0, \"ecosystem share must be greater than 0\") */\n      tag_166\n        /* \"#utility.yul\":3921:4149   */\n      jump\n        /* \"contracts/Web3BetsFO.sol\":3951:4020  require(ecosystemShare > 0, \"ecosystem share must be greater than 0\") */\n    tag_257:\n        /* \"contracts/Web3BetsFO.sol\":4063:4079  ecosystemAddress */\n      sload(0x01)\n        /* \"contracts/Web3BetsFO.sol\":4031:4049  _stableCoinWrapper */\n      sload(0x10)\n        /* \"contracts/Web3BetsFO.sol\":4031:4096  _stableCoinWrapper.safeTransfer(ecosystemAddress, ecosystemShare) */\n      tag_260\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":4031:4049  _stableCoinWrapper */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"contracts/Web3BetsFO.sol\":4063:4079  ecosystemAddress */\n      and\n        /* \"contracts/Web3BetsFO.sol\":4081:4095  ecosystemShare */\n      dup4\n        /* \"contracts/Web3BetsFO.sol\":4031:4062  _stableCoinWrapper.safeTransfer */\n      tag_261\n        /* \"contracts/Web3BetsFO.sol\":4031:4096  _stableCoinWrapper.safeTransfer(ecosystemAddress, ecosystemShare) */\n      jump\t// in\n    tag_260:\n        /* \"contracts/Web3BetsFO.sol\":4139:4153  holdersAddress */\n      sload(0x02)\n        /* \"contracts/Web3BetsFO.sol\":4107:4125  _stableCoinWrapper */\n      sload(0x10)\n        /* \"contracts/Web3BetsFO.sol\":4107:4168  _stableCoinWrapper.safeTransfer(holdersAddress, holdersShare) */\n      tag_262\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":4107:4125  _stableCoinWrapper */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"contracts/Web3BetsFO.sol\":4139:4153  holdersAddress */\n      and\n        /* \"contracts/Web3BetsFO.sol\":4155:4167  holdersShare */\n      dup5\n        /* \"contracts/Web3BetsFO.sol\":4107:4138  _stableCoinWrapper.safeTransfer */\n      tag_261\n        /* \"contracts/Web3BetsFO.sol\":4107:4168  _stableCoinWrapper.safeTransfer(holdersAddress, holdersShare) */\n      jump\t// in\n    tag_262:\n        /* \"contracts/Web3BetsFO.sol\":3597:4175  function shareBetEarnings(uint256 _vigAmount) external override {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Web3BetsFO.sol\":1094:1122  address[] public eventAdmins */\n    tag_141:\n      0x0b\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_161\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"contracts/Web3BetsFO.sol\":2529:2637  function setEventFactory(address _factory) external onlySystemAdmin {... */\n    tag_145:\n        /* \"contracts/Web3BetsFO.sol\":1595:1620  isSystemAdmin(msg.sender) */\n      tag_266\n        /* \"contracts/Web3BetsFO.sol\":1609:1619  msg.sender */\n      caller\n        /* \"contracts/Web3BetsFO.sol\":1595:1608  isSystemAdmin */\n      tag_90\n        /* \"contracts/Web3BetsFO.sol\":1595:1620  isSystemAdmin(msg.sender) */\n      jump\t// in\n    tag_266:\n        /* \"contracts/Web3BetsFO.sol\":1574:1688  require(... */\n      tag_267\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_267:\n        /* \"contracts/Web3BetsFO.sol\":2607:2619  eventFactory */\n      0x04\n        /* \"contracts/Web3BetsFO.sol\":2607:2630  eventFactory = _factory */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Web3BetsFO.sol\":2529:2637  function setEventFactory(address _factory) external onlySystemAdmin {... */\n      jump\t// out\n        /* \"contracts/Web3BetsFO.sol\":4537:4933  function deleteSystemAdmin(address _systemAdmin) external onlyUser {... */\n    tag_148:\n        /* \"contracts/Web3BetsFO.sol\":1435:1448  contractOwner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/Web3BetsFO.sol\":1421:1431  msg.sender */\n      caller\n        /* \"contracts/Web3BetsFO.sol\":1421:1448  msg.sender == contractOwner */\n      eq\n        /* \"contracts/Web3BetsFO.sol\":1400:1516  require(... */\n      tag_271\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_271:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":4623:4643  admins[_systemAdmin] */\n      dup2\n      dup2\n      and\n        /* \"contracts/Web3BetsFO.sol\":4655:4656  0 */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":4623:4643  admins[_systemAdmin] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":4623:4629  admins */\n      0x0d\n        /* \"contracts/Web3BetsFO.sol\":4623:4643  admins[_systemAdmin] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      and\n        /* \"contracts/Web3BetsFO.sol\":4614:4681  require (admins[_systemAdmin] != address(0), \"Invalid event owner\") */\n      tag_274\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_211\n      jump\t// in\n    tag_274:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":4707:4727  admins[_systemAdmin] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":4707:4713  admins */\n      0x0d\n        /* \"contracts/Web3BetsFO.sol\":4707:4727  admins[_systemAdmin] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Web3BetsFO.sol\":4700:4727  delete admins[_systemAdmin] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"contracts/Web3BetsFO.sol\":4738:4927  for (uint256 i = 0; i < systemAdmins.length; i++) {... */\n    tag_276:\n        /* \"contracts/Web3BetsFO.sol\":4762:4774  systemAdmins */\n      0x0a\n        /* \"contracts/Web3BetsFO.sol\":4762:4781  systemAdmins.length */\n      sload\n        /* \"contracts/Web3BetsFO.sol\":4758:4781  i < systemAdmins.length */\n      dup2\n      lt\n        /* \"contracts/Web3BetsFO.sol\":4738:4927  for (uint256 i = 0; i < systemAdmins.length; i++) {... */\n      iszero\n      tag_213\n      jumpi\n        /* \"contracts/Web3BetsFO.sol\":4825:4837  _systemAdmin */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":4806:4837  systemAdmins[i] == _systemAdmin */\n      and\n        /* \"contracts/Web3BetsFO.sol\":4806:4818  systemAdmins */\n      0x0a\n        /* \"contracts/Web3BetsFO.sol\":4819:4820  i */\n      dup3\n        /* \"contracts/Web3BetsFO.sol\":4806:4821  systemAdmins[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_279\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_279:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Web3BetsFO.sol\":4806:4837  systemAdmins[i] == _systemAdmin */\n      eq\n        /* \"contracts/Web3BetsFO.sol\":4802:4917  if (systemAdmins[i] == _systemAdmin) {... */\n      iszero\n      tag_281\n      jumpi\n        /* \"contracts/Web3BetsFO.sol\":4864:4876  systemAdmins */\n      0x0a\n        /* \"contracts/Web3BetsFO.sol\":4877:4878  i */\n      dup2\n        /* \"contracts/Web3BetsFO.sol\":4864:4879  systemAdmins[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_218\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n        /* \"contracts/Web3BetsFO.sol\":4802:4917  if (systemAdmins[i] == _systemAdmin) {... */\n    tag_281:\n        /* \"contracts/Web3BetsFO.sol\":4783:4786  i++ */\n      dup1\n      tag_284\n      dup2\n      tag_189\n      jump\t// in\n    tag_284:\n      swap2\n      pop\n      pop\n        /* \"contracts/Web3BetsFO.sol\":4738:4927  for (uint256 i = 0; i < systemAdmins.length; i++) {... */\n      jump(tag_276)\n        /* \"contracts/Web3BetsFO.sol\":2869:3124  function setVigPercentage(uint256 _percentage) external onlySystemAdmin {... */\n    tag_151:\n        /* \"contracts/Web3BetsFO.sol\":1595:1620  isSystemAdmin(msg.sender) */\n      tag_286\n        /* \"contracts/Web3BetsFO.sol\":1609:1619  msg.sender */\n      caller\n        /* \"contracts/Web3BetsFO.sol\":1595:1608  isSystemAdmin */\n      tag_90\n        /* \"contracts/Web3BetsFO.sol\":1595:1620  isSystemAdmin(msg.sender) */\n      jump\t// in\n    tag_286:\n        /* \"contracts/Web3BetsFO.sol\":1574:1688  require(... */\n      tag_287\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_287:\n        /* \"contracts/Web3BetsFO.sol\":2986:2988  10 */\n      0x0a\n        /* \"contracts/Web3BetsFO.sol\":2972:2983  _percentage */\n      dup2\n        /* \"contracts/Web3BetsFO.sol\":2972:2988  _percentage < 10 */\n      lt\n        /* \"contracts/Web3BetsFO.sol\":2951:3080  require(... */\n      tag_290\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4707:4709   */\n      0x20\n        /* \"contracts/Web3BetsFO.sol\":2951:3080  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4689:4710   */\n      mstore\n        /* \"#utility.yul\":4746:4748   */\n      0x42\n        /* \"#utility.yul\":4726:4744   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4719:4749   */\n      mstore\n        /* \"#utility.yul\":4785:4819   */\n      0x5669672070657263656e74616765206d75737420626520657870726573736564\n        /* \"#utility.yul\":4765:4783   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4758:4820   */\n      mstore\n        /* \"#utility.yul\":4856:4890   */\n      0x20696e203020746f2031302070657263656e746167652e204578616d706c653a\n        /* \"#utility.yul\":4836:4854   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4829:4891   */\n      mstore\n      shl(0xf1, 0x101b)\n        /* \"#utility.yul\":4907:4926   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":4900:4933   */\n      mstore\n        /* \"#utility.yul\":4950:4969   */\n      0xa4\n      add\n        /* \"contracts/Web3BetsFO.sol\":2951:3080  require(... */\n      tag_166\n        /* \"#utility.yul\":4679:4975   */\n      jump\n        /* \"contracts/Web3BetsFO.sol\":2951:3080  require(... */\n    tag_290:\n        /* \"contracts/Web3BetsFO.sol\":3090:3103  vigPercentage */\n      0x09\n        /* \"contracts/Web3BetsFO.sol\":3090:3117  vigPercentage = _percentage */\n      sstore\n        /* \"contracts/Web3BetsFO.sol\":2869:3124  function setVigPercentage(uint256 _percentage) external onlySystemAdmin {... */\n      jump\t// out\n        /* \"contracts/Web3BetsFO.sol\":4943:5298  function addEventAdmin(address _addr)... */\n    tag_154:\n        /* \"contracts/Web3BetsFO.sol\":1595:1620  isSystemAdmin(msg.sender) */\n      tag_294\n        /* \"contracts/Web3BetsFO.sol\":1609:1619  msg.sender */\n      caller\n        /* \"contracts/Web3BetsFO.sol\":1595:1608  isSystemAdmin */\n      tag_90\n        /* \"contracts/Web3BetsFO.sol\":1595:1620  isSystemAdmin(msg.sender) */\n      jump\t// in\n    tag_294:\n        /* \"contracts/Web3BetsFO.sol\":1574:1688  require(... */\n      tag_295\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_295:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":1907:1925  eventOwners[_addr] */\n      dup1\n      dup3\n      and\n        /* \"contracts/Web3BetsFO.sol\":1937:1938  0 */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":1907:1925  eventOwners[_addr] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":1907:1918  eventOwners */\n      0x0e\n        /* \"contracts/Web3BetsFO.sol\":1907:1925  eventOwners[_addr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Web3BetsFO.sol\":5047:5052  _addr */\n      dup3\n      swap2\n        /* \"contracts/Web3BetsFO.sol\":1907:1925  eventOwners[_addr] */\n      and\n        /* \"contracts/Web3BetsFO.sol\":1907:1939  eventOwners[_addr] == address(0) */\n      iszero\n        /* \"contracts/Web3BetsFO.sol\":1899:1966  require(eventOwners[_addr] == address(0), \"already an event admin\") */\n      tag_298\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4356:4358   */\n      0x20\n        /* \"contracts/Web3BetsFO.sol\":1899:1966  require(eventOwners[_addr] == address(0), \"already an event admin\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4338:4359   */\n      mstore\n        /* \"#utility.yul\":4395:4397   */\n      0x16\n        /* \"#utility.yul\":4375:4393   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4368:4398   */\n      mstore\n      shl(0x51, 0x30b63932b0b23c9030b71032bb32b73a1030b236b4b7)\n        /* \"#utility.yul\":4414:4432   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4407:4459   */\n      mstore\n        /* \"#utility.yul\":4476:4494   */\n      0x64\n      add\n        /* \"contracts/Web3BetsFO.sol\":1899:1966  require(eventOwners[_addr] == address(0), \"already an event admin\") */\n      tag_166\n        /* \"#utility.yul\":4328:4500   */\n      jump\n        /* \"contracts/Web3BetsFO.sol\":1899:1966  require(eventOwners[_addr] == address(0), \"already an event admin\") */\n    tag_298:\n        /* \"contracts/Web3BetsFO.sol\":5076:5090  holdersAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"contracts/Web3BetsFO.sol\":5076:5104  holdersAddress == address(0) */\n      iszero\n      dup1\n        /* \"contracts/Web3BetsFO.sol\":5076:5138  holdersAddress == address(0) || ecosystemAddress == address(0) */\n      tag_302\n      jumpi\n      pop\n        /* \"contracts/Web3BetsFO.sol\":5108:5124  ecosystemAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/Web3BetsFO.sol\":5108:5138  ecosystemAddress == address(0) */\n      iszero\n        /* \"contracts/Web3BetsFO.sol\":5076:5138  holdersAddress == address(0) || ecosystemAddress == address(0) */\n    tag_302:\n        /* \"contracts/Web3BetsFO.sol\":5068:5221  require(holdersAddress == address(0) || ecosystemAddress == address(0), \"you must set holders and ecosystmeAddress addresses before adding event owners\") */\n      tag_233\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_305\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":4185:4531  function addSystemAdmin(address _addr)... */\n    tag_157:\n        /* \"contracts/Web3BetsFO.sol\":1435:1448  contractOwner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/Web3BetsFO.sol\":1421:1431  msg.sender */\n      caller\n        /* \"contracts/Web3BetsFO.sol\":1421:1448  msg.sender == contractOwner */\n      eq\n        /* \"contracts/Web3BetsFO.sol\":1400:1516  require(... */\n      tag_308\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_308:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":1771:1784  admins[_addr] */\n      dup1\n      dup3\n      and\n        /* \"contracts/Web3BetsFO.sol\":1796:1797  0 */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":1771:1784  admins[_addr] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":1771:1777  admins */\n      0x0d\n        /* \"contracts/Web3BetsFO.sol\":1771:1784  admins[_addr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Web3BetsFO.sol\":4284:4289  _addr */\n      dup3\n      swap2\n        /* \"contracts/Web3BetsFO.sol\":1771:1784  admins[_addr] */\n      and\n        /* \"contracts/Web3BetsFO.sol\":1771:1798  admins[_addr] == address(0) */\n      iszero\n        /* \"contracts/Web3BetsFO.sol\":1763:1825  require(admins[_addr] == address(0), \"already a system admin\") */\n      tag_311\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5593:5595   */\n      0x20\n        /* \"contracts/Web3BetsFO.sol\":1763:1825  require(admins[_addr] == address(0), \"already a system admin\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5575:5596   */\n      mstore\n        /* \"#utility.yul\":5632:5634   */\n      0x16\n        /* \"#utility.yul\":5612:5630   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5605:5635   */\n      mstore\n      shl(0x51, 0x30b63932b0b23c90309039bcb9ba32b69030b236b4b7)\n        /* \"#utility.yul\":5651:5669   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5644:5696   */\n      mstore\n        /* \"#utility.yul\":5713:5731   */\n      0x64\n      add\n        /* \"contracts/Web3BetsFO.sol\":1763:1825  require(admins[_addr] == address(0), \"already a system admin\") */\n      tag_166\n        /* \"#utility.yul\":5565:5737   */\n      jump\n        /* \"contracts/Web3BetsFO.sol\":1763:1825  require(admins[_addr] == address(0), \"already a system admin\") */\n    tag_311:\n        /* \"contracts/Web3BetsFO.sol\":4313:4327  holdersAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"contracts/Web3BetsFO.sol\":4313:4341  holdersAddress == address(0) */\n      iszero\n      dup1\n        /* \"contracts/Web3BetsFO.sol\":4313:4375  holdersAddress == address(0) || ecosystemAddress == address(0) */\n      tag_315\n      jumpi\n      pop\n        /* \"contracts/Web3BetsFO.sol\":4345:4361  ecosystemAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/Web3BetsFO.sol\":4345:4375  ecosystemAddress == address(0) */\n      iszero\n        /* \"contracts/Web3BetsFO.sol\":4313:4375  holdersAddress == address(0) || ecosystemAddress == address(0) */\n    tag_315:\n        /* \"contracts/Web3BetsFO.sol\":4305:4458  require(holdersAddress == address(0) || ecosystemAddress == address(0), \"you must set holders and ecosystmeAddress addresses before adding event owners\") */\n      tag_316\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_305\n      jump\t// in\n    tag_316:\n      pop\n        /* \"contracts/Web3BetsFO.sol\":4469:4481  systemAdmins */\n      0x0a\n        /* \"contracts/Web3BetsFO.sol\":4469:4493  systemAdmins.push(_addr) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      swap1\n      swap2\n      sstore\n      0xc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8\n      add\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":4503:4516  admins[_addr] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":4503:4509  admins */\n      0x0d\n        /* \"contracts/Web3BetsFO.sol\":4469:4493  systemAdmins.push(_addr) */\n      0x20\n        /* \"contracts/Web3BetsFO.sol\":4503:4516  admins[_addr] */\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Web3BetsFO.sol\":4503:4524  admins[_addr] = _addr */\n      dup1\n      sload\n      swap1\n      swap3\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/Web3BetsFO.sol\":4185:4531  function addSystemAdmin(address _addr)... */\n      jump\t// out\n        /* \"contracts/Web3BetsFO.sol\":5304:5709  function deleteEventAdmin(address _eventOwner) external onlySystemAdmin {... */\n    tag_160:\n        /* \"contracts/Web3BetsFO.sol\":1595:1620  isSystemAdmin(msg.sender) */\n      tag_320\n        /* \"contracts/Web3BetsFO.sol\":1609:1619  msg.sender */\n      caller\n        /* \"contracts/Web3BetsFO.sol\":1595:1608  isSystemAdmin */\n      tag_90\n        /* \"contracts/Web3BetsFO.sol\":1595:1620  isSystemAdmin(msg.sender) */\n      jump\t// in\n    tag_320:\n        /* \"contracts/Web3BetsFO.sol\":1574:1688  require(... */\n      tag_321\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_321:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":5395:5419  eventOwners[_eventOwner] */\n      dup2\n      dup2\n      and\n        /* \"contracts/Web3BetsFO.sol\":5431:5432  0 */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":5395:5419  eventOwners[_eventOwner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":5395:5406  eventOwners */\n      0x0e\n        /* \"contracts/Web3BetsFO.sol\":5395:5419  eventOwners[_eventOwner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      and\n        /* \"contracts/Web3BetsFO.sol\":5386:5457  require (eventOwners[_eventOwner] != address(0), \"Invalid event owner\") */\n      tag_324\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_211\n      jump\t// in\n    tag_324:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":5483:5507  eventOwners[_eventOwner] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":5483:5494  eventOwners */\n      0x0e\n        /* \"contracts/Web3BetsFO.sol\":5483:5507  eventOwners[_eventOwner] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Web3BetsFO.sol\":5476:5507  delete eventOwners[_eventOwner] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"contracts/Web3BetsFO.sol\":5518:5703  for (uint256 i = 0; i < eventAdmins.length; i++) {... */\n    tag_326:\n        /* \"contracts/Web3BetsFO.sol\":5542:5553  eventAdmins */\n      0x0b\n        /* \"contracts/Web3BetsFO.sol\":5542:5560  eventAdmins.length */\n      sload\n        /* \"contracts/Web3BetsFO.sol\":5538:5560  i < eventAdmins.length */\n      dup2\n      lt\n        /* \"contracts/Web3BetsFO.sol\":5518:5703  for (uint256 i = 0; i < eventAdmins.length; i++) {... */\n      iszero\n      tag_213\n      jumpi\n        /* \"contracts/Web3BetsFO.sol\":5603:5614  _eventOwner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":5585:5614  eventAdmins[i] == _eventOwner */\n      and\n        /* \"contracts/Web3BetsFO.sol\":5585:5596  eventAdmins */\n      0x0b\n        /* \"contracts/Web3BetsFO.sol\":5597:5598  i */\n      dup3\n        /* \"contracts/Web3BetsFO.sol\":5585:5599  eventAdmins[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_329\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_329:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Web3BetsFO.sol\":5585:5614  eventAdmins[i] == _eventOwner */\n      eq\n        /* \"contracts/Web3BetsFO.sol\":5581:5693  if (eventAdmins[i] == _eventOwner) {... */\n      iszero\n      tag_331\n      jumpi\n        /* \"contracts/Web3BetsFO.sol\":5641:5652  eventAdmins */\n      0x0b\n        /* \"contracts/Web3BetsFO.sol\":5653:5654  i */\n      dup2\n        /* \"contracts/Web3BetsFO.sol\":5641:5655  eventAdmins[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_218\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n        /* \"contracts/Web3BetsFO.sol\":5581:5693  if (eventAdmins[i] == _eventOwner) {... */\n    tag_331:\n        /* \"contracts/Web3BetsFO.sol\":5562:5565  i++ */\n      dup1\n      tag_334\n      dup2\n      tag_189\n      jump\t// in\n    tag_334:\n      swap2\n      pop\n      pop\n        /* \"contracts/Web3BetsFO.sol\":5518:5703  for (uint256 i = 0; i < eventAdmins.length; i++) {... */\n      jump(tag_326)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":763:968  function safeTransfer(... */\n    tag_261:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":902:960  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1764:1796   */\n      dup5\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":902:960  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":1746:1797   */\n      mstore\n        /* \"#utility.yul\":1813:1831   */\n      0x44\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":1806:1840   */\n      dup6\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":902:960  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      dup4\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":1719:1737   */\n      0x64\n      swap1\n      swap3\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":902:960  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      dup4\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0xa9059cbb)\n      or\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      dup4\n      mload\n      dup1\n      dup6\n      add\n      swap1\n      swap5\n      mstore\n      dup1\n      dup5\n      mstore\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      swap1\n      dup5\n      add\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":875:961  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_262\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":895:900  token */\n      dup7\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":902:960  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      swap2\n      0x00\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_341\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4219  address(token).functionCall */\n      dup6\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":902:960  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4219  address(token).functionCall */\n      tag_342\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      jump\t// in\n    tag_341:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4292  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4166:4261  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4296  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4271:4447  if (returndata.length > 0) {... */\n      tag_262\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4370:4380  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4359:4389  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_344\n      swap2\n      swap1\n      tag_345\n      jump\t// in\n    tag_344:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4351:4436  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_262\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7405:7407   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4351:4436  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7387:7408   */\n      mstore\n        /* \"#utility.yul\":7444:7446   */\n      0x2a\n        /* \"#utility.yul\":7424:7442   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7417:7447   */\n      mstore\n        /* \"#utility.yul\":7483:7517   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":7463:7481   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7456:7518   */\n      mstore\n      shl(0xb2, 0x1bdd081cdd58d8d95959)\n        /* \"#utility.yul\":7534:7552   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7527:7567   */\n      mstore\n        /* \"#utility.yul\":7584:7603   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4351:4436  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_166\n        /* \"#utility.yul\":7377:7609   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n    tag_342:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3994:4006  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_350\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4047:4053  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4055:4059  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4061:4062  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4064:4076  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4046  functionCallWithValue */\n      tag_351\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_350:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4018:4077  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n    tag_349:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n    tag_351:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5113:5125  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5170:5175  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5166  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5175  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_353\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3542:3544   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3524:3545   */\n      mstore\n        /* \"#utility.yul\":3581:3583   */\n      0x26\n        /* \"#utility.yul\":3561:3579   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3554:3584   */\n      mstore\n        /* \"#utility.yul\":3620:3654   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":3600:3618   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3593:3655   */\n      mstore\n      shl(0xd2, 0x1c8818d85b1b)\n        /* \"#utility.yul\":3671:3689   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3664:3700   */\n      mstore\n        /* \"#utility.yul\":3717:3736   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_166\n        /* \"#utility.yul\":3514:3742   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n    tag_353:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      dup6\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      tag_358\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6350:6352   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6332:6353   */\n      mstore\n        /* \"#utility.yul\":6389:6391   */\n      0x1d\n        /* \"#utility.yul\":6369:6387   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6362:6392   */\n      mstore\n        /* \"#utility.yul\":6428:6459   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":6408:6426   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6401:6460   */\n      mstore\n        /* \"#utility.yul\":6477:6495   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      tag_166\n        /* \"#utility.yul\":6322:6501   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n    tag_358:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5300:5312  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5314:5337  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5347  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5352  target.call */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5360:5365  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5367:5371  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5372  target.call{value: value}(data) */\n      mload(0x40)\n      tag_361\n      swap2\n      swap1\n      tag_362\n      jump\t// in\n    tag_361:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_365\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_364)\n    tag_365:\n      0x60\n      swap2\n      pop\n    tag_364:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5299:5372  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      tag_366\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5406:5413  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5415:5425  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5427:5439  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5405  verifyCallResult */\n      tag_367\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_366:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5382:5440  return verifyCallResult(success, returndata, errorMessage) */\n      swap8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8303  function verifyCallResult(... */\n    tag_367:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7707:7719  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7735:7742  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8297  if (success) {... */\n      iszero\n      tag_370\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7765:7775  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7758:7775  return returndata */\n      jump(tag_349)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8297  if (success) {... */\n    tag_370:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7893  returndata.length */\n      dup3\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7897  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8287  if (returndata.length > 0) {... */\n      tag_372\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8120:8130  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8114:8131  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8180:8195  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8167:8177  returndata */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8163:8165  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8159:8178  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8152:8196  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8069:8214  {... */\n    tag_372:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8259:8271  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8252:8272  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap2\n      swap1\n      tag_375\n      jump\t// in\n        /* \"#utility.yul\":14:320   */\n    tag_61:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:96   */\n      iszero\n      tag_378\n      jumpi\n        /* \"#utility.yul\":147:153   */\n      dup1\n        /* \"#utility.yul\":139:145   */\n      dup2\n        /* \"#utility.yul\":132:154   */\n      revert\n        /* \"#utility.yul\":94:96   */\n    tag_378:\n        /* \"#utility.yul\":178:201   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":230:261   */\n      dup2\n      and\n        /* \"#utility.yul\":220:262   */\n      dup2\n      eq\n        /* \"#utility.yul\":210:212   */\n      tag_349\n      jumpi\n        /* \"#utility.yul\":281:287   */\n      dup2\n        /* \"#utility.yul\":273:279   */\n      dup3\n        /* \"#utility.yul\":266:288   */\n      revert\n        /* \"#utility.yul\":325:622   */\n    tag_345:\n        /* \"#utility.yul\":392:398   */\n      0x00\n        /* \"#utility.yul\":445:447   */\n      0x20\n        /* \"#utility.yul\":433:442   */\n      dup3\n        /* \"#utility.yul\":424:431   */\n      dup5\n        /* \"#utility.yul\":420:443   */\n      sub\n        /* \"#utility.yul\":416:448   */\n      slt\n        /* \"#utility.yul\":413:415   */\n      iszero\n      tag_381\n      jumpi\n        /* \"#utility.yul\":466:472   */\n      dup1\n        /* \"#utility.yul\":458:464   */\n      dup2\n        /* \"#utility.yul\":451:473   */\n      revert\n        /* \"#utility.yul\":413:415   */\n    tag_381:\n        /* \"#utility.yul\":503:512   */\n      dup2\n        /* \"#utility.yul\":497:513   */\n      mload\n        /* \"#utility.yul\":556:561   */\n      dup1\n        /* \"#utility.yul\":549:562   */\n      iszero\n        /* \"#utility.yul\":542:563   */\n      iszero\n        /* \"#utility.yul\":535:540   */\n      dup2\n        /* \"#utility.yul\":532:564   */\n      eq\n        /* \"#utility.yul\":522:524   */\n      tag_349\n      jumpi\n        /* \"#utility.yul\":583:589   */\n      dup2\n        /* \"#utility.yul\":575:581   */\n      dup3\n        /* \"#utility.yul\":568:590   */\n      revert\n        /* \"#utility.yul\":627:817   */\n    tag_46:\n        /* \"#utility.yul\":686:692   */\n      0x00\n        /* \"#utility.yul\":739:741   */\n      0x20\n        /* \"#utility.yul\":727:736   */\n      dup3\n        /* \"#utility.yul\":718:725   */\n      dup5\n        /* \"#utility.yul\":714:737   */\n      sub\n        /* \"#utility.yul\":710:742   */\n      slt\n        /* \"#utility.yul\":707:709   */\n      iszero\n      tag_384\n      jumpi\n        /* \"#utility.yul\":760:766   */\n      dup1\n        /* \"#utility.yul\":752:758   */\n      dup2\n        /* \"#utility.yul\":745:767   */\n      revert\n        /* \"#utility.yul\":707:709   */\n    tag_384:\n      pop\n        /* \"#utility.yul\":788:811   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":697:817   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":822:1080   */\n    tag_94:\n        /* \"#utility.yul\":890:896   */\n      0x00\n        /* \"#utility.yul\":898:904   */\n      dup1\n        /* \"#utility.yul\":951:953   */\n      0x40\n        /* \"#utility.yul\":939:948   */\n      dup4\n        /* \"#utility.yul\":930:937   */\n      dup6\n        /* \"#utility.yul\":926:949   */\n      sub\n        /* \"#utility.yul\":922:954   */\n      slt\n        /* \"#utility.yul\":919:921   */\n      iszero\n      tag_386\n      jumpi\n        /* \"#utility.yul\":972:978   */\n      dup1\n        /* \"#utility.yul\":964:970   */\n      dup2\n        /* \"#utility.yul\":957:979   */\n      revert\n        /* \"#utility.yul\":919:921   */\n    tag_386:\n      pop\n      pop\n        /* \"#utility.yul\":1000:1023   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":1070:1072   */\n      0x20\n        /* \"#utility.yul\":1055:1073   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1042:1074   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":909:1080   */\n      jump\t// out\n        /* \"#utility.yul\":1085:1359   */\n    tag_362:\n        /* \"#utility.yul\":1214:1217   */\n      0x00\n        /* \"#utility.yul\":1252:1258   */\n      dup3\n        /* \"#utility.yul\":1246:1259   */\n      mload\n        /* \"#utility.yul\":1268:1321   */\n      tag_388\n        /* \"#utility.yul\":1314:1320   */\n      dup2\n        /* \"#utility.yul\":1309:1312   */\n      dup5\n        /* \"#utility.yul\":1302:1306   */\n      0x20\n        /* \"#utility.yul\":1294:1300   */\n      dup8\n        /* \"#utility.yul\":1290:1307   */\n      add\n        /* \"#utility.yul\":1268:1321   */\n      tag_389\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":1337:1353   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":1222:1359   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2043:2426   */\n    tag_375:\n        /* \"#utility.yul\":2192:2194   */\n      0x20\n        /* \"#utility.yul\":2181:2190   */\n      dup2\n        /* \"#utility.yul\":2174:2195   */\n      mstore\n        /* \"#utility.yul\":2155:2159   */\n      0x00\n        /* \"#utility.yul\":2224:2230   */\n      dup3\n        /* \"#utility.yul\":2218:2231   */\n      mload\n        /* \"#utility.yul\":2267:2273   */\n      dup1\n        /* \"#utility.yul\":2262:2264   */\n      0x20\n        /* \"#utility.yul\":2251:2260   */\n      dup5\n        /* \"#utility.yul\":2247:2265   */\n      add\n        /* \"#utility.yul\":2240:2274   */\n      mstore\n        /* \"#utility.yul\":2283:2349   */\n      tag_394\n        /* \"#utility.yul\":2342:2348   */\n      dup2\n        /* \"#utility.yul\":2337:2339   */\n      0x40\n        /* \"#utility.yul\":2326:2335   */\n      dup6\n        /* \"#utility.yul\":2322:2340   */\n      add\n        /* \"#utility.yul\":2317:2319   */\n      0x20\n        /* \"#utility.yul\":2309:2315   */\n      dup8\n        /* \"#utility.yul\":2305:2320   */\n      add\n        /* \"#utility.yul\":2283:2349   */\n      tag_389\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":2410:2412   */\n      0x1f\n        /* \"#utility.yul\":2389:2404   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2385:2414   */\n      and\n        /* \"#utility.yul\":2370:2415   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2417:2419   */\n      0x40\n        /* \"#utility.yul\":2366:2420   */\n      add\n      swap3\n        /* \"#utility.yul\":2164:2426   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4980:5386   */\n    tag_167:\n        /* \"#utility.yul\":5182:5184   */\n      0x20\n        /* \"#utility.yul\":5164:5185   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5221:5223   */\n      0x2a\n        /* \"#utility.yul\":5201:5219   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5194:5224   */\n      mstore\n        /* \"#utility.yul\":5260:5294   */\n      0x596f752068617665206e6f2070726976696c65676520746f2072756e20746869\n        /* \"#utility.yul\":5255:5257   */\n      0x40\n        /* \"#utility.yul\":5240:5258   */\n      dup3\n      add\n        /* \"#utility.yul\":5233:5295   */\n      mstore\n      shl(0xb1, 0x3990333ab731ba34b7b7)\n        /* \"#utility.yul\":5326:5328   */\n      0x60\n        /* \"#utility.yul\":5311:5329   */\n      dup3\n      add\n        /* \"#utility.yul\":5304:5344   */\n      mstore\n        /* \"#utility.yul\":5376:5379   */\n      0x80\n        /* \"#utility.yul\":5361:5380   */\n      add\n      swap1\n        /* \"#utility.yul\":5154:5386   */\n      jump\t// out\n        /* \"#utility.yul\":6506:6849   */\n    tag_211:\n        /* \"#utility.yul\":6708:6710   */\n      0x20\n        /* \"#utility.yul\":6690:6711   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6747:6749   */\n      0x13\n        /* \"#utility.yul\":6727:6745   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6720:6750   */\n      mstore\n      shl(0x69, 0x24b73b30b634b21032bb32b73a1037bbb732b9)\n        /* \"#utility.yul\":6781:6783   */\n      0x40\n        /* \"#utility.yul\":6766:6784   */\n      dup3\n      add\n        /* \"#utility.yul\":6759:6808   */\n      mstore\n        /* \"#utility.yul\":6840:6842   */\n      0x60\n        /* \"#utility.yul\":6825:6843   */\n      add\n      swap1\n        /* \"#utility.yul\":6680:6849   */\n      jump\t// out\n        /* \"#utility.yul\":8018:8500   */\n    tag_305:\n        /* \"#utility.yul\":8220:8222   */\n      0x20\n        /* \"#utility.yul\":8202:8223   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8259:8261   */\n      0x4e\n        /* \"#utility.yul\":8239:8257   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8232:8262   */\n      mstore\n        /* \"#utility.yul\":8298:8332   */\n      0x796f75206d7573742073657420686f6c6465727320616e642065636f73797374\n        /* \"#utility.yul\":8293:8295   */\n      0x40\n        /* \"#utility.yul\":8278:8296   */\n      dup3\n      add\n        /* \"#utility.yul\":8271:8333   */\n      mstore\n        /* \"#utility.yul\":8369:8403   */\n      0x6d654164647265737320616464726573736573206265666f726520616464696e\n        /* \"#utility.yul\":8364:8366   */\n      0x60\n        /* \"#utility.yul\":8349:8367   */\n      dup3\n      add\n        /* \"#utility.yul\":8342:8404   */\n      mstore\n      shl(0x90, 0x67206576656e74206f776e657273)\n        /* \"#utility.yul\":8435:8438   */\n      0x80\n        /* \"#utility.yul\":8420:8439   */\n      dup3\n      add\n        /* \"#utility.yul\":8413:8458   */\n      mstore\n        /* \"#utility.yul\":8490:8493   */\n      0xa0\n        /* \"#utility.yul\":8475:8494   */\n      add\n      swap1\n        /* \"#utility.yul\":8192:8500   */\n      jump\t// out\n        /* \"#utility.yul\":8687:8815   */\n    tag_200:\n        /* \"#utility.yul\":8727:8730   */\n      0x00\n        /* \"#utility.yul\":8758:8759   */\n      dup3\n        /* \"#utility.yul\":8754:8760   */\n      not\n        /* \"#utility.yul\":8751:8752   */\n      dup3\n        /* \"#utility.yul\":8748:8761   */\n      gt\n        /* \"#utility.yul\":8745:8747   */\n      iszero\n      tag_413\n      jumpi\n        /* \"#utility.yul\":8764:8782   */\n      tag_413\n      tag_414\n      jump\t// in\n    tag_413:\n      pop\n        /* \"#utility.yul\":8800:8809   */\n      add\n      swap1\n        /* \"#utility.yul\":8735:8815   */\n      jump\t// out\n        /* \"#utility.yul\":8820:9037   */\n    tag_251:\n        /* \"#utility.yul\":8860:8861   */\n      0x00\n        /* \"#utility.yul\":8886:8887   */\n      dup3\n        /* \"#utility.yul\":8876:8878   */\n      tag_416\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":8911:8942   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8965:8969   */\n      0x12\n        /* \"#utility.yul\":8962:8963   */\n      0x04\n        /* \"#utility.yul\":8955:8970   */\n      mstore\n        /* \"#utility.yul\":8993:8997   */\n      0x24\n        /* \"#utility.yul\":8918:8919   */\n      dup2\n        /* \"#utility.yul\":8983:8998   */\n      revert\n        /* \"#utility.yul\":8876:8878   */\n    tag_416:\n      pop\n        /* \"#utility.yul\":9022:9031   */\n      div\n      swap1\n        /* \"#utility.yul\":8866:9037   */\n      jump\t// out\n        /* \"#utility.yul\":9042:9210   */\n    tag_249:\n        /* \"#utility.yul\":9082:9089   */\n      0x00\n        /* \"#utility.yul\":9148:9149   */\n      dup2\n        /* \"#utility.yul\":9144:9145   */\n      0x00\n        /* \"#utility.yul\":9140:9146   */\n      not\n        /* \"#utility.yul\":9136:9150   */\n      div\n        /* \"#utility.yul\":9133:9134   */\n      dup4\n        /* \"#utility.yul\":9130:9151   */\n      gt\n        /* \"#utility.yul\":9125:9126   */\n      dup3\n        /* \"#utility.yul\":9118:9127   */\n      iszero\n        /* \"#utility.yul\":9111:9128   */\n      iszero\n        /* \"#utility.yul\":9107:9152   */\n      and\n        /* \"#utility.yul\":9104:9106   */\n      iszero\n      tag_419\n      jumpi\n        /* \"#utility.yul\":9155:9173   */\n      tag_419\n      tag_414\n      jump\t// in\n    tag_419:\n      pop\n        /* \"#utility.yul\":9195:9204   */\n      mul\n      swap1\n        /* \"#utility.yul\":9094:9210   */\n      jump\t// out\n        /* \"#utility.yul\":9215:9473   */\n    tag_389:\n        /* \"#utility.yul\":9287:9288   */\n      0x00\n        /* \"#utility.yul\":9297:9410   */\n    tag_421:\n        /* \"#utility.yul\":9311:9317   */\n      dup4\n        /* \"#utility.yul\":9308:9309   */\n      dup2\n        /* \"#utility.yul\":9305:9318   */\n      lt\n        /* \"#utility.yul\":9297:9410   */\n      iszero\n      tag_423\n      jumpi\n        /* \"#utility.yul\":9387:9398   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":9381:9399   */\n      mload\n        /* \"#utility.yul\":9368:9379   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":9361:9400   */\n      mstore\n        /* \"#utility.yul\":9333:9335   */\n      0x20\n        /* \"#utility.yul\":9326:9336   */\n      add\n        /* \"#utility.yul\":9297:9410   */\n      jump(tag_421)\n    tag_423:\n        /* \"#utility.yul\":9428:9434   */\n      dup4\n        /* \"#utility.yul\":9425:9426   */\n      dup2\n        /* \"#utility.yul\":9422:9435   */\n      gt\n        /* \"#utility.yul\":9419:9421   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":9463:9464   */\n      0x00\n        /* \"#utility.yul\":9454:9460   */\n      dup5\n        /* \"#utility.yul\":9449:9452   */\n      dup5\n        /* \"#utility.yul\":9445:9461   */\n      add\n        /* \"#utility.yul\":9438:9465   */\n      mstore\n        /* \"#utility.yul\":9419:9421   */\n    tag_424:\n      pop\n        /* \"#utility.yul\":9268:9473   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9478:9613   */\n    tag_189:\n        /* \"#utility.yul\":9517:9520   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":9538:9555   */\n      dup3\n      eq\n        /* \"#utility.yul\":9535:9537   */\n      iszero\n      tag_427\n      jumpi\n        /* \"#utility.yul\":9558:9576   */\n      tag_427\n      tag_414\n      jump\t// in\n    tag_427:\n      pop\n        /* \"#utility.yul\":9605:9606   */\n      0x01\n        /* \"#utility.yul\":9594:9607   */\n      add\n      swap1\n        /* \"#utility.yul\":9525:9613   */\n      jump\t// out\n        /* \"#utility.yul\":9618:9745   */\n    tag_414:\n        /* \"#utility.yul\":9679:9689   */\n      0x4e487b71\n        /* \"#utility.yul\":9674:9677   */\n      0xe0\n        /* \"#utility.yul\":9670:9690   */\n      shl\n        /* \"#utility.yul\":9667:9668   */\n      0x00\n        /* \"#utility.yul\":9660:9691   */\n      mstore\n        /* \"#utility.yul\":9710:9714   */\n      0x11\n        /* \"#utility.yul\":9707:9708   */\n      0x04\n        /* \"#utility.yul\":9700:9715   */\n      mstore\n        /* \"#utility.yul\":9734:9738   */\n      0x24\n        /* \"#utility.yul\":9731:9732   */\n      0x00\n        /* \"#utility.yul\":9724:9739   */\n      revert\n\n    auxdata: 0xa264697066735822122057c9a09aa8d99a9519f676de745450bc1d3c21a80586677c4f86c4da45985d8c64736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405260326007819055600855600a600955600354601080546001600160a01b0319166001600160a01b0390921691909117905534801561004157600080fd5b50600080546001600160a01b031916331790556115ef806100636000396000f3fe608060405234801561001057600080fd5b50600436106102065760003560e01c806380036b341161011a578063cbf89c63116100ad578063d54948691161007c578063d54948691461046e578063d6c1ca2614610481578063e3c0ed7814610494578063ed9f7eb9146104a7578063f2210b2c146104ba57600080fd5b8063cbf89c6314610422578063ce606ee014610435578063d37e87fd14610448578063d43cbb151461045b57600080fd5b8063992642e5116100e9578063992642e5146103e95780639b460aa9146103fc578063a8e01b281461040f578063cb1466221461029c57600080fd5b806380036b341461037b57806385d8349b146103a457806389fefbe1146103cd5780639376b94c146103e057600080fd5b8063387440e61161019d5780634fb431991161016c5780634fb431991461031c578063648868801461032f578063681ada8c146103425780636fdbd3f614610355578063709ec8b41461036857600080fd5b8063387440e6146102c0578063429b62e5146102d7578063486d1e50146103005780634dcc434a1461030957600080fd5b806323af4e17116101d957806323af4e17146102745780632e1a961814610289578063327372e414610274578063332daccf1461029c57600080fd5b8063026c1a4d1461020b57806306a5cb3a1461023b57806306ae70951461024e5780630da4ee5014610261575b600080fd5b61021e61021936600461138e565b6104cd565b6040516001600160a01b0390911681526020015b60405180910390f35b60015461021e906001600160a01b031681565b60055461021e906001600160a01b031681565b60025461021e906001600160a01b031681565b610287610282366004611347565b6104f7565b005b60065461021e906001600160a01b031681565b6102b06102aa366004611347565b50600090565b6040519015158152602001610232565b6102c960095481565b604051908152602001610232565b61021e6102e5366004611347565b600d602052600090815260409020546001600160a01b031681565b6102c960075481565b610287610317366004611347565b610547565b6102b061032a366004611347565b61058e565b61028761033d3660046113a6565b610628565b610287610350366004611347565b61076e565b60045461021e906001600160a01b031681565b61021e61037636600461138e565b610895565b61021e610389366004611347565b600f602052600090815260409020546001600160a01b031681565b61021e6103b2366004611347565b600e602052600090815260409020546001600160a01b031681565b6102876103db366004611347565b6108a5565b6102c960085481565b60035461021e906001600160a01b031681565b61028761040a366004611347565b6108ec565b61028761041d366004611347565b6109d6565b61028761043036600461138e565b610a1d565b60005461021e906001600160a01b031681565b61021e61045636600461138e565b610bb1565b610287610469366004611347565b610bc1565b61028761047c366004611347565b610c08565b61028761048f36600461138e565b610d13565b6102876104a2366004611347565b610dbe565b6102876104b5366004611347565b610e83565b6102876104c8366004611347565b610fb1565b600a81815481106104dd57600080fd5b6000918252602090912001546001600160a01b0316905081565b6105003361058e565b6105255760405162461bcd60e51b815260040161051c90611416565b60405180910390fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6105503361058e565b61056c5760405162461bcd60e51b815260040161051c90611416565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038181166000908152600d6020526040812054909116156106205760005b600a5481101561061e57826001600160a01b0316600a82815481106105e857634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b0316141561060c5750600192915050565b8061061681611588565b9150506105b3565b505b506000919050565b6106313361058e565b61064d5760405162461bcd60e51b815260040161051c90611416565b6064821115801561065f575060648111155b6106e45760405162461bcd60e51b815260206004820152604a60248201527f5669672070657263656e746167657320736861726573206d757374206265206560448201527f787072657373656420696e206120203020746f2031303020726174696f2e2045606482015269078616d706c653a2033360b41b608482015260a40161051c565b6106ee8183611501565b6064146107635760405162461bcd60e51b815260206004820152603960248201527f5468652073756d206f6620616c6c205669672070657263656e7461676520736860448201527f61726573206d75737420626520657175616c20746f2031303000000000000000606482015260840161051c565b600791909155600855565b6107773361058e565b6107935760405162461bcd60e51b815260040161051c90611416565b6001600160a01b038181166000908152600f6020526040902054166107ca5760405162461bcd60e51b815260040161051c90611460565b6001600160a01b0381166000908152600f6020526040812080546001600160a01b03191690555b600c5481101561089157816001600160a01b0316600c828154811061082657634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b0316141561087f57600c818154811061086257634e487b7160e01b600052603260045260246000fd5b600091825260209091200180546001600160a01b03191690555050565b8061088981611588565b9150506107f1565b5050565b600c81815481106104dd57600080fd5b6108ae3361058e565b6108ca5760405162461bcd60e51b815260040161051c90611416565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6108f53361058e565b6109115760405162461bcd60e51b815260040161051c90611416565b6001600160a01b038082166000908152600f6020526040902054829116156109725760405162461bcd60e51b8152602060048201526014602482015273185b1c9958591e481a5b88189b1858dadb1a5cdd60621b604482015260640161051c565b50600b8054600181019091557f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90180546001600160a01b039092166001600160a01b031992831681179091556000818152600e602052604090208054909216179055565b6109df3361058e565b6109fb5760405162461bcd60e51b815260040161051c90611416565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60008111610a795760405162461bcd60e51b815260206004820152602360248201527f626574206561726e696e6773206d75737420626520677265617465722074686160448201526206e20360ec1b606482015260840161051c565b6000606460075483610a8b9190611539565b610a959190611519565b905060008111610af55760405162461bcd60e51b815260206004820152602560248201527f686f6c6465727327207368617265206d75737420626520677265617465722074604482015264068616e20360dc1b606482015260840161051c565b6000606460085484610b079190611539565b610b119190611519565b905060008111610b725760405162461bcd60e51b815260206004820152602660248201527f65636f73797374656d207368617265206d75737420626520677265617465722060448201526507468616e20360d41b606482015260840161051c565b600154601054610b8f916001600160a01b039182169116836110b7565b600254601054610bac916001600160a01b039182169116846110b7565b505050565b600b81815481106104dd57600080fd5b610bca3361058e565b610be65760405162461bcd60e51b815260040161051c90611416565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610c325760405162461bcd60e51b815260040161051c90611416565b6001600160a01b038181166000908152600d602052604090205416610c695760405162461bcd60e51b815260040161051c90611460565b6001600160a01b0381166000908152600d6020526040812080546001600160a01b03191690555b600a5481101561089157816001600160a01b0316600a8281548110610cc557634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03161415610d0157600a818154811061086257634e487b7160e01b600052603260045260246000fd5b80610d0b81611588565b915050610c90565b610d1c3361058e565b610d385760405162461bcd60e51b815260040161051c90611416565b600a8110610db95760405162461bcd60e51b815260206004820152604260248201527f5669672070657263656e74616765206d7573742062652065787072657373656460448201527f20696e203020746f2031302070657263656e746167652e204578616d706c653a606482015261101b60f11b608482015260a40161051c565b600955565b610dc73361058e565b610de35760405162461bcd60e51b815260040161051c90611416565b6001600160a01b038082166000908152600e602052604090205482911615610e465760405162461bcd60e51b815260206004820152601660248201527530b63932b0b23c9030b71032bb32b73a1030b236b4b760511b604482015260640161051c565b6002546001600160a01b03161580610e6757506001546001600160a01b0316155b6109725760405162461bcd60e51b815260040161051c9061148d565b6000546001600160a01b03163314610ead5760405162461bcd60e51b815260040161051c90611416565b6001600160a01b038082166000908152600d602052604090205482911615610f105760405162461bcd60e51b815260206004820152601660248201527530b63932b0b23c90309039bcb9ba32b69030b236b4b760511b604482015260640161051c565b6002546001600160a01b03161580610f3157506001546001600160a01b0316155b610f4d5760405162461bcd60e51b815260040161051c9061148d565b50600a8054600181019091557fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80180546001600160a01b039092166001600160a01b031992831681179091556000818152600d602052604090208054909216179055565b610fba3361058e565b610fd65760405162461bcd60e51b815260040161051c90611416565b6001600160a01b038181166000908152600e60205260409020541661100d5760405162461bcd60e51b815260040161051c90611460565b6001600160a01b0381166000908152600e6020526040812080546001600160a01b03191690555b600b5481101561089157816001600160a01b0316600b828154811061106957634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b031614156110a557600b818154811061086257634e487b7160e01b600052603260045260246000fd5b806110af81611588565b915050611034565b604080516001600160a01b03848116602483015260448083018590528351808403909101815260649092018352602080830180516001600160e01b031663a9059cbb60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656490840152610bac928692916000916111479185169084906111c4565b805190915015610bac5780806020019051810190611165919061136e565b610bac5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161051c565b60606111d384846000856111dd565b90505b9392505050565b60608247101561123e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161051c565b6001600160a01b0385163b6112955760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161051c565b600080866001600160a01b031685876040516112b191906113c7565b60006040518083038185875af1925050503d80600081146112ee576040519150601f19603f3d011682016040523d82523d6000602084013e6112f3565b606091505b509150915061130382828661130e565b979650505050505050565b6060831561131d5750816111d6565b82511561132d5782518084602001fd5b8160405162461bcd60e51b815260040161051c91906113e3565b600060208284031215611358578081fd5b81356001600160a01b03811681146111d6578182fd5b60006020828403121561137f578081fd5b815180151581146111d6578182fd5b60006020828403121561139f578081fd5b5035919050565b600080604083850312156113b8578081fd5b50508035926020909101359150565b600082516113d9818460208701611558565b9190910192915050565b6020815260008251806020840152611402816040850160208701611558565b601f01601f19169190910160400192915050565b6020808252602a908201527f596f752068617665206e6f2070726976696c65676520746f2072756e207468696040820152693990333ab731ba34b7b760b11b606082015260800190565b60208082526013908201527224b73b30b634b21032bb32b73a1037bbb732b960691b604082015260600190565b6020808252604e908201527f796f75206d7573742073657420686f6c6465727320616e642065636f7379737460408201527f6d654164647265737320616464726573736573206265666f726520616464696e60608201526d67206576656e74206f776e65727360901b608082015260a00190565b60008219821115611514576115146115a3565b500190565b60008261153457634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611553576115536115a3565b500290565b60005b8381101561157357818101518382015260200161155b565b83811115611582576000848401525b50505050565b600060001982141561159c5761159c6115a3565b5060010190565b634e487b7160e01b600052601160045260246000fdfea264697066735822122057c9a09aa8d99a9519f676de745450bc1d3c21a80586677c4f86c4da45985d8c64736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x32 PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0x8 SSTORE PUSH1 0xA PUSH1 0x9 SSTORE PUSH1 0x3 SLOAD PUSH1 0x10 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x15EF DUP1 PUSH2 0x63 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x206 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x80036B34 GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xCBF89C63 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD5494869 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD5494869 EQ PUSH2 0x46E JUMPI DUP1 PUSH4 0xD6C1CA26 EQ PUSH2 0x481 JUMPI DUP1 PUSH4 0xE3C0ED78 EQ PUSH2 0x494 JUMPI DUP1 PUSH4 0xED9F7EB9 EQ PUSH2 0x4A7 JUMPI DUP1 PUSH4 0xF2210B2C EQ PUSH2 0x4BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCBF89C63 EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0xCE606EE0 EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0xD37E87FD EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0xD43CBB15 EQ PUSH2 0x45B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x992642E5 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x992642E5 EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0x9B460AA9 EQ PUSH2 0x3FC JUMPI DUP1 PUSH4 0xA8E01B28 EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0xCB146622 EQ PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x80036B34 EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0x85D8349B EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0x89FEFBE1 EQ PUSH2 0x3CD JUMPI DUP1 PUSH4 0x9376B94C EQ PUSH2 0x3E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x387440E6 GT PUSH2 0x19D JUMPI DUP1 PUSH4 0x4FB43199 GT PUSH2 0x16C JUMPI DUP1 PUSH4 0x4FB43199 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0x64886880 EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x681ADA8C EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x6FDBD3F6 EQ PUSH2 0x355 JUMPI DUP1 PUSH4 0x709EC8B4 EQ PUSH2 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x387440E6 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x429B62E5 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x486D1E50 EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0x4DCC434A EQ PUSH2 0x309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23AF4E17 GT PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x23AF4E17 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x2E1A9618 EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0x327372E4 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x332DACCF EQ PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x26C1A4D EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x6A5CB3A EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x6AE7095 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0xDA4EE50 EQ PUSH2 0x261 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21E PUSH2 0x219 CALLDATASIZE PUSH1 0x4 PUSH2 0x138E JUMP JUMPDEST PUSH2 0x4CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x21E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x21E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x21E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x287 PUSH2 0x282 CALLDATASIZE PUSH1 0x4 PUSH2 0x1347 JUMP JUMPDEST PUSH2 0x4F7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x21E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2B0 PUSH2 0x2AA CALLDATASIZE PUSH1 0x4 PUSH2 0x1347 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x232 JUMP JUMPDEST PUSH2 0x2C9 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x232 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x2E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1347 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2C9 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x287 PUSH2 0x317 CALLDATASIZE PUSH1 0x4 PUSH2 0x1347 JUMP JUMPDEST PUSH2 0x547 JUMP JUMPDEST PUSH2 0x2B0 PUSH2 0x32A CALLDATASIZE PUSH1 0x4 PUSH2 0x1347 JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST PUSH2 0x287 PUSH2 0x33D CALLDATASIZE PUSH1 0x4 PUSH2 0x13A6 JUMP JUMPDEST PUSH2 0x628 JUMP JUMPDEST PUSH2 0x287 PUSH2 0x350 CALLDATASIZE PUSH1 0x4 PUSH2 0x1347 JUMP JUMPDEST PUSH2 0x76E JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x21E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x376 CALLDATASIZE PUSH1 0x4 PUSH2 0x138E JUMP JUMPDEST PUSH2 0x895 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x389 CALLDATASIZE PUSH1 0x4 PUSH2 0x1347 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x3B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1347 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x287 PUSH2 0x3DB CALLDATASIZE PUSH1 0x4 PUSH2 0x1347 JUMP JUMPDEST PUSH2 0x8A5 JUMP JUMPDEST PUSH2 0x2C9 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x21E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x287 PUSH2 0x40A CALLDATASIZE PUSH1 0x4 PUSH2 0x1347 JUMP JUMPDEST PUSH2 0x8EC JUMP JUMPDEST PUSH2 0x287 PUSH2 0x41D CALLDATASIZE PUSH1 0x4 PUSH2 0x1347 JUMP JUMPDEST PUSH2 0x9D6 JUMP JUMPDEST PUSH2 0x287 PUSH2 0x430 CALLDATASIZE PUSH1 0x4 PUSH2 0x138E JUMP JUMPDEST PUSH2 0xA1D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x21E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x456 CALLDATASIZE PUSH1 0x4 PUSH2 0x138E JUMP JUMPDEST PUSH2 0xBB1 JUMP JUMPDEST PUSH2 0x287 PUSH2 0x469 CALLDATASIZE PUSH1 0x4 PUSH2 0x1347 JUMP JUMPDEST PUSH2 0xBC1 JUMP JUMPDEST PUSH2 0x287 PUSH2 0x47C CALLDATASIZE PUSH1 0x4 PUSH2 0x1347 JUMP JUMPDEST PUSH2 0xC08 JUMP JUMPDEST PUSH2 0x287 PUSH2 0x48F CALLDATASIZE PUSH1 0x4 PUSH2 0x138E JUMP JUMPDEST PUSH2 0xD13 JUMP JUMPDEST PUSH2 0x287 PUSH2 0x4A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1347 JUMP JUMPDEST PUSH2 0xDBE JUMP JUMPDEST PUSH2 0x287 PUSH2 0x4B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1347 JUMP JUMPDEST PUSH2 0xE83 JUMP JUMPDEST PUSH2 0x287 PUSH2 0x4C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1347 JUMP JUMPDEST PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x4DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0x500 CALLER PUSH2 0x58E JUMP JUMPDEST PUSH2 0x525 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51C SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x550 CALLER PUSH2 0x58E JUMP JUMPDEST PUSH2 0x56C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51C SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND ISZERO PUSH2 0x620 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x61E JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x5E8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x60C JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x616 DUP2 PUSH2 0x1588 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5B3 JUMP JUMPDEST POP JUMPDEST POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x631 CALLER PUSH2 0x58E JUMP JUMPDEST PUSH2 0x64D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51C SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x64 DUP3 GT ISZERO DUP1 ISZERO PUSH2 0x65F JUMPI POP PUSH1 0x64 DUP2 GT ISZERO JUMPDEST PUSH2 0x6E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5669672070657263656E746167657320736861726573206D7573742062652065 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x787072657373656420696E206120203020746F2031303020726174696F2E2045 PUSH1 0x64 DUP3 ADD MSTORE PUSH10 0x78616D706C653A20333 PUSH1 0xB4 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x51C JUMP JUMPDEST PUSH2 0x6EE DUP2 DUP4 PUSH2 0x1501 JUMP JUMPDEST PUSH1 0x64 EQ PUSH2 0x763 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652073756D206F6620616C6C205669672070657263656E74616765207368 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x61726573206D75737420626520657175616C20746F2031303000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x51C JUMP JUMPDEST PUSH1 0x7 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH2 0x777 CALLER PUSH2 0x58E JUMP JUMPDEST PUSH2 0x793 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51C SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x7CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51C SWAP1 PUSH2 0x1460 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0xC SLOAD DUP2 LT ISZERO PUSH2 0x891 JUMPI DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xC DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x826 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x87F JUMPI PUSH1 0xC DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x862 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH2 0x889 DUP2 PUSH2 0x1588 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7F1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xC DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x4DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8AE CALLER PUSH2 0x58E JUMP JUMPDEST PUSH2 0x8CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51C SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x8F5 CALLER PUSH2 0x58E JUMP JUMPDEST PUSH2 0x911 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51C SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP2 AND ISZERO PUSH2 0x972 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x185B1C9958591E481A5B88189B1858DADB1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x51C JUMP JUMPDEST POP PUSH1 0xB DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x9DF CALLER PUSH2 0x58E JUMP JUMPDEST PUSH2 0x9FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51C SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xA79 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x626574206561726E696E6773206D757374206265206772656174657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E203 PUSH1 0xEC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x51C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x7 SLOAD DUP4 PUSH2 0xA8B SWAP2 SWAP1 PUSH2 0x1539 JUMP JUMPDEST PUSH2 0xA95 SWAP2 SWAP1 PUSH2 0x1519 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xAF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x686F6C6465727327207368617265206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x68616E203 PUSH1 0xDC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x51C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x8 SLOAD DUP5 PUSH2 0xB07 SWAP2 SWAP1 PUSH2 0x1539 JUMP JUMPDEST PUSH2 0xB11 SWAP2 SWAP1 PUSH2 0x1519 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xB72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x65636F73797374656D207368617265206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x7468616E203 PUSH1 0xD4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x51C JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x10 SLOAD PUSH2 0xB8F SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0x10B7 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x10 SLOAD PUSH2 0xBAC SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP5 PUSH2 0x10B7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xB DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x4DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBCA CALLER PUSH2 0x58E JUMP JUMPDEST PUSH2 0xBE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51C SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC32 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51C SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0xC69 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51C SWAP1 PUSH2 0x1460 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x891 JUMPI DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xCC5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xD01 JUMPI PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x862 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 PUSH2 0xD0B DUP2 PUSH2 0x1588 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC90 JUMP JUMPDEST PUSH2 0xD1C CALLER PUSH2 0x58E JUMP JUMPDEST PUSH2 0xD38 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51C SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0xA DUP2 LT PUSH2 0xDB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x42 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5669672070657263656E74616765206D75737420626520657870726573736564 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20696E203020746F2031302070657263656E746167652E204578616D706C653A PUSH1 0x64 DUP3 ADD MSTORE PUSH2 0x101B PUSH1 0xF1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x51C JUMP JUMPDEST PUSH1 0x9 SSTORE JUMP JUMPDEST PUSH2 0xDC7 CALLER PUSH2 0x58E JUMP JUMPDEST PUSH2 0xDE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51C SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP2 AND ISZERO PUSH2 0xE46 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x30B63932B0B23C9030B71032BB32B73A1030B236B4B7 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x51C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 PUSH2 0xE67 JUMPI POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO JUMPDEST PUSH2 0x972 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51C SWAP1 PUSH2 0x148D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51C SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP2 AND ISZERO PUSH2 0xF10 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x30B63932B0B23C90309039BCB9BA32B69030B236B4B7 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x51C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 PUSH2 0xF31 JUMPI POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO JUMPDEST PUSH2 0xF4D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51C SWAP1 PUSH2 0x148D JUMP JUMPDEST POP PUSH1 0xA DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xFBA CALLER PUSH2 0x58E JUMP JUMPDEST PUSH2 0xFD6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51C SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x100D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51C SWAP1 PUSH2 0x1460 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x891 JUMPI DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xB DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1069 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x10A5 JUMPI PUSH1 0xB DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x862 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 PUSH2 0x10AF DUP2 PUSH2 0x1588 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1034 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 SWAP1 DUP5 ADD MSTORE PUSH2 0xBAC SWAP3 DUP7 SWAP3 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1147 SWAP2 DUP6 AND SWAP1 DUP5 SWAP1 PUSH2 0x11C4 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xBAC JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1165 SWAP2 SWAP1 PUSH2 0x136E JUMP JUMPDEST PUSH2 0xBAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x51C JUMP JUMPDEST PUSH1 0x60 PUSH2 0x11D3 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x11DD JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x123E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x51C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x1295 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x51C JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x12B1 SWAP2 SWAP1 PUSH2 0x13C7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12EE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12F3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1303 DUP3 DUP3 DUP7 PUSH2 0x130E JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x131D JUMPI POP DUP2 PUSH2 0x11D6 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x132D JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51C SWAP2 SWAP1 PUSH2 0x13E3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1358 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x11D6 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x137F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x11D6 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x139F JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13B8 JUMPI DUP1 DUP2 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x13D9 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1558 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1402 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1558 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x596F752068617665206E6F2070726976696C65676520746F2072756E20746869 PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x3990333AB731BA34B7B7 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x24B73B30B634B21032BB32B73A1037BBB732B9 PUSH1 0x69 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x4E SWAP1 DUP3 ADD MSTORE PUSH32 0x796F75206D7573742073657420686F6C6465727320616E642065636F73797374 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6D654164647265737320616464726573736573206265666F726520616464696E PUSH1 0x60 DUP3 ADD MSTORE PUSH14 0x67206576656E74206F776E657273 PUSH1 0x90 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1514 JUMPI PUSH2 0x1514 PUSH2 0x15A3 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1534 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1553 JUMPI PUSH2 0x1553 PUSH2 0x15A3 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1573 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x155B JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1582 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x159C JUMPI PUSH2 0x159C PUSH2 0x15A3 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI 0xC9 LOG0 SWAP11 0xA8 0xD9 SWAP11 SWAP6 NOT 0xF6 PUSH23 0xDE745450BC1D3C21A80586677C4F86C4DA45985D8C6473 PUSH16 0x6C634300080400330000000000000000 ",
							"sourceMap": "548:6304:4:-:0;;;955:2;918:39;;;;963:41;;1050:2;1010:42;;1352:10;;1309:54;;;-1:-1:-1;;;;;;1309:54:4;-1:-1:-1;;;;;1352:10:4;;;1309:54;;;;;;2120:57;;;;;;;;;-1:-1:-1;2144:13:4;:26;;-1:-1:-1;;;;;;2144:26:4;2160:10;2144:26;;;548:6304;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9747:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:236:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "139:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "147:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:6"
															},
															"nodeType": "YulIf",
															"src": "94:2:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "165:36:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "191:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "178:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "178:23:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "169:5:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "273:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "281:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "266:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "223:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "234:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "249:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "254:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "245:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "245:11:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "258:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "241:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "241:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "230:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "230:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "220:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "220:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "213:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "213:50:6"
															},
															"nodeType": "YulIf",
															"src": "210:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "299:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "309:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "299:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:6",
														"type": ""
													}
												],
												"src": "14:306:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "403:219:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "449:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "458:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "466:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "451:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "451:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "451:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "424:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "433:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "420:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "420:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "445:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "416:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "416:32:6"
															},
															"nodeType": "YulIf",
															"src": "413:2:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "484:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "503:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "497:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "497:16:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "488:5:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "566:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "575:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "583:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "568:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "568:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "568:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "535:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "556:5:6"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "549:6:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "549:13:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "542:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "542:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "532:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "532:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "525:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "525:40:6"
															},
															"nodeType": "YulIf",
															"src": "522:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "601:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "611:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "601:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "369:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "380:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "392:6:6",
														"type": ""
													}
												],
												"src": "325:297:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "697:120:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "743:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "752:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "760:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "745:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "745:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "745:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "718:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "727:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "714:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "714:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "739:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "710:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "710:32:6"
															},
															"nodeType": "YulIf",
															"src": "707:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "778:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "801:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "788:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "788:23:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "778:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "663:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "674:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "686:6:6",
														"type": ""
													}
												],
												"src": "627:190:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "909:171:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "955:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "964:6:6"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "972:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "957:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "957:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "957:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "930:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "939:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "926:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "926:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "951:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "922:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "922:32:6"
															},
															"nodeType": "YulIf",
															"src": "919:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "990:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1013:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1000:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1000:23:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "990:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1032:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1059:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1070:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1055:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1055:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1042:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1042:32:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1032:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "867:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "878:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "890:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "898:6:6",
														"type": ""
													}
												],
												"src": "822:258:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1222:137:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1232:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1252:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1246:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1246:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1236:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1294:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1302:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1290:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1290:17:6"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1309:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1314:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1268:21:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1268:53:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1268:53:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1330:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1346:6:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1337:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1337:16:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1330:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1198:3:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1203:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1214:3:6",
														"type": ""
													}
												],
												"src": "1085:274:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1465:102:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1475:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1487:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1498:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1483:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1483:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1475:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1517:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1532:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1548:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1553:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1544:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1544:11:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1557:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1540:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1540:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1528:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1528:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1510:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1510:51:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1510:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1434:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1445:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1456:4:6",
														"type": ""
													}
												],
												"src": "1364:203:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1701:145:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1711:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1723:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1734:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1719:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1719:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1711:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1753:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1768:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1784:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1789:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1780:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1780:11:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1793:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1776:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1776:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1764:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1764:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1746:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1746:51:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1746:51:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1817:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1828:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1813:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1813:18:6"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1833:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1806:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1806:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1806:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1662:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1673:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1681:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1692:4:6",
														"type": ""
													}
												],
												"src": "1572:274:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1946:92:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1956:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1968:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1979:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1964:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1964:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1956:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1998:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "2023:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2016:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2016:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2009:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2009:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1991:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1991:41:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1991:41:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1915:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1926:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1937:4:6",
														"type": ""
													}
												],
												"src": "1851:187:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2164:262:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2181:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2192:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2174:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2174:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2174:21:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2204:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2224:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2218:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2218:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2208:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2251:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2262:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2247:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2247:18:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2267:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2240:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2240:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2240:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2309:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2317:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2305:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2305:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2326:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2337:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2322:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2322:18:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2342:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2283:21:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2283:66:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2283:66:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2358:62:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2374:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2393:6:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2401:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2389:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2389:15:6"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2410:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2406:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2406:7:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2385:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2385:29:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2370:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2370:45:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2417:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2366:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2366:54:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2358:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2133:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2144:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2155:4:6",
														"type": ""
													}
												],
												"src": "2043:383:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2605:247:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2622:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2633:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2615:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2615:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2615:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2656:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2667:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2652:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2652:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2672:2:6",
																		"type": "",
																		"value": "57"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2645:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2645:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2645:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2695:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2706:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2691:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2691:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2711:34:6",
																		"type": "",
																		"value": "The sum of all Vig percentage sh"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2684:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2684:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2684:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2766:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2777:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2762:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2762:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2782:27:6",
																		"type": "",
																		"value": "ares must be equal to 100"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2755:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2755:55:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2755:55:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2819:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2831:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2842:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2827:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2827:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2819:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1259fd8c5642b570806e5ff7f9d256e63345574756956799d684a5f17f81362f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2582:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2596:4:6",
														"type": ""
													}
												],
												"src": "2431:421:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3031:304:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3048:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3059:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3041:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3041:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3041:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3082:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3093:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3078:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3078:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3098:2:6",
																		"type": "",
																		"value": "74"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3071:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3071:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3071:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3121:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3132:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3117:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3117:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3137:34:6",
																		"type": "",
																		"value": "Vig percentages shares must be e"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3110:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3110:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3110:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3192:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3203:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3188:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3188:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3208:34:6",
																		"type": "",
																		"value": "xpressed in a  0 to 100 ratio. E"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3181:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3181:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3181:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3263:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3274:3:6",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3259:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3259:19:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3280:12:6",
																		"type": "",
																		"value": "xample: 30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3252:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3252:41:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3252:41:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3302:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3314:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3325:3:6",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3310:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3310:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3302:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1ea722c975dd923ae0b75537d4a6f8d0f8ea761a34abf3ac37b846d3b7f49d9a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3008:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3022:4:6",
														"type": ""
													}
												],
												"src": "2857:478:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3514:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3531:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3542:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3524:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3524:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3524:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3565:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3576:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3561:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3561:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3581:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3554:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3554:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3554:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3604:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3615:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3600:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3600:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3620:34:6",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3593:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3593:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3593:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3675:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3686:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3671:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3671:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3691:8:6",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3664:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3664:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3664:36:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3709:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3721:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3732:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3717:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3717:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3709:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3491:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3505:4:6",
														"type": ""
													}
												],
												"src": "3340:402:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3921:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3938:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3949:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3931:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3931:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3931:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3972:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3983:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3968:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3968:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3988:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3961:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3961:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3961:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4011:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4022:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4007:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4007:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4027:34:6",
																		"type": "",
																		"value": "ecosystem share must be greater "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4000:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4000:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4000:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4082:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4093:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4078:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4078:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4098:8:6",
																		"type": "",
																		"value": "than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4071:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4071:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4071:36:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4116:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4128:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4139:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4124:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4124:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4116:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6345453b5eff66eb9614fcf2d78159a2b71747dab29fc7893becd03bd411a89a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3898:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3912:4:6",
														"type": ""
													}
												],
												"src": "3747:402:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4328:172:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4345:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4356:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4338:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4338:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4338:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4379:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4390:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4375:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4375:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4395:2:6",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4368:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4368:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4368:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4418:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4429:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4414:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4414:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4434:24:6",
																		"type": "",
																		"value": "already an event admin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4407:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4407:52:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4407:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4468:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4480:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4491:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4476:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4476:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4468:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_69bfbcf965758bc5ddd17591a0451b2942bc0583d49424ab0acec67f0d5555cc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4305:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4319:4:6",
														"type": ""
													}
												],
												"src": "4154:346:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4679:296:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4696:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4707:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4689:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4689:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4689:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4730:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4741:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4726:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4726:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4746:2:6",
																		"type": "",
																		"value": "66"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4719:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4719:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4719:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4769:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4780:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4765:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4765:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4785:34:6",
																		"type": "",
																		"value": "Vig percentage must be expressed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4758:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4758:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4758:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4840:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4851:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4836:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4836:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4856:34:6",
																		"type": "",
																		"value": " in 0 to 10 percentage. Example:"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4829:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4829:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4829:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4911:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4922:3:6",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4907:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4907:19:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4928:4:6",
																		"type": "",
																		"value": " 6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4900:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4900:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4900:33:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4942:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4954:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4965:3:6",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4950:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4950:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4942:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_83c81a4385a848c15720cf694c5cbee8421a6aa41771576a7616bbfaf9243065__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4656:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4670:4:6",
														"type": ""
													}
												],
												"src": "4505:470:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5154:232:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5171:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5182:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5164:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5164:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5164:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5205:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5216:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5201:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5201:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5221:2:6",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5194:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5194:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5194:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5244:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5255:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5240:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5240:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5260:34:6",
																		"type": "",
																		"value": "You have no privilege to run thi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5233:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5233:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5233:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5315:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5326:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5311:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5311:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5331:12:6",
																		"type": "",
																		"value": "s function"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5304:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5304:40:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5304:40:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5353:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5365:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5376:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5361:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5361:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5353:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8a32508753827975e20a3cb78ea7eb704498ada6e4989facfc2206514cbd8980__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5131:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5145:4:6",
														"type": ""
													}
												],
												"src": "4980:406:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5565:172:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5582:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5593:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5575:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5575:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5575:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5616:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5627:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5612:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5612:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5632:2:6",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5605:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5605:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5605:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5655:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5666:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5651:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5651:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5671:24:6",
																		"type": "",
																		"value": "already a system admin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5644:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5644:52:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5644:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5705:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5717:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5728:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5713:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5713:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5705:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8eb64a2f8e2d063b4ba2137a06420c5ddac18fa973b5a68e7e93cc21be8e7511__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5542:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5556:4:6",
														"type": ""
													}
												],
												"src": "5391:346:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5916:227:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5933:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5944:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5926:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5926:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5926:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5967:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5978:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5963:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5963:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5983:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5956:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5956:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5956:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6006:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6017:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6002:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6002:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6022:34:6",
																		"type": "",
																		"value": "holders' share must be greater t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5995:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5995:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5995:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6077:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6088:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6073:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6073:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6093:7:6",
																		"type": "",
																		"value": "han 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6066:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6066:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6066:35:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6110:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6122:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6133:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6118:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6118:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6110:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b4db35318a7bfd06b87e9cc407f608351727b9b09f84d5df4df95bf66ed078cf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5893:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5907:4:6",
														"type": ""
													}
												],
												"src": "5742:401:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6322:179:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6339:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6350:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6332:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6332:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6332:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6373:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6384:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6369:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6369:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6389:2:6",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6362:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6362:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6362:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6412:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6423:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6408:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6408:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6428:31:6",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6401:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6401:59:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6401:59:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6469:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6481:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6492:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6477:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6477:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6469:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6299:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6313:4:6",
														"type": ""
													}
												],
												"src": "6148:353:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6680:169:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6697:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6708:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6690:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6690:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6690:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6731:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6742:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6727:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6727:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6747:2:6",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6720:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6720:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6720:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6770:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6781:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6766:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6766:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6786:21:6",
																		"type": "",
																		"value": "Invalid event owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6759:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6759:49:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6759:49:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6817:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6829:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6840:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6825:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6825:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6817:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dfa222cc65bd1d711fea183d18f3dda4d5a273a9aef270b54dadd7de68a596ae__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6657:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6671:4:6",
														"type": ""
													}
												],
												"src": "6506:343:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7028:170:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7045:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7056:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7038:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7038:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7038:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7079:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7090:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7075:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7075:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7095:2:6",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7068:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7068:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7068:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7118:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7129:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7114:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7114:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7134:22:6",
																		"type": "",
																		"value": "already in blacklist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7107:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7107:50:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7107:50:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7166:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7178:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7189:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7174:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7174:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7166:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e0baece3d3231f6d1df745826117bd57a5bd6c7623789b8f7c141128ebba2355__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7005:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7019:4:6",
														"type": ""
													}
												],
												"src": "6854:344:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7377:232:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7394:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7405:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7387:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7387:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7387:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7428:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7439:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7424:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7424:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7444:2:6",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7417:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7417:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7417:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7467:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7478:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7463:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7463:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7483:34:6",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7456:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7456:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7456:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7538:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7549:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7534:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7534:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7554:12:6",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7527:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7527:40:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7527:40:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7576:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7588:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7599:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7584:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7584:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7576:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7354:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7368:4:6",
														"type": ""
													}
												],
												"src": "7203:406:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7788:225:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7805:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7816:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7798:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7798:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7798:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7839:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7850:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7835:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7835:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7855:2:6",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7828:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7828:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7828:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7878:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7889:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7874:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7874:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7894:34:6",
																		"type": "",
																		"value": "bet earnings must be greater tha"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7867:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7867:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7867:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7949:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7960:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7945:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7945:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7965:5:6",
																		"type": "",
																		"value": "n 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7938:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7938:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7938:33:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7980:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7992:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8003:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7988:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7988:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7980:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ea0d8c73f223a0b01c3df36ce229bb84c80da681204066053edb0fc262d4988f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7765:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7779:4:6",
														"type": ""
													}
												],
												"src": "7614:399:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8192:308:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8209:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8220:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8202:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8202:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8202:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8243:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8254:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8239:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8239:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8259:2:6",
																		"type": "",
																		"value": "78"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8232:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8232:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8232:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8282:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8293:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8278:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8278:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8298:34:6",
																		"type": "",
																		"value": "you must set holders and ecosyst"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8271:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8271:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8271:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8353:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8364:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8349:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8349:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8369:34:6",
																		"type": "",
																		"value": "meAddress addresses before addin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8342:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8342:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8342:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8424:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8435:3:6",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8420:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8420:19:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8441:16:6",
																		"type": "",
																		"value": "g event owners"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8413:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8413:45:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8413:45:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8467:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8479:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8490:3:6",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8475:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8475:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8467:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f1af95a1d0630510198328b92eeb705a94a825ee39d9f1ab21a794feac721e0a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8169:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8183:4:6",
														"type": ""
													}
												],
												"src": "8018:482:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8606:76:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8616:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8628:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8639:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8624:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8624:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8616:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8658:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8669:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8651:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8651:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8651:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8575:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8586:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8597:4:6",
														"type": ""
													}
												],
												"src": "8505:177:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8735:80:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8762:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8764:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8764:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8764:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8751:1:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "8758:1:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "8754:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8754:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8748:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8748:13:6"
															},
															"nodeType": "YulIf",
															"src": "8745:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8793:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8804:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8807:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8800:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8800:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "8793:3:6"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8718:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8721:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "8727:3:6",
														"type": ""
													}
												],
												"src": "8687:128:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8866:171:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8897:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "8918:1:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8925:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8930:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "8921:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8921:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8911:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8911:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8911:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8962:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8965:4:6",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8955:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8955:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8955:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "8990:1:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8993:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8983:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8983:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8983:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8886:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8879:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8879:9:6"
															},
															"nodeType": "YulIf",
															"src": "8876:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9017:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9026:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9029:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "9022:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9022:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "9017:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8851:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8854:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "8860:1:6",
														"type": ""
													}
												],
												"src": "8820:217:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9094:116:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9153:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9155:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9155:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9155:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9125:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9118:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9118:9:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "9111:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9111:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9133:1:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9144:1:6",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "9140:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9140:6:6"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9148:1:6"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "9136:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9136:14:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9130:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9130:21:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9107:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9107:45:6"
															},
															"nodeType": "YulIf",
															"src": "9104:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9184:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9199:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9202:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "9195:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9195:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "9184:7:6"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9073:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9076:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "9082:7:6",
														"type": ""
													}
												],
												"src": "9042:168:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9268:205:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9278:10:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9287:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "9282:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9347:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "9372:3:6"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "9377:1:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9368:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9368:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "9391:3:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "9396:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "9387:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "9387:11:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "9381:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9381:18:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9361:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9361:39:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9361:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "9308:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9311:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9305:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9305:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "9319:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9321:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "9330:1:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9333:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9326:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9326:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "9321:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "9301:3:6",
																"statements": []
															},
															"src": "9297:113:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9436:31:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "9449:3:6"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "9454:6:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9445:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9445:16:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9463:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9438:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9438:27:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9438:27:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "9425:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9428:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9422:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9422:13:6"
															},
															"nodeType": "YulIf",
															"src": "9419:2:6"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "9246:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "9251:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9256:6:6",
														"type": ""
													}
												],
												"src": "9215:258:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9525:88:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9556:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9558:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9558:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9558:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9541:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9552:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "9548:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9548:6:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "9538:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9538:17:6"
															},
															"nodeType": "YulIf",
															"src": "9535:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9587:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9598:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9605:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9594:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9594:13:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "9587:3:6"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9507:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "9517:3:6",
														"type": ""
													}
												],
												"src": "9478:135:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9650:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9667:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9674:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9679:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9670:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9670:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9660:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9660:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9660:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9707:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9710:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9700:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9700:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9700:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9731:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9734:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9724:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9724:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9724:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9618:127:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_1259fd8c5642b570806e5ff7f9d256e63345574756956799d684a5f17f81362f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 57)\n        mstore(add(headStart, 64), \"The sum of all Vig percentage sh\")\n        mstore(add(headStart, 96), \"ares must be equal to 100\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1ea722c975dd923ae0b75537d4a6f8d0f8ea761a34abf3ac37b846d3b7f49d9a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 74)\n        mstore(add(headStart, 64), \"Vig percentages shares must be e\")\n        mstore(add(headStart, 96), \"xpressed in a  0 to 100 ratio. E\")\n        mstore(add(headStart, 128), \"xample: 30\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6345453b5eff66eb9614fcf2d78159a2b71747dab29fc7893becd03bd411a89a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ecosystem share must be greater \")\n        mstore(add(headStart, 96), \"than 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_69bfbcf965758bc5ddd17591a0451b2942bc0583d49424ab0acec67f0d5555cc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"already an event admin\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_83c81a4385a848c15720cf694c5cbee8421a6aa41771576a7616bbfaf9243065__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 66)\n        mstore(add(headStart, 64), \"Vig percentage must be expressed\")\n        mstore(add(headStart, 96), \" in 0 to 10 percentage. Example:\")\n        mstore(add(headStart, 128), \" 6\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_8a32508753827975e20a3cb78ea7eb704498ada6e4989facfc2206514cbd8980__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"You have no privilege to run thi\")\n        mstore(add(headStart, 96), \"s function\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8eb64a2f8e2d063b4ba2137a06420c5ddac18fa973b5a68e7e93cc21be8e7511__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"already a system admin\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b4db35318a7bfd06b87e9cc407f608351727b9b09f84d5df4df95bf66ed078cf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"holders' share must be greater t\")\n        mstore(add(headStart, 96), \"han 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_dfa222cc65bd1d711fea183d18f3dda4d5a273a9aef270b54dadd7de68a596ae__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Invalid event owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e0baece3d3231f6d1df745826117bd57a5bd6c7623789b8f7c141128ebba2355__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"already in blacklist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ea0d8c73f223a0b01c3df36ce229bb84c80da681204066053edb0fc262d4988f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"bet earnings must be greater tha\")\n        mstore(add(headStart, 96), \"n 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f1af95a1d0630510198328b92eeb705a94a825ee39d9f1ab21a794feac721e0a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 78)\n        mstore(add(headStart, 64), \"you must set holders and ecosyst\")\n        mstore(add(headStart, 96), \"meAddress addresses before addin\")\n        mstore(add(headStart, 128), \"g event owners\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106102065760003560e01c806380036b341161011a578063cbf89c63116100ad578063d54948691161007c578063d54948691461046e578063d6c1ca2614610481578063e3c0ed7814610494578063ed9f7eb9146104a7578063f2210b2c146104ba57600080fd5b8063cbf89c6314610422578063ce606ee014610435578063d37e87fd14610448578063d43cbb151461045b57600080fd5b8063992642e5116100e9578063992642e5146103e95780639b460aa9146103fc578063a8e01b281461040f578063cb1466221461029c57600080fd5b806380036b341461037b57806385d8349b146103a457806389fefbe1146103cd5780639376b94c146103e057600080fd5b8063387440e61161019d5780634fb431991161016c5780634fb431991461031c578063648868801461032f578063681ada8c146103425780636fdbd3f614610355578063709ec8b41461036857600080fd5b8063387440e6146102c0578063429b62e5146102d7578063486d1e50146103005780634dcc434a1461030957600080fd5b806323af4e17116101d957806323af4e17146102745780632e1a961814610289578063327372e414610274578063332daccf1461029c57600080fd5b8063026c1a4d1461020b57806306a5cb3a1461023b57806306ae70951461024e5780630da4ee5014610261575b600080fd5b61021e61021936600461138e565b6104cd565b6040516001600160a01b0390911681526020015b60405180910390f35b60015461021e906001600160a01b031681565b60055461021e906001600160a01b031681565b60025461021e906001600160a01b031681565b610287610282366004611347565b6104f7565b005b60065461021e906001600160a01b031681565b6102b06102aa366004611347565b50600090565b6040519015158152602001610232565b6102c960095481565b604051908152602001610232565b61021e6102e5366004611347565b600d602052600090815260409020546001600160a01b031681565b6102c960075481565b610287610317366004611347565b610547565b6102b061032a366004611347565b61058e565b61028761033d3660046113a6565b610628565b610287610350366004611347565b61076e565b60045461021e906001600160a01b031681565b61021e61037636600461138e565b610895565b61021e610389366004611347565b600f602052600090815260409020546001600160a01b031681565b61021e6103b2366004611347565b600e602052600090815260409020546001600160a01b031681565b6102876103db366004611347565b6108a5565b6102c960085481565b60035461021e906001600160a01b031681565b61028761040a366004611347565b6108ec565b61028761041d366004611347565b6109d6565b61028761043036600461138e565b610a1d565b60005461021e906001600160a01b031681565b61021e61045636600461138e565b610bb1565b610287610469366004611347565b610bc1565b61028761047c366004611347565b610c08565b61028761048f36600461138e565b610d13565b6102876104a2366004611347565b610dbe565b6102876104b5366004611347565b610e83565b6102876104c8366004611347565b610fb1565b600a81815481106104dd57600080fd5b6000918252602090912001546001600160a01b0316905081565b6105003361058e565b6105255760405162461bcd60e51b815260040161051c90611416565b60405180910390fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6105503361058e565b61056c5760405162461bcd60e51b815260040161051c90611416565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038181166000908152600d6020526040812054909116156106205760005b600a5481101561061e57826001600160a01b0316600a82815481106105e857634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b0316141561060c5750600192915050565b8061061681611588565b9150506105b3565b505b506000919050565b6106313361058e565b61064d5760405162461bcd60e51b815260040161051c90611416565b6064821115801561065f575060648111155b6106e45760405162461bcd60e51b815260206004820152604a60248201527f5669672070657263656e746167657320736861726573206d757374206265206560448201527f787072657373656420696e206120203020746f2031303020726174696f2e2045606482015269078616d706c653a2033360b41b608482015260a40161051c565b6106ee8183611501565b6064146107635760405162461bcd60e51b815260206004820152603960248201527f5468652073756d206f6620616c6c205669672070657263656e7461676520736860448201527f61726573206d75737420626520657175616c20746f2031303000000000000000606482015260840161051c565b600791909155600855565b6107773361058e565b6107935760405162461bcd60e51b815260040161051c90611416565b6001600160a01b038181166000908152600f6020526040902054166107ca5760405162461bcd60e51b815260040161051c90611460565b6001600160a01b0381166000908152600f6020526040812080546001600160a01b03191690555b600c5481101561089157816001600160a01b0316600c828154811061082657634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b0316141561087f57600c818154811061086257634e487b7160e01b600052603260045260246000fd5b600091825260209091200180546001600160a01b03191690555050565b8061088981611588565b9150506107f1565b5050565b600c81815481106104dd57600080fd5b6108ae3361058e565b6108ca5760405162461bcd60e51b815260040161051c90611416565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6108f53361058e565b6109115760405162461bcd60e51b815260040161051c90611416565b6001600160a01b038082166000908152600f6020526040902054829116156109725760405162461bcd60e51b8152602060048201526014602482015273185b1c9958591e481a5b88189b1858dadb1a5cdd60621b604482015260640161051c565b50600b8054600181019091557f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90180546001600160a01b039092166001600160a01b031992831681179091556000818152600e602052604090208054909216179055565b6109df3361058e565b6109fb5760405162461bcd60e51b815260040161051c90611416565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60008111610a795760405162461bcd60e51b815260206004820152602360248201527f626574206561726e696e6773206d75737420626520677265617465722074686160448201526206e20360ec1b606482015260840161051c565b6000606460075483610a8b9190611539565b610a959190611519565b905060008111610af55760405162461bcd60e51b815260206004820152602560248201527f686f6c6465727327207368617265206d75737420626520677265617465722074604482015264068616e20360dc1b606482015260840161051c565b6000606460085484610b079190611539565b610b119190611519565b905060008111610b725760405162461bcd60e51b815260206004820152602660248201527f65636f73797374656d207368617265206d75737420626520677265617465722060448201526507468616e20360d41b606482015260840161051c565b600154601054610b8f916001600160a01b039182169116836110b7565b600254601054610bac916001600160a01b039182169116846110b7565b505050565b600b81815481106104dd57600080fd5b610bca3361058e565b610be65760405162461bcd60e51b815260040161051c90611416565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610c325760405162461bcd60e51b815260040161051c90611416565b6001600160a01b038181166000908152600d602052604090205416610c695760405162461bcd60e51b815260040161051c90611460565b6001600160a01b0381166000908152600d6020526040812080546001600160a01b03191690555b600a5481101561089157816001600160a01b0316600a8281548110610cc557634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03161415610d0157600a818154811061086257634e487b7160e01b600052603260045260246000fd5b80610d0b81611588565b915050610c90565b610d1c3361058e565b610d385760405162461bcd60e51b815260040161051c90611416565b600a8110610db95760405162461bcd60e51b815260206004820152604260248201527f5669672070657263656e74616765206d7573742062652065787072657373656460448201527f20696e203020746f2031302070657263656e746167652e204578616d706c653a606482015261101b60f11b608482015260a40161051c565b600955565b610dc73361058e565b610de35760405162461bcd60e51b815260040161051c90611416565b6001600160a01b038082166000908152600e602052604090205482911615610e465760405162461bcd60e51b815260206004820152601660248201527530b63932b0b23c9030b71032bb32b73a1030b236b4b760511b604482015260640161051c565b6002546001600160a01b03161580610e6757506001546001600160a01b0316155b6109725760405162461bcd60e51b815260040161051c9061148d565b6000546001600160a01b03163314610ead5760405162461bcd60e51b815260040161051c90611416565b6001600160a01b038082166000908152600d602052604090205482911615610f105760405162461bcd60e51b815260206004820152601660248201527530b63932b0b23c90309039bcb9ba32b69030b236b4b760511b604482015260640161051c565b6002546001600160a01b03161580610f3157506001546001600160a01b0316155b610f4d5760405162461bcd60e51b815260040161051c9061148d565b50600a8054600181019091557fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80180546001600160a01b039092166001600160a01b031992831681179091556000818152600d602052604090208054909216179055565b610fba3361058e565b610fd65760405162461bcd60e51b815260040161051c90611416565b6001600160a01b038181166000908152600e60205260409020541661100d5760405162461bcd60e51b815260040161051c90611460565b6001600160a01b0381166000908152600e6020526040812080546001600160a01b03191690555b600b5481101561089157816001600160a01b0316600b828154811061106957634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b031614156110a557600b818154811061086257634e487b7160e01b600052603260045260246000fd5b806110af81611588565b915050611034565b604080516001600160a01b03848116602483015260448083018590528351808403909101815260649092018352602080830180516001600160e01b031663a9059cbb60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656490840152610bac928692916000916111479185169084906111c4565b805190915015610bac5780806020019051810190611165919061136e565b610bac5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161051c565b60606111d384846000856111dd565b90505b9392505050565b60608247101561123e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161051c565b6001600160a01b0385163b6112955760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161051c565b600080866001600160a01b031685876040516112b191906113c7565b60006040518083038185875af1925050503d80600081146112ee576040519150601f19603f3d011682016040523d82523d6000602084013e6112f3565b606091505b509150915061130382828661130e565b979650505050505050565b6060831561131d5750816111d6565b82511561132d5782518084602001fd5b8160405162461bcd60e51b815260040161051c91906113e3565b600060208284031215611358578081fd5b81356001600160a01b03811681146111d6578182fd5b60006020828403121561137f578081fd5b815180151581146111d6578182fd5b60006020828403121561139f578081fd5b5035919050565b600080604083850312156113b8578081fd5b50508035926020909101359150565b600082516113d9818460208701611558565b9190910192915050565b6020815260008251806020840152611402816040850160208701611558565b601f01601f19169190910160400192915050565b6020808252602a908201527f596f752068617665206e6f2070726976696c65676520746f2072756e207468696040820152693990333ab731ba34b7b760b11b606082015260800190565b60208082526013908201527224b73b30b634b21032bb32b73a1037bbb732b960691b604082015260600190565b6020808252604e908201527f796f75206d7573742073657420686f6c6465727320616e642065636f7379737460408201527f6d654164647265737320616464726573736573206265666f726520616464696e60608201526d67206576656e74206f776e65727360901b608082015260a00190565b60008219821115611514576115146115a3565b500190565b60008261153457634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611553576115536115a3565b500290565b60005b8381101561157357818101518382015260200161155b565b83811115611582576000848401525b50505050565b600060001982141561159c5761159c6115a3565b5060010190565b634e487b7160e01b600052601160045260246000fdfea264697066735822122057c9a09aa8d99a9519f676de745450bc1d3c21a80586677c4f86c4da45985d8c64736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x206 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x80036B34 GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xCBF89C63 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD5494869 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD5494869 EQ PUSH2 0x46E JUMPI DUP1 PUSH4 0xD6C1CA26 EQ PUSH2 0x481 JUMPI DUP1 PUSH4 0xE3C0ED78 EQ PUSH2 0x494 JUMPI DUP1 PUSH4 0xED9F7EB9 EQ PUSH2 0x4A7 JUMPI DUP1 PUSH4 0xF2210B2C EQ PUSH2 0x4BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCBF89C63 EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0xCE606EE0 EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0xD37E87FD EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0xD43CBB15 EQ PUSH2 0x45B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x992642E5 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x992642E5 EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0x9B460AA9 EQ PUSH2 0x3FC JUMPI DUP1 PUSH4 0xA8E01B28 EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0xCB146622 EQ PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x80036B34 EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0x85D8349B EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0x89FEFBE1 EQ PUSH2 0x3CD JUMPI DUP1 PUSH4 0x9376B94C EQ PUSH2 0x3E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x387440E6 GT PUSH2 0x19D JUMPI DUP1 PUSH4 0x4FB43199 GT PUSH2 0x16C JUMPI DUP1 PUSH4 0x4FB43199 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0x64886880 EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x681ADA8C EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x6FDBD3F6 EQ PUSH2 0x355 JUMPI DUP1 PUSH4 0x709EC8B4 EQ PUSH2 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x387440E6 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x429B62E5 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x486D1E50 EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0x4DCC434A EQ PUSH2 0x309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23AF4E17 GT PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x23AF4E17 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x2E1A9618 EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0x327372E4 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x332DACCF EQ PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x26C1A4D EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x6A5CB3A EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x6AE7095 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0xDA4EE50 EQ PUSH2 0x261 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21E PUSH2 0x219 CALLDATASIZE PUSH1 0x4 PUSH2 0x138E JUMP JUMPDEST PUSH2 0x4CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x21E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x21E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x21E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x287 PUSH2 0x282 CALLDATASIZE PUSH1 0x4 PUSH2 0x1347 JUMP JUMPDEST PUSH2 0x4F7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x21E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2B0 PUSH2 0x2AA CALLDATASIZE PUSH1 0x4 PUSH2 0x1347 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x232 JUMP JUMPDEST PUSH2 0x2C9 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x232 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x2E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1347 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2C9 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x287 PUSH2 0x317 CALLDATASIZE PUSH1 0x4 PUSH2 0x1347 JUMP JUMPDEST PUSH2 0x547 JUMP JUMPDEST PUSH2 0x2B0 PUSH2 0x32A CALLDATASIZE PUSH1 0x4 PUSH2 0x1347 JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST PUSH2 0x287 PUSH2 0x33D CALLDATASIZE PUSH1 0x4 PUSH2 0x13A6 JUMP JUMPDEST PUSH2 0x628 JUMP JUMPDEST PUSH2 0x287 PUSH2 0x350 CALLDATASIZE PUSH1 0x4 PUSH2 0x1347 JUMP JUMPDEST PUSH2 0x76E JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x21E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x376 CALLDATASIZE PUSH1 0x4 PUSH2 0x138E JUMP JUMPDEST PUSH2 0x895 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x389 CALLDATASIZE PUSH1 0x4 PUSH2 0x1347 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x3B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1347 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x287 PUSH2 0x3DB CALLDATASIZE PUSH1 0x4 PUSH2 0x1347 JUMP JUMPDEST PUSH2 0x8A5 JUMP JUMPDEST PUSH2 0x2C9 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x21E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x287 PUSH2 0x40A CALLDATASIZE PUSH1 0x4 PUSH2 0x1347 JUMP JUMPDEST PUSH2 0x8EC JUMP JUMPDEST PUSH2 0x287 PUSH2 0x41D CALLDATASIZE PUSH1 0x4 PUSH2 0x1347 JUMP JUMPDEST PUSH2 0x9D6 JUMP JUMPDEST PUSH2 0x287 PUSH2 0x430 CALLDATASIZE PUSH1 0x4 PUSH2 0x138E JUMP JUMPDEST PUSH2 0xA1D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x21E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x456 CALLDATASIZE PUSH1 0x4 PUSH2 0x138E JUMP JUMPDEST PUSH2 0xBB1 JUMP JUMPDEST PUSH2 0x287 PUSH2 0x469 CALLDATASIZE PUSH1 0x4 PUSH2 0x1347 JUMP JUMPDEST PUSH2 0xBC1 JUMP JUMPDEST PUSH2 0x287 PUSH2 0x47C CALLDATASIZE PUSH1 0x4 PUSH2 0x1347 JUMP JUMPDEST PUSH2 0xC08 JUMP JUMPDEST PUSH2 0x287 PUSH2 0x48F CALLDATASIZE PUSH1 0x4 PUSH2 0x138E JUMP JUMPDEST PUSH2 0xD13 JUMP JUMPDEST PUSH2 0x287 PUSH2 0x4A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1347 JUMP JUMPDEST PUSH2 0xDBE JUMP JUMPDEST PUSH2 0x287 PUSH2 0x4B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1347 JUMP JUMPDEST PUSH2 0xE83 JUMP JUMPDEST PUSH2 0x287 PUSH2 0x4C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1347 JUMP JUMPDEST PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x4DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0x500 CALLER PUSH2 0x58E JUMP JUMPDEST PUSH2 0x525 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51C SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x550 CALLER PUSH2 0x58E JUMP JUMPDEST PUSH2 0x56C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51C SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND ISZERO PUSH2 0x620 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x61E JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x5E8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x60C JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x616 DUP2 PUSH2 0x1588 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5B3 JUMP JUMPDEST POP JUMPDEST POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x631 CALLER PUSH2 0x58E JUMP JUMPDEST PUSH2 0x64D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51C SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x64 DUP3 GT ISZERO DUP1 ISZERO PUSH2 0x65F JUMPI POP PUSH1 0x64 DUP2 GT ISZERO JUMPDEST PUSH2 0x6E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5669672070657263656E746167657320736861726573206D7573742062652065 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x787072657373656420696E206120203020746F2031303020726174696F2E2045 PUSH1 0x64 DUP3 ADD MSTORE PUSH10 0x78616D706C653A20333 PUSH1 0xB4 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x51C JUMP JUMPDEST PUSH2 0x6EE DUP2 DUP4 PUSH2 0x1501 JUMP JUMPDEST PUSH1 0x64 EQ PUSH2 0x763 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652073756D206F6620616C6C205669672070657263656E74616765207368 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x61726573206D75737420626520657175616C20746F2031303000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x51C JUMP JUMPDEST PUSH1 0x7 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH2 0x777 CALLER PUSH2 0x58E JUMP JUMPDEST PUSH2 0x793 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51C SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x7CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51C SWAP1 PUSH2 0x1460 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0xC SLOAD DUP2 LT ISZERO PUSH2 0x891 JUMPI DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xC DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x826 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x87F JUMPI PUSH1 0xC DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x862 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH2 0x889 DUP2 PUSH2 0x1588 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7F1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xC DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x4DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8AE CALLER PUSH2 0x58E JUMP JUMPDEST PUSH2 0x8CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51C SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x8F5 CALLER PUSH2 0x58E JUMP JUMPDEST PUSH2 0x911 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51C SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP2 AND ISZERO PUSH2 0x972 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x185B1C9958591E481A5B88189B1858DADB1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x51C JUMP JUMPDEST POP PUSH1 0xB DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x9DF CALLER PUSH2 0x58E JUMP JUMPDEST PUSH2 0x9FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51C SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xA79 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x626574206561726E696E6773206D757374206265206772656174657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E203 PUSH1 0xEC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x51C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x7 SLOAD DUP4 PUSH2 0xA8B SWAP2 SWAP1 PUSH2 0x1539 JUMP JUMPDEST PUSH2 0xA95 SWAP2 SWAP1 PUSH2 0x1519 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xAF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x686F6C6465727327207368617265206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x68616E203 PUSH1 0xDC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x51C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x8 SLOAD DUP5 PUSH2 0xB07 SWAP2 SWAP1 PUSH2 0x1539 JUMP JUMPDEST PUSH2 0xB11 SWAP2 SWAP1 PUSH2 0x1519 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xB72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x65636F73797374656D207368617265206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x7468616E203 PUSH1 0xD4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x51C JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x10 SLOAD PUSH2 0xB8F SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0x10B7 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x10 SLOAD PUSH2 0xBAC SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP5 PUSH2 0x10B7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xB DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x4DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBCA CALLER PUSH2 0x58E JUMP JUMPDEST PUSH2 0xBE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51C SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC32 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51C SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0xC69 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51C SWAP1 PUSH2 0x1460 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x891 JUMPI DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xCC5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xD01 JUMPI PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x862 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 PUSH2 0xD0B DUP2 PUSH2 0x1588 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC90 JUMP JUMPDEST PUSH2 0xD1C CALLER PUSH2 0x58E JUMP JUMPDEST PUSH2 0xD38 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51C SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0xA DUP2 LT PUSH2 0xDB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x42 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5669672070657263656E74616765206D75737420626520657870726573736564 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20696E203020746F2031302070657263656E746167652E204578616D706C653A PUSH1 0x64 DUP3 ADD MSTORE PUSH2 0x101B PUSH1 0xF1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x51C JUMP JUMPDEST PUSH1 0x9 SSTORE JUMP JUMPDEST PUSH2 0xDC7 CALLER PUSH2 0x58E JUMP JUMPDEST PUSH2 0xDE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51C SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP2 AND ISZERO PUSH2 0xE46 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x30B63932B0B23C9030B71032BB32B73A1030B236B4B7 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x51C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 PUSH2 0xE67 JUMPI POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO JUMPDEST PUSH2 0x972 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51C SWAP1 PUSH2 0x148D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51C SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP2 AND ISZERO PUSH2 0xF10 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x30B63932B0B23C90309039BCB9BA32B69030B236B4B7 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x51C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 PUSH2 0xF31 JUMPI POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO JUMPDEST PUSH2 0xF4D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51C SWAP1 PUSH2 0x148D JUMP JUMPDEST POP PUSH1 0xA DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xFBA CALLER PUSH2 0x58E JUMP JUMPDEST PUSH2 0xFD6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51C SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x100D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51C SWAP1 PUSH2 0x1460 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x891 JUMPI DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xB DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1069 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x10A5 JUMPI PUSH1 0xB DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x862 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 PUSH2 0x10AF DUP2 PUSH2 0x1588 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1034 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 SWAP1 DUP5 ADD MSTORE PUSH2 0xBAC SWAP3 DUP7 SWAP3 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1147 SWAP2 DUP6 AND SWAP1 DUP5 SWAP1 PUSH2 0x11C4 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xBAC JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1165 SWAP2 SWAP1 PUSH2 0x136E JUMP JUMPDEST PUSH2 0xBAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x51C JUMP JUMPDEST PUSH1 0x60 PUSH2 0x11D3 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x11DD JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x123E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x51C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x1295 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x51C JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x12B1 SWAP2 SWAP1 PUSH2 0x13C7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12EE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12F3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1303 DUP3 DUP3 DUP7 PUSH2 0x130E JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x131D JUMPI POP DUP2 PUSH2 0x11D6 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x132D JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51C SWAP2 SWAP1 PUSH2 0x13E3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1358 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x11D6 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x137F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x11D6 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x139F JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13B8 JUMPI DUP1 DUP2 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x13D9 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1558 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1402 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1558 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x596F752068617665206E6F2070726976696C65676520746F2072756E20746869 PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x3990333AB731BA34B7B7 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x24B73B30B634B21032BB32B73A1037BBB732B9 PUSH1 0x69 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x4E SWAP1 DUP3 ADD MSTORE PUSH32 0x796F75206D7573742073657420686F6C6465727320616E642065636F73797374 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6D654164647265737320616464726573736573206265666F726520616464696E PUSH1 0x60 DUP3 ADD MSTORE PUSH14 0x67206576656E74206F776E657273 PUSH1 0x90 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1514 JUMPI PUSH2 0x1514 PUSH2 0x15A3 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1534 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1553 JUMPI PUSH2 0x1553 PUSH2 0x15A3 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1573 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x155B JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1582 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x159C JUMPI PUSH2 0x159C PUSH2 0x15A3 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI 0xC9 LOG0 SWAP11 0xA8 0xD9 SWAP11 SWAP6 NOT 0xF6 PUSH23 0xDE745450BC1D3C21A80586677C4F86C4DA45985D8C6473 PUSH16 0x6C634300080400330000000000000000 ",
							"sourceMap": "548:6304:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1059:29;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1528:32:6;;;1510:51;;1498:2;1483:18;1059:29:4;;;;;;;;661:40;;;;;-1:-1:-1;;;;;661:40:4;;;834:37;;;;;-1:-1:-1;;;;;834:37:4;;;707:38;;;;;-1:-1:-1;;;;;707:38:4;;;2419:104;;;;;;:::i;:::-;;:::i;:::-;;877:34;;;;;-1:-1:-1;;;;;877:34:4;;;6765:84;;;;;;:::i;:::-;-1:-1:-1;6827:4:4;;6765:84;;;;2016:14:6;;2009:22;1991:41;;1979:2;1964:18;6765:84:4;1946:92:6;1010:42:4;;;;;;;;;8651:25:6;;;8639:2;8624:18;1010:42:4;8606:76:6;1161:41:4;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1161:41:4;;;918:39;;;;;;2643:110;;;;;;:::i;:::-;;:::i;6302:362::-;;;;;;:::i;:::-;;:::i;3130:461::-;;;;;;:::i;:::-;;:::i;5908:388::-;;;;;;:::i;:::-;;:::i;792:36::-;;;;;-1:-1:-1;;;;;792:36:4;;;1128:26;;;;;;:::i;:::-;;:::i;1260:42::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1260:42:4;;;1208:46;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1208:46:4;;;2759:104;;;;;;:::i;:::-;;:::i;963:41::-;;;;;;751:34;;;;;-1:-1:-1;;;;;751:34:4;;;5719:183;;;;;;:::i;:::-;;:::i;2301:112::-;;;;;;:::i;:::-;;:::i;3597:578::-;;;;;;:::i;:::-;;:::i;622:28::-;;;;;-1:-1:-1;;;;;622:28:4;;;1094;;;;;;:::i;:::-;;:::i;2529:108::-;;;;;;:::i;:::-;;:::i;4537:396::-;;;;;;:::i;:::-;;:::i;2869:255::-;;;;;;:::i;:::-;;:::i;4943:355::-;;;;;;:::i;:::-;;:::i;4185:346::-;;;;;;:::i;:::-;;:::i;5304:405::-;;;;;;:::i;:::-;;:::i;1059:29::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1059:29:4;;-1:-1:-1;1059:29:4;:::o;2419:104::-;1595:25;1609:10;1595:13;:25::i;:::-;1574:114;;;;-1:-1:-1;;;1574:114:4;;;;;;;:::i;:::-;;;;;;;;;2493:14:::1;:23:::0;;-1:-1:-1;;;;;;2493:23:4::1;-1:-1:-1::0;;;;;2493:23:4;;;::::1;::::0;;;::::1;::::0;;2419:104::o;2643:110::-;1595:25;1609:10;1595:13;:25::i;:::-;1574:114;;;;-1:-1:-1;;;1574:114:4;;;;;;;:::i;:::-;2722:13:::1;:24:::0;;-1:-1:-1;;;;;;2722:24:4::1;-1:-1:-1::0;;;;;2722:24:4;;;::::1;::::0;;;::::1;::::0;;2643:110::o;6302:362::-;-1:-1:-1;;;;;6389:13:4;;;6370:4;6389:13;;;:6;:13;;;;;;6370:4;;6389:13;:27;6386:246;;6436:9;6431:191;6455:12;:19;6451:23;;6431:191;;;6522:5;-1:-1:-1;;;;;6503:24:4;:12;6516:1;6503:15;;;;;;-1:-1:-1;;;6503:15:4;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6503:15:4;:24;6499:109;;;-1:-1:-1;6558:4:4;;6302:362;-1:-1:-1;;6302:362:4:o;6499:109::-;6476:3;;;;:::i;:::-;;;;6431:191;;;;6386:246;-1:-1:-1;6652:5:4;;6302:362;-1:-1:-1;6302:362:4:o;3130:461::-;1595:25;1609:10;1595:13;:25::i;:::-;1574:114;;;;-1:-1:-1;;;1574:114:4;;;;;;;:::i;:::-;3276:3:::1;3268:4;:11;;:26;;;;;3291:3;3283:4;:11;;3268:26;3247:147;;;::::0;-1:-1:-1;;;3247:147:4;;3059:2:6;3247:147:4::1;::::0;::::1;3041:21:6::0;3098:2;3078:18;;;3071:30;3137:34;3117:18;;;3110:62;3208:34;3188:18;;;3181:62;-1:-1:-1;;;3259:19:6;;;3252:41;3310:19;;3247:147:4::1;3031:304:6::0;3247:147:4::1;3425:11;3432:4:::0;3425;:11:::1;:::i;:::-;3441:3;3425:19;3404:123;;;::::0;-1:-1:-1;;;3404:123:4;;2633:2:6;3404:123:4::1;::::0;::::1;2615:21:6::0;2672:2;2652:18;;;2645:30;2711:34;2691:18;;;2684:62;2782:27;2762:18;;;2755:55;2827:19;;3404:123:4::1;2605:247:6::0;3404:123:4::1;3538:10;:17:::0;;;;3565:12:::1;:19:::0;3130:461::o;5908:388::-;1595:25;1609:10;1595:13;:25::i;:::-;1574:114;;;;-1:-1:-1;;;1574:114:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;5996:20:4;;::::1;6028:1;5996:20:::0;;;:7:::1;:20;::::0;;;;;::::1;5987:67;;;;-1:-1:-1::0;;;5987:67:4::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;6080:20:4;::::1;;::::0;;;:7:::1;:20;::::0;;;;6073:27;;-1:-1:-1;;;;;;6073:27:4::1;::::0;;6111:179:::1;6135:9;:16:::0;6131:20;::::1;6111:179;;;6192:11;-1:-1:-1::0;;;;;6176:27:4::1;:9;6186:1;6176:12;;;;;;-1:-1:-1::0;;;6176:12:4::1;;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;6176:12:4::1;:27;6172:108;;;6230:9;6240:1;6230:12;;;;;;-1:-1:-1::0;;;6230:12:4::1;;;;;;;;;;::::0;;;::::1;::::0;;;::::1;6223:19:::0;;-1:-1:-1;;;;;;6223:19:4::1;::::0;;6111:179:::1;5908:388:::0;:::o;6172:108::-:1;6153:3:::0;::::1;::::0;::::1;:::i;:::-;;;;6111:179;;;;5908:388:::0;:::o;1128:26::-;;;;;;;;;;;;2759:104;1595:25;1609:10;1595:13;:25::i;:::-;1574:114;;;;-1:-1:-1;;;1574:114:4;;;;;;;:::i;:::-;2835:10:::1;:21:::0;;-1:-1:-1;;;;;;2835:21:4::1;-1:-1:-1::0;;;;;2835:21:4;;;::::1;::::0;;;::::1;::::0;;2759:104::o;5719:183::-;1595:25;1609:10;1595:13;:25::i;:::-;1574:114;;;;-1:-1:-1;;;1574:114:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;2043:14:4;;::::1;2069:1;2043:14:::0;;;:7:::1;:14;::::0;;;;;5815:5;;2043:14:::1;:28:::0;2035:61:::1;;;::::0;-1:-1:-1;;;2035:61:4;;7056:2:6;2035:61:4::1;::::0;::::1;7038:21:6::0;7095:2;7075:18;;;7068:30;-1:-1:-1;;;7114:18:6;;;7107:50;7174:18;;2035:61:4::1;7028:170:6::0;2035:61:4::1;-1:-1:-1::0;5836:11:4::2;:23:::0;;::::2;::::0;::::2;::::0;;;;::::2;::::0;;-1:-1:-1;;;;;5836:23:4;;::::2;-1:-1:-1::0;;;;;;5836:23:4;;::::2;::::0;::::2;::::0;;;-1:-1:-1;5869:18:4;;;:11:::2;5836:23;5869:18:::0;;;;:26;;;;::::2;;::::0;;5719:183::o;2301:112::-;1595:25;1609:10;1595:13;:25::i;:::-;1574:114;;;;-1:-1:-1;;;1574:114:4;;;;;;;:::i;:::-;2381:16:::1;:25:::0;;-1:-1:-1;;;;;;2381:25:4::1;-1:-1:-1::0;;;;;2381:25:4;;;::::1;::::0;;;::::1;::::0;;2301:112::o;3597:578::-;3692:1;3679:10;:14;3671:62;;;;-1:-1:-1;;;3671:62:4;;7816:2:6;3671:62:4;;;7798:21:6;7855:2;7835:18;;;7828:30;7894:34;7874:18;;;7867:62;-1:-1:-1;;;7945:18:6;;;7938:33;7988:19;;3671:62:4;7788:225:6;3671:62:4;3743:20;3794:3;3780:10;;3767;:23;;;;:::i;:::-;3766:31;;;;:::i;:::-;3743:54;;3830:1;3815:12;:16;3807:66;;;;-1:-1:-1;;;3807:66:4;;5944:2:6;3807:66:4;;;5926:21:6;5983:2;5963:18;;;5956:30;6022:34;6002:18;;;5995:62;-1:-1:-1;;;6073:18:6;;;6066:35;6118:19;;3807:66:4;5916:227:6;3807:66:4;3883:22;3938:3;3922:12;;3909:10;:25;;;;:::i;:::-;3908:33;;;;:::i;:::-;3883:58;;3976:1;3959:14;:18;3951:69;;;;-1:-1:-1;;;3951:69:4;;3949:2:6;3951:69:4;;;3931:21:6;3988:2;3968:18;;;3961:30;4027:34;4007:18;;;4000:62;-1:-1:-1;;;4078:18:6;;;4071:36;4124:19;;3951:69:4;3921:228:6;3951:69:4;4063:16;;4031:18;;:65;;-1:-1:-1;;;;;4031:18:4;;;;4063:16;4081:14;4031:31;:65::i;:::-;4139:14;;4107:18;;:61;;-1:-1:-1;;;;;4107:18:4;;;;4139:14;4155:12;4107:31;:61::i;:::-;3597:578;;;:::o;1094:28::-;;;;;;;;;;;;2529:108;1595:25;1609:10;1595:13;:25::i;:::-;1574:114;;;;-1:-1:-1;;;1574:114:4;;;;;;;:::i;:::-;2607:12:::1;:23:::0;;-1:-1:-1;;;;;;2607:23:4::1;-1:-1:-1::0;;;;;2607:23:4;;;::::1;::::0;;;::::1;::::0;;2529:108::o;4537:396::-;1435:13;;-1:-1:-1;;;;;1435:13:4;1421:10;:27;1400:116;;;;-1:-1:-1;;;1400:116:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;4623:20:4;;::::1;4655:1;4623:20:::0;;;:6:::1;:20;::::0;;;;;::::1;4614:67;;;;-1:-1:-1::0;;;4614:67:4::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4707:20:4;::::1;;::::0;;;:6:::1;:20;::::0;;;;4700:27;;-1:-1:-1;;;;;;4700:27:4::1;::::0;;4738:189:::1;4762:12;:19:::0;4758:23;::::1;4738:189;;;4825:12;-1:-1:-1::0;;;;;4806:31:4::1;:12;4819:1;4806:15;;;;;;-1:-1:-1::0;;;4806:15:4::1;;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;4806:15:4::1;:31;4802:115;;;4864:12;4877:1;4864:15;;;;;;-1:-1:-1::0;;;4864:15:4::1;;;;;;;;4802:115;4783:3:::0;::::1;::::0;::::1;:::i;:::-;;;;4738:189;;2869:255:::0;1595:25;1609:10;1595:13;:25::i;:::-;1574:114;;;;-1:-1:-1;;;1574:114:4;;;;;;;:::i;:::-;2986:2:::1;2972:11;:16;2951:129;;;::::0;-1:-1:-1;;;2951:129:4;;4707:2:6;2951:129:4::1;::::0;::::1;4689:21:6::0;4746:2;4726:18;;;4719:30;4785:34;4765:18;;;4758:62;4856:34;4836:18;;;4829:62;-1:-1:-1;;;4907:19:6;;;4900:33;4950:19;;2951:129:4::1;4679:296:6::0;2951:129:4::1;3090:13;:27:::0;2869:255::o;4943:355::-;1595:25;1609:10;1595:13;:25::i;:::-;1574:114;;;;-1:-1:-1;;;1574:114:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;1907:18:4;;::::1;1937:1;1907:18:::0;;;:11:::1;:18;::::0;;;;;5047:5;;1907:18:::1;:32:::0;1899:67:::1;;;::::0;-1:-1:-1;;;1899:67:4;;4356:2:6;1899:67:4::1;::::0;::::1;4338:21:6::0;4395:2;4375:18;;;4368:30;-1:-1:-1;;;4414:18:6;;;4407:52;4476:18;;1899:67:4::1;4328:172:6::0;1899:67:4::1;5076:14:::2;::::0;-1:-1:-1;;;;;5076:14:4::2;:28:::0;;:62:::2;;-1:-1:-1::0;5108:16:4::2;::::0;-1:-1:-1;;;;;5108:16:4::2;:30:::0;5076:62:::2;5068:153;;;;-1:-1:-1::0;;;5068:153:4::2;;;;;;;:::i;4185:346::-:0;1435:13;;-1:-1:-1;;;;;1435:13:4;1421:10;:27;1400:116;;;;-1:-1:-1;;;1400:116:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;1771:13:4;;::::1;1796:1;1771:13:::0;;;:6:::1;:13;::::0;;;;;4284:5;;1771:13:::1;:27:::0;1763:62:::1;;;::::0;-1:-1:-1;;;1763:62:4;;5593:2:6;1763:62:4::1;::::0;::::1;5575:21:6::0;5632:2;5612:18;;;5605:30;-1:-1:-1;;;5651:18:6;;;5644:52;5713:18;;1763:62:4::1;5565:172:6::0;1763:62:4::1;4313:14:::2;::::0;-1:-1:-1;;;;;4313:14:4::2;:28:::0;;:62:::2;;-1:-1:-1::0;4345:16:4::2;::::0;-1:-1:-1;;;;;4345:16:4::2;:30:::0;4313:62:::2;4305:153;;;;-1:-1:-1::0;;;4305:153:4::2;;;;;;;:::i;:::-;-1:-1:-1::0;4469:12:4::2;:24:::0;;::::2;::::0;::::2;::::0;;;;::::2;::::0;;-1:-1:-1;;;;;4469:24:4;;::::2;-1:-1:-1::0;;;;;;4469:24:4;;::::2;::::0;::::2;::::0;;;-1:-1:-1;4503:13:4;;;:6:::2;4469:24;4503:13:::0;;;;:21;;;;::::2;;::::0;;4185:346::o;5304:405::-;1595:25;1609:10;1595:13;:25::i;:::-;1574:114;;;;-1:-1:-1;;;1574:114:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;5395:24:4;;::::1;5431:1;5395:24:::0;;;:11:::1;:24;::::0;;;;;::::1;5386:71;;;;-1:-1:-1::0;;;5386:71:4::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;5483:24:4;::::1;;::::0;;;:11:::1;:24;::::0;;;;5476:31;;-1:-1:-1;;;;;;5476:31:4::1;::::0;;5518:185:::1;5542:11;:18:::0;5538:22;::::1;5518:185;;;5603:11;-1:-1:-1::0;;;;;5585:29:4::1;:11;5597:1;5585:14;;;;;;-1:-1:-1::0;;;5585:14:4::1;;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;5585:14:4::1;:29;5581:112;;;5641:11;5653:1;5641:14;;;;;;-1:-1:-1::0;;;5641:14:4::1;;;;;;;;5581:112;5562:3:::0;::::1;::::0;::::1;:::i;:::-;;;;5518:185;;763:205:2::0;902:58;;;-1:-1:-1;;;;;1764:32:6;;;902:58:2;;;1746:51:6;1813:18;;;;1806:34;;;902:58:2;;;;;;;;;;1719:18:6;;;;902:58:2;;;;;;;;-1:-1:-1;;;;;902:58:2;-1:-1:-1;;;902:58:2;;;4192:69;;;;;;;;;;;;;;;;875:86;;895:5;;902:58;-1:-1:-1;;4192:69:2;;:27;;;902:58;;4192:27;:69::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:2;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:2;;7405:2:6;4351:85:2;;;7387:21:6;7444:2;7424:18;;;7417:30;7483:34;7463:18;;;7456:62;-1:-1:-1;;;7534:18:6;;;7527:40;7584:19;;4351:85:2;7377:232:6;3861:223:3;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:3;;3542:2:6;5137:81:3;;;3524:21:6;3581:2;3561:18;;;3554:30;3620:34;3600:18;;;3593:62;-1:-1:-1;;;3671:18:6;;;3664:36;3717:19;;5137:81:3;3514:228:6;5137:81:3;-1:-1:-1;;;;;1465:19:3;;;5228:60;;;;-1:-1:-1;;;5228:60:3;;6350:2:6;5228:60:3;;;6332:21:6;6389:2;6369:18;;;6362:30;6428:31;6408:18;;;6401:59;6477:18;;5228:60:3;6322:179:6;5228:60:3;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:3;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:3:o;7561:742::-;7707:12;7735:7;7731:566;;;-1:-1:-1;7765:10:3;7758:17;;7731:566;7876:17;;:21;7872:415;;8120:10;8114:17;8180:15;8167:10;8163:2;8159:19;8152:44;8069:145;8259:12;8252:20;;-1:-1:-1;;;8252:20:3;;;;;;;;:::i;14:306:6:-;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;178:23;;-1:-1:-1;;;;;230:31:6;;220:42;;210:2;;281:6;273;266:22;325:297;392:6;445:2;433:9;424:7;420:23;416:32;413:2;;;466:6;458;451:22;413:2;503:9;497:16;556:5;549:13;542:21;535:5;532:32;522:2;;583:6;575;568:22;627:190;686:6;739:2;727:9;718:7;714:23;710:32;707:2;;;760:6;752;745:22;707:2;-1:-1:-1;788:23:6;;697:120;-1:-1:-1;697:120:6:o;822:258::-;890:6;898;951:2;939:9;930:7;926:23;922:32;919:2;;;972:6;964;957:22;919:2;-1:-1:-1;;1000:23:6;;;1070:2;1055:18;;;1042:32;;-1:-1:-1;909:171:6:o;1085:274::-;1214:3;1252:6;1246:13;1268:53;1314:6;1309:3;1302:4;1294:6;1290:17;1268:53;:::i;:::-;1337:16;;;;;1222:137;-1:-1:-1;;1222:137:6:o;2043:383::-;2192:2;2181:9;2174:21;2155:4;2224:6;2218:13;2267:6;2262:2;2251:9;2247:18;2240:34;2283:66;2342:6;2337:2;2326:9;2322:18;2317:2;2309:6;2305:15;2283:66;:::i;:::-;2410:2;2389:15;-1:-1:-1;;2385:29:6;2370:45;;;;2417:2;2366:54;;2164:262;-1:-1:-1;;2164:262:6:o;4980:406::-;5182:2;5164:21;;;5221:2;5201:18;;;5194:30;5260:34;5255:2;5240:18;;5233:62;-1:-1:-1;;;5326:2:6;5311:18;;5304:40;5376:3;5361:19;;5154:232::o;6506:343::-;6708:2;6690:21;;;6747:2;6727:18;;;6720:30;-1:-1:-1;;;6781:2:6;6766:18;;6759:49;6840:2;6825:18;;6680:169::o;8018:482::-;8220:2;8202:21;;;8259:2;8239:18;;;8232:30;8298:34;8293:2;8278:18;;8271:62;8369:34;8364:2;8349:18;;8342:62;-1:-1:-1;;;8435:3:6;8420:19;;8413:45;8490:3;8475:19;;8192:308::o;8687:128::-;8727:3;8758:1;8754:6;8751:1;8748:13;8745:2;;;8764:18;;:::i;:::-;-1:-1:-1;8800:9:6;;8735:80::o;8820:217::-;8860:1;8886;8876:2;;-1:-1:-1;;;8911:31:6;;8965:4;8962:1;8955:15;8993:4;8918:1;8983:15;8876:2;-1:-1:-1;9022:9:6;;8866:171::o;9042:168::-;9082:7;9148:1;9144;9140:6;9136:14;9133:1;9130:21;9125:1;9118:9;9111:17;9107:45;9104:2;;;9155:18;;:::i;:::-;-1:-1:-1;9195:9:6;;9094:116::o;9215:258::-;9287:1;9297:113;9311:6;9308:1;9305:13;9297:113;;;9387:11;;;9381:18;9368:11;;;9361:39;9333:2;9326:10;9297:113;;;9428:6;9425:1;9422:13;9419:2;;;9463:1;9454:6;9449:3;9445:16;9438:27;9419:2;;9268:205;;;:::o;9478:135::-;9517:3;-1:-1:-1;;9538:17:6;;9535:2;;;9558:18;;:::i;:::-;-1:-1:-1;9605:1:6;9594:13;;9525:88::o;9618:127::-;9679:10;9674:3;9670:20;9667:1;9660:31;9710:4;9707:1;9700:15;9734:4;9731:1;9724:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1123000",
								"executionCost": "103692",
								"totalCost": "1226692"
							},
							"external": {
								"addBlacked(address)": "infinite",
								"addEventAdmin(address)": "infinite",
								"addSystemAdmin(address)": "66399",
								"admins(address)": "1280",
								"betFactory()": "1094",
								"blackList(uint256)": "2136",
								"blacked(address)": "1258",
								"contractOwner()": "1093",
								"deleteEventAdmin(address)": "infinite",
								"deleteSystemAdmin(address)": "infinite",
								"ecosystemAddress()": "1095",
								"ecosystemVig()": "1107",
								"eventAdmins(uint256)": "2092",
								"eventFactory()": "1137",
								"eventOwners(address)": "1280",
								"holdersAddress()": "1139",
								"holdersVig()": "1085",
								"isBlack(address)": "438",
								"isEventAdmin(address)": "437",
								"isSystemAdmin(address)": "infinite",
								"marketFactory()": "1117",
								"removeBlacked(address)": "infinite",
								"setBetFactory(address)": "infinite",
								"setEcosystemAddress(address)": "infinite",
								"setEventFactory(address)": "infinite",
								"setHoldersAddress(address)": "infinite",
								"setMarketFactory(address)": "infinite",
								"setStableCoin(address)": "infinite",
								"setVigPercentage(uint256)": "infinite",
								"setVigPercentageShares(uint256,uint256)": "infinite",
								"shareBetEarnings(uint256)": "infinite",
								"stableCoin()": "1071",
								"systemAdmins(uint256)": "2050",
								"vigPercentage()": "1041"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 548,
									"end": 6852,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 548,
									"end": 6852,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 548,
									"end": 6852,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 955,
									"end": 957,
									"name": "PUSH",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 918,
									"end": 957,
									"name": "PUSH",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 918,
									"end": 957,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 918,
									"end": 957,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 918,
									"end": 957,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 963,
									"end": 1004,
									"name": "PUSH",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 963,
									"end": 1004,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1050,
									"end": 1052,
									"name": "PUSH",
									"source": 4,
									"value": "A"
								},
								{
									"begin": 1010,
									"end": 1052,
									"name": "PUSH",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1010,
									"end": 1052,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1352,
									"end": 1362,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1352,
									"end": 1362,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 1309,
									"end": 1363,
									"name": "PUSH",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1309,
									"end": 1363,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1309,
									"end": 1363,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1309,
									"end": 1363,
									"name": "AND",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1352,
									"end": 1362,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1352,
									"end": 1362,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1352,
									"end": 1362,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1309,
									"end": 1363,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1309,
									"end": 1363,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1309,
									"end": 1363,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1309,
									"end": 1363,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1309,
									"end": 1363,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1309,
									"end": 1363,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2120,
									"end": 2177,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 2120,
									"end": 2177,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2120,
									"end": 2177,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2120,
									"end": 2177,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2120,
									"end": 2177,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2120,
									"end": 2177,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2120,
									"end": 2177,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2120,
									"end": 2177,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 2120,
									"end": 2177,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2120,
									"end": 2177,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2144,
									"end": 2157,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2144,
									"end": 2170,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2144,
									"end": 2170,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2144,
									"end": 2170,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2160,
									"end": 2170,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 2144,
									"end": 2170,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 2144,
									"end": 2170,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2144,
									"end": 2170,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 548,
									"end": 6852,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 548,
									"end": 6852,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 548,
									"end": 6852,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 548,
									"end": 6852,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 548,
									"end": 6852,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 548,
									"end": 6852,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 548,
									"end": 6852,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122057c9a09aa8d99a9519f676de745450bc1d3c21a80586677c4f86c4da45985d8c64736f6c63430008040033",
									".code": [
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "80036B34"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "CBF89C63"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "D5494869"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "D5494869"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "D6C1CA26"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "E3C0ED78"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "ED9F7EB9"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "F2210B2C"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "CBF89C63"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "CE606EE0"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "D37E87FD"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "D43CBB15"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "992642E5"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "992642E5"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "9B460AA9"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "A8E01B28"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "CB146622"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "80036B34"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "85D8349B"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "89FEFBE1"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "9376B94C"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "387440E6"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "4FB43199"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "4FB43199"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "64886880"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "681ADA8C"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "6FDBD3F6"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "709EC8B4"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "387440E6"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "429B62E5"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "486D1E50"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "4DCC434A"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "23AF4E17"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "23AF4E17"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "2E1A9618"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "327372E4"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "332DACCF"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "26C1A4D"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "6A5CB3A"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "6AE7095"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "DA4EE50"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 6852,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1528,
											"end": 1560,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1560,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1560,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1510,
											"end": 1561,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1510,
											"end": 1561,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1498,
											"end": 1500,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 661,
											"end": 701,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 661,
											"end": 701,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 661,
											"end": 701,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 661,
											"end": 701,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 661,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 661,
											"end": 701,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 661,
											"end": 701,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 661,
											"end": 701,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 661,
											"end": 701,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 834,
											"end": 871,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 834,
											"end": 871,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 834,
											"end": 871,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 834,
											"end": 871,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 834,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 834,
											"end": 871,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 834,
											"end": 871,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 834,
											"end": 871,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 834,
											"end": 871,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 707,
											"end": 745,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 707,
											"end": 745,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 707,
											"end": 745,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 707,
											"end": 745,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 707,
											"end": 745,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 707,
											"end": 745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 707,
											"end": 745,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 707,
											"end": 745,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 707,
											"end": 745,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2419,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 2419,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2419,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2419,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2419,
											"end": 2523,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2419,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2419,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2419,
											"end": 2523,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2419,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2419,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2419,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2419,
											"end": 2523,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2419,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2419,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2419,
											"end": 2523,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 877,
											"end": 911,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 877,
											"end": 911,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 877,
											"end": 911,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 877,
											"end": 911,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 877,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 877,
											"end": 911,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 877,
											"end": 911,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 877,
											"end": 911,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 877,
											"end": 911,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6765,
											"end": 6849,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 6765,
											"end": 6849,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6765,
											"end": 6849,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 6765,
											"end": 6849,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 6765,
											"end": 6849,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6765,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6765,
											"end": 6849,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 6765,
											"end": 6849,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6765,
											"end": 6849,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 6765,
											"end": 6849,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6827,
											"end": 6831,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6827,
											"end": 6831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6765,
											"end": 6849,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6765,
											"end": 6849,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 6765,
											"end": 6849,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6765,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6765,
											"end": 6849,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2009,
											"end": 2031,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1991,
											"end": 2032,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1991,
											"end": 2032,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 1981,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1964,
											"end": 1982,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6765,
											"end": 6849,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1946,
											"end": 2038,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8651,
											"end": 8676,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8651,
											"end": 8676,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8651,
											"end": 8676,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8639,
											"end": 8641,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8624,
											"end": 8642,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 8606,
											"end": 8682,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1161,
											"end": 1202,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1161,
											"end": 1202,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1161,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1161,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1161,
											"end": 1202,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1161,
											"end": 1202,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1161,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1161,
											"end": 1202,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1161,
											"end": 1202,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1161,
											"end": 1202,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1161,
											"end": 1202,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 1161,
											"end": 1202,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1161,
											"end": 1202,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1161,
											"end": 1202,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1161,
											"end": 1202,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1161,
											"end": 1202,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1161,
											"end": 1202,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1161,
											"end": 1202,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1161,
											"end": 1202,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1161,
											"end": 1202,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1161,
											"end": 1202,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1161,
											"end": 1202,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1161,
											"end": 1202,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1161,
											"end": 1202,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 918,
											"end": 957,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 918,
											"end": 957,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 918,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 918,
											"end": 957,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 918,
											"end": 957,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 918,
											"end": 957,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 918,
											"end": 957,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2643,
											"end": 2753,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 2643,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2643,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2643,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2643,
											"end": 2753,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2643,
											"end": 2753,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2643,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2643,
											"end": 2753,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2643,
											"end": 2753,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2643,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2643,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2643,
											"end": 2753,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6302,
											"end": 6664,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 6302,
											"end": 6664,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6302,
											"end": 6664,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 6302,
											"end": 6664,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 6302,
											"end": 6664,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6302,
											"end": 6664,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6302,
											"end": 6664,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 6302,
											"end": 6664,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6302,
											"end": 6664,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 6302,
											"end": 6664,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6302,
											"end": 6664,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 6302,
											"end": 6664,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3130,
											"end": 3591,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 3130,
											"end": 3591,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3130,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3130,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3130,
											"end": 3591,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3130,
											"end": 3591,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3130,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 3130,
											"end": 3591,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3130,
											"end": 3591,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3130,
											"end": 3591,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3130,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 3130,
											"end": 3591,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5908,
											"end": 6296,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 5908,
											"end": 6296,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5908,
											"end": 6296,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 5908,
											"end": 6296,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 5908,
											"end": 6296,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5908,
											"end": 6296,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5908,
											"end": 6296,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 5908,
											"end": 6296,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5908,
											"end": 6296,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 5908,
											"end": 6296,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5908,
											"end": 6296,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 5908,
											"end": 6296,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 792,
											"end": 828,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 792,
											"end": 828,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 792,
											"end": 828,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 792,
											"end": 828,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 792,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 792,
											"end": 828,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 792,
											"end": 828,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 792,
											"end": 828,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 792,
											"end": 828,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "PUSH",
											"source": 4,
											"value": "F"
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1254,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1208,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1208,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 1208,
											"end": 1254,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1254,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1208,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1208,
											"end": 1254,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1208,
											"end": 1254,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 1208,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1254,
											"name": "PUSH",
											"source": 4,
											"value": "E"
										},
										{
											"begin": 1208,
											"end": 1254,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1208,
											"end": 1254,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1254,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1208,
											"end": 1254,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1254,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1254,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1254,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1208,
											"end": 1254,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1254,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1254,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1208,
											"end": 1254,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1254,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1254,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2759,
											"end": 2863,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 2759,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2759,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2759,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 2759,
											"end": 2863,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2759,
											"end": 2863,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2759,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2759,
											"end": 2863,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2759,
											"end": 2863,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 2759,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2759,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2759,
											"end": 2863,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 963,
											"end": 1004,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 963,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 963,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 963,
											"end": 1004,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 963,
											"end": 1004,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 963,
											"end": 1004,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 963,
											"end": 1004,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 751,
											"end": 785,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 751,
											"end": 785,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 751,
											"end": 785,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 751,
											"end": 785,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 751,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 751,
											"end": 785,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 751,
											"end": 785,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 751,
											"end": 785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 751,
											"end": 785,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5719,
											"end": 5902,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 5719,
											"end": 5902,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5719,
											"end": 5902,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 5719,
											"end": 5902,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 5719,
											"end": 5902,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5719,
											"end": 5902,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5719,
											"end": 5902,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 5719,
											"end": 5902,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5719,
											"end": 5902,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 5719,
											"end": 5902,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5719,
											"end": 5902,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 5719,
											"end": 5902,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2301,
											"end": 2413,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2301,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2301,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2301,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 2301,
											"end": 2413,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2301,
											"end": 2413,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2301,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2301,
											"end": 2413,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2301,
											"end": 2413,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 2301,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2301,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 2301,
											"end": 2413,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3597,
											"end": 4175,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 3597,
											"end": 4175,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3597,
											"end": 4175,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3597,
											"end": 4175,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 3597,
											"end": 4175,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3597,
											"end": 4175,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3597,
											"end": 4175,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3597,
											"end": 4175,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3597,
											"end": 4175,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 3597,
											"end": 4175,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3597,
											"end": 4175,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 3597,
											"end": 4175,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 622,
											"end": 650,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 622,
											"end": 650,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 622,
											"end": 650,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 650,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 622,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 622,
											"end": 650,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 622,
											"end": 650,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 622,
											"end": 650,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 622,
											"end": 650,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1122,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1094,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1094,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 1094,
											"end": 1122,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1122,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1094,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1094,
											"end": 1122,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1122,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 1094,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 1094,
											"end": 1122,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2529,
											"end": 2637,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 2529,
											"end": 2637,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2529,
											"end": 2637,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2529,
											"end": 2637,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 2529,
											"end": 2637,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2529,
											"end": 2637,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2529,
											"end": 2637,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2529,
											"end": 2637,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2529,
											"end": 2637,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 2529,
											"end": 2637,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2529,
											"end": 2637,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2529,
											"end": 2637,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4537,
											"end": 4933,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 4537,
											"end": 4933,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4537,
											"end": 4933,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 4537,
											"end": 4933,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 4537,
											"end": 4933,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4537,
											"end": 4933,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4537,
											"end": 4933,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 4537,
											"end": 4933,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4537,
											"end": 4933,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 4537,
											"end": 4933,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4537,
											"end": 4933,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 4537,
											"end": 4933,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2869,
											"end": 3124,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2869,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2869,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2869,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2869,
											"end": 3124,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2869,
											"end": 3124,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2869,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 2869,
											"end": 3124,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2869,
											"end": 3124,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2869,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2869,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 2869,
											"end": 3124,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4943,
											"end": 5298,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 4943,
											"end": 5298,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4943,
											"end": 5298,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 4943,
											"end": 5298,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 4943,
											"end": 5298,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4943,
											"end": 5298,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4943,
											"end": 5298,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 4943,
											"end": 5298,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4943,
											"end": 5298,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 4943,
											"end": 5298,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4943,
											"end": 5298,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 4943,
											"end": 5298,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4185,
											"end": 4531,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 4185,
											"end": 4531,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4185,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 4185,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 4185,
											"end": 4531,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4185,
											"end": 4531,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4185,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 4185,
											"end": 4531,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4185,
											"end": 4531,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 4185,
											"end": 4531,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4185,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 4185,
											"end": 4531,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5304,
											"end": 5709,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 5304,
											"end": 5709,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5304,
											"end": 5709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 5304,
											"end": 5709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 5304,
											"end": 5709,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5304,
											"end": 5709,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5304,
											"end": 5709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 5304,
											"end": 5709,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5304,
											"end": 5709,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 5304,
											"end": 5709,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5304,
											"end": 5709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 5304,
											"end": 5709,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2419,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2419,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 1609,
											"end": 1619,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2493,
											"end": 2507,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2493,
											"end": 2516,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2493,
											"end": 2516,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2493,
											"end": 2516,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2493,
											"end": 2516,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2493,
											"end": 2516,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2493,
											"end": 2516,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2493,
											"end": 2516,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2493,
											"end": 2516,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2493,
											"end": 2516,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2493,
											"end": 2516,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2493,
											"end": 2516,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2493,
											"end": 2516,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2493,
											"end": 2516,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2419,
											"end": 2523,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2643,
											"end": 2753,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2643,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 1609,
											"end": 1619,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2722,
											"end": 2735,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2722,
											"end": 2746,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2722,
											"end": 2746,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2722,
											"end": 2746,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2722,
											"end": 2746,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2722,
											"end": 2746,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2722,
											"end": 2746,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2722,
											"end": 2746,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2722,
											"end": 2746,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2722,
											"end": 2746,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2722,
											"end": 2746,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2722,
											"end": 2746,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2722,
											"end": 2746,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2722,
											"end": 2746,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2643,
											"end": 2753,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6302,
											"end": 6664,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 6302,
											"end": 6664,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6389,
											"end": 6402,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6389,
											"end": 6402,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6389,
											"end": 6402,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6370,
											"end": 6374,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6389,
											"end": 6402,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6389,
											"end": 6402,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6389,
											"end": 6402,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6389,
											"end": 6395,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 6389,
											"end": 6402,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6389,
											"end": 6402,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6389,
											"end": 6402,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6389,
											"end": 6402,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6389,
											"end": 6402,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6389,
											"end": 6402,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6370,
											"end": 6374,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6370,
											"end": 6374,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6389,
											"end": 6402,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6389,
											"end": 6416,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 6386,
											"end": 6632,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6445,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6431,
											"end": 6622,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 6431,
											"end": 6622,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6455,
											"end": 6467,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 6455,
											"end": 6474,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6451,
											"end": 6474,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6451,
											"end": 6474,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6431,
											"end": 6622,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6431,
											"end": 6622,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 6431,
											"end": 6622,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6522,
											"end": 6527,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6503,
											"end": 6527,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6503,
											"end": 6515,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 6516,
											"end": 6517,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6503,
											"end": 6518,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6503,
											"end": 6518,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6503,
											"end": 6518,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6503,
											"end": 6518,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6503,
											"end": 6518,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 6503,
											"end": 6518,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6503,
											"end": 6518,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6503,
											"end": 6518,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6503,
											"end": 6518,
											"name": "PUSH",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 6503,
											"end": 6518,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6503,
											"end": 6518,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6503,
											"end": 6518,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 6503,
											"end": 6518,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6503,
											"end": 6518,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6503,
											"end": 6518,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 6503,
											"end": 6518,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6503,
											"end": 6518,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6503,
											"end": 6518,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6503,
											"end": 6518,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6503,
											"end": 6518,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6503,
											"end": 6518,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6503,
											"end": 6518,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6503,
											"end": 6518,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6503,
											"end": 6518,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6503,
											"end": 6518,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6503,
											"end": 6518,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6503,
											"end": 6518,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6503,
											"end": 6527,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6499,
											"end": 6608,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6499,
											"end": 6608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 6499,
											"end": 6608,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6558,
											"end": 6562,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6558,
											"end": 6562,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6302,
											"end": 6664,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6302,
											"end": 6664,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6499,
											"end": 6608,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 6499,
											"end": 6608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6476,
											"end": 6479,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6476,
											"end": 6479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 6476,
											"end": 6479,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6476,
											"end": 6479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 6476,
											"end": 6479,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6476,
											"end": 6479,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 6476,
											"end": 6479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6476,
											"end": 6479,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6476,
											"end": 6479,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6476,
											"end": 6479,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6431,
											"end": 6622,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 6431,
											"end": 6622,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6431,
											"end": 6622,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 6431,
											"end": 6622,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6431,
											"end": 6622,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6632,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 6386,
											"end": 6632,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6652,
											"end": 6657,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6652,
											"end": 6657,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6302,
											"end": 6664,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6302,
											"end": 6664,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3130,
											"end": 3591,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 3130,
											"end": 3591,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 1609,
											"end": 1619,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3276,
											"end": 3279,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3268,
											"end": 3272,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3268,
											"end": 3279,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3268,
											"end": 3279,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3268,
											"end": 3294,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3268,
											"end": 3294,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3268,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 3268,
											"end": 3294,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3268,
											"end": 3294,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3291,
											"end": 3294,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3283,
											"end": 3287,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3283,
											"end": 3294,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3283,
											"end": 3294,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3268,
											"end": 3294,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 3268,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3247,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 3247,
											"end": 3394,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3247,
											"end": 3394,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3247,
											"end": 3394,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3247,
											"end": 3394,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3247,
											"end": 3394,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3059,
											"end": 3061,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3247,
											"end": 3394,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3247,
											"end": 3394,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3247,
											"end": 3394,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3041,
											"end": 3062,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3100,
											"name": "PUSH",
											"source": 6,
											"value": "4A"
										},
										{
											"begin": 3078,
											"end": 3096,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3078,
											"end": 3096,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3078,
											"end": 3096,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3071,
											"end": 3101,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3171,
											"name": "PUSH",
											"source": 6,
											"value": "5669672070657263656E746167657320736861726573206D7573742062652065"
										},
										{
											"begin": 3117,
											"end": 3135,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3117,
											"end": 3135,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3117,
											"end": 3135,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3110,
											"end": 3172,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3208,
											"end": 3242,
											"name": "PUSH",
											"source": 6,
											"value": "787072657373656420696E206120203020746F2031303020726174696F2E2045"
										},
										{
											"begin": 3188,
											"end": 3206,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3188,
											"end": 3206,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3188,
											"end": 3206,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3181,
											"end": 3243,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "78616D706C653A20333"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3259,
											"end": 3278,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3259,
											"end": 3278,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3259,
											"end": 3278,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3293,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3329,
											"name": "PUSH",
											"source": 6,
											"value": "A4"
										},
										{
											"begin": 3310,
											"end": 3329,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3247,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 3031,
											"end": 3335,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3247,
											"end": 3394,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 3247,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3425,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 3432,
											"end": 3436,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3425,
											"end": 3429,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3425,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 3425,
											"end": 3436,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3425,
											"end": 3436,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 3425,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3444,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3425,
											"end": 3444,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 3404,
											"end": 3527,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3527,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3404,
											"end": 3527,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3404,
											"end": 3527,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3527,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2633,
											"end": 2635,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3404,
											"end": 3527,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3404,
											"end": 3527,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3527,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2615,
											"end": 2636,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2674,
											"name": "PUSH",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 2652,
											"end": 2670,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2652,
											"end": 2670,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2652,
											"end": 2670,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2675,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2711,
											"end": 2745,
											"name": "PUSH",
											"source": 6,
											"value": "5468652073756D206F6620616C6C205669672070657263656E74616765207368"
										},
										{
											"begin": 2691,
											"end": 2709,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2691,
											"end": 2709,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2691,
											"end": 2709,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2684,
											"end": 2746,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2782,
											"end": 2809,
											"name": "PUSH",
											"source": 6,
											"value": "61726573206D75737420626520657175616C20746F2031303000000000000000"
										},
										{
											"begin": 2762,
											"end": 2780,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2762,
											"end": 2780,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2762,
											"end": 2780,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2755,
											"end": 2810,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2827,
											"end": 2846,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2827,
											"end": 2846,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3404,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 2605,
											"end": 2852,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3404,
											"end": 3527,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 3404,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3548,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3565,
											"end": 3577,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 3565,
											"end": 3584,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3130,
											"end": 3591,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5908,
											"end": 6296,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 5908,
											"end": 6296,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 1609,
											"end": 1619,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5996,
											"end": 6016,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5996,
											"end": 6016,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5996,
											"end": 6016,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6028,
											"end": 6029,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5996,
											"end": 6016,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5996,
											"end": 6016,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5996,
											"end": 6016,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5996,
											"end": 6003,
											"name": "PUSH",
											"source": 4,
											"value": "F"
										},
										{
											"begin": 5996,
											"end": 6016,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5996,
											"end": 6016,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5996,
											"end": 6016,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5996,
											"end": 6016,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5996,
											"end": 6016,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5996,
											"end": 6016,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5996,
											"end": 6016,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5987,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 5987,
											"end": 6054,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5987,
											"end": 6054,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5987,
											"end": 6054,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5987,
											"end": 6054,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5987,
											"end": 6054,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5987,
											"end": 6054,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5987,
											"end": 6054,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5987,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 5987,
											"end": 6054,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5987,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 5987,
											"end": 6054,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5987,
											"end": 6054,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 5987,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6080,
											"end": 6100,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6100,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6100,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6080,
											"end": 6100,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6100,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6100,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6087,
											"name": "PUSH",
											"source": 4,
											"value": "F"
										},
										{
											"begin": 6080,
											"end": 6100,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6080,
											"end": 6100,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6100,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6080,
											"end": 6100,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6100,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6073,
											"end": 6100,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6073,
											"end": 6100,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6073,
											"end": 6100,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6073,
											"end": 6100,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6073,
											"end": 6100,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6111,
											"end": 6290,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 6111,
											"end": 6290,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6135,
											"end": 6144,
											"name": "PUSH",
											"source": 4,
											"value": "C"
										},
										{
											"begin": 6135,
											"end": 6151,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6151,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6151,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6111,
											"end": 6290,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6111,
											"end": 6290,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 6111,
											"end": 6290,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6192,
											"end": 6203,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6176,
											"end": 6203,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6185,
											"name": "PUSH",
											"source": 4,
											"value": "C"
										},
										{
											"begin": 6186,
											"end": 6187,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6188,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6188,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6188,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6188,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6188,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 6176,
											"end": 6188,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6176,
											"end": 6188,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6176,
											"end": 6188,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6188,
											"name": "PUSH",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 6176,
											"end": 6188,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6176,
											"end": 6188,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6188,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 6176,
											"end": 6188,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6176,
											"end": 6188,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6188,
											"name": "tag",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 6176,
											"end": 6188,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6188,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6176,
											"end": 6188,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6188,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6188,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6188,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6176,
											"end": 6188,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6188,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6188,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6188,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6188,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6176,
											"end": 6188,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6203,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6172,
											"end": 6280,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6172,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 6172,
											"end": 6280,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6230,
											"end": 6239,
											"name": "PUSH",
											"source": 4,
											"value": "C"
										},
										{
											"begin": 6240,
											"end": 6241,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6230,
											"end": 6242,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6230,
											"end": 6242,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6230,
											"end": 6242,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6230,
											"end": 6242,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6230,
											"end": 6242,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 6230,
											"end": 6242,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6230,
											"end": 6242,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6230,
											"end": 6242,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6230,
											"end": 6242,
											"name": "PUSH",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 6230,
											"end": 6242,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6230,
											"end": 6242,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6230,
											"end": 6242,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 6230,
											"end": 6242,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6230,
											"end": 6242,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6230,
											"end": 6242,
											"name": "tag",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 6230,
											"end": 6242,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6230,
											"end": 6242,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6230,
											"end": 6242,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6230,
											"end": 6242,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6230,
											"end": 6242,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6230,
											"end": 6242,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6230,
											"end": 6242,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6230,
											"end": 6242,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6230,
											"end": 6242,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6230,
											"end": 6242,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6223,
											"end": 6242,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6223,
											"end": 6242,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6223,
											"end": 6242,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6223,
											"end": 6242,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6223,
											"end": 6242,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6111,
											"end": 6290,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5908,
											"end": 6296,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5908,
											"end": 6296,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6172,
											"end": 6280,
											"name": "tag",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 6172,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6153,
											"end": 6156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6153,
											"end": 6156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 6153,
											"end": 6156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6153,
											"end": 6156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 6153,
											"end": 6156,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6153,
											"end": 6156,
											"name": "tag",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 6153,
											"end": 6156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6153,
											"end": 6156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6153,
											"end": 6156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6153,
											"end": 6156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6111,
											"end": 6290,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 6111,
											"end": 6290,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6111,
											"end": 6290,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 6111,
											"end": 6290,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6111,
											"end": 6290,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5908,
											"end": 6296,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5908,
											"end": 6296,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "PUSH",
											"source": 4,
											"value": "C"
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2759,
											"end": 2863,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2759,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 1609,
											"end": 1619,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2835,
											"end": 2845,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2835,
											"end": 2856,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2835,
											"end": 2856,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2835,
											"end": 2856,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2835,
											"end": 2856,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2835,
											"end": 2856,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2835,
											"end": 2856,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2835,
											"end": 2856,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2835,
											"end": 2856,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2835,
											"end": 2856,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2835,
											"end": 2856,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2835,
											"end": 2856,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2835,
											"end": 2856,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2835,
											"end": 2856,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2759,
											"end": 2863,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5719,
											"end": 5902,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 5719,
											"end": 5902,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 1609,
											"end": 1619,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2043,
											"end": 2057,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2043,
											"end": 2057,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2043,
											"end": 2057,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2069,
											"end": 2070,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2043,
											"end": 2057,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2043,
											"end": 2057,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2043,
											"end": 2057,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2043,
											"end": 2050,
											"name": "PUSH",
											"source": 4,
											"value": "F"
										},
										{
											"begin": 2043,
											"end": 2057,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2043,
											"end": 2057,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2043,
											"end": 2057,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2043,
											"end": 2057,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2043,
											"end": 2057,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2043,
											"end": 2057,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5815,
											"end": 5820,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5815,
											"end": 5820,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2043,
											"end": 2057,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2043,
											"end": 2071,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2035,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 2035,
											"end": 2096,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2035,
											"end": 2096,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2035,
											"end": 2096,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2035,
											"end": 2096,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2035,
											"end": 2096,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7056,
											"end": 7058,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2035,
											"end": 2096,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2035,
											"end": 2096,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2035,
											"end": 2096,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7038,
											"end": 7059,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7095,
											"end": 7097,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 7075,
											"end": 7093,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7075,
											"end": 7093,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7075,
											"end": 7093,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7068,
											"end": 7098,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "185B1C9958591E481A5B88189B1858DADB1A5CDD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7114,
											"end": 7132,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 7114,
											"end": 7132,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7114,
											"end": 7132,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7107,
											"end": 7157,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7174,
											"end": 7192,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7174,
											"end": 7192,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 7028,
											"end": 7198,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2096,
											"name": "tag",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 2035,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5836,
											"end": 5847,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "PUSH",
											"source": 4,
											"value": "175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9"
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5869,
											"end": 5887,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5869,
											"end": 5887,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5869,
											"end": 5887,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5869,
											"end": 5880,
											"name": "PUSH",
											"source": 4,
											"value": "E"
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5869,
											"end": 5887,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5869,
											"end": 5887,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5869,
											"end": 5887,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5869,
											"end": 5887,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5869,
											"end": 5895,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5869,
											"end": 5895,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5869,
											"end": 5895,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5869,
											"end": 5895,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5869,
											"end": 5895,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5869,
											"end": 5895,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 5869,
											"end": 5895,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5869,
											"end": 5895,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5719,
											"end": 5902,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2301,
											"end": 2413,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 2301,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 1609,
											"end": 1619,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "tag",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2381,
											"end": 2397,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2381,
											"end": 2406,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2381,
											"end": 2406,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2381,
											"end": 2406,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2381,
											"end": 2406,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2381,
											"end": 2406,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2381,
											"end": 2406,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2381,
											"end": 2406,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2381,
											"end": 2406,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2381,
											"end": 2406,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2381,
											"end": 2406,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2381,
											"end": 2406,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2381,
											"end": 2406,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2381,
											"end": 2406,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2301,
											"end": 2413,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3597,
											"end": 4175,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 3597,
											"end": 4175,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3692,
											"end": 3693,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3679,
											"end": 3689,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3679,
											"end": 3693,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3671,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 3671,
											"end": 3733,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3671,
											"end": 3733,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3671,
											"end": 3733,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3671,
											"end": 3733,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3671,
											"end": 3733,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7816,
											"end": 7818,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3671,
											"end": 3733,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3671,
											"end": 3733,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3671,
											"end": 3733,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7798,
											"end": 7819,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7855,
											"end": 7857,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 7835,
											"end": 7853,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7835,
											"end": 7853,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7835,
											"end": 7853,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7828,
											"end": 7858,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7894,
											"end": 7928,
											"name": "PUSH",
											"source": 6,
											"value": "626574206561726E696E6773206D757374206265206772656174657220746861"
										},
										{
											"begin": 7874,
											"end": 7892,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 7874,
											"end": 7892,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7874,
											"end": 7892,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7867,
											"end": 7929,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7945,
											"end": 7963,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7945,
											"end": 7963,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7945,
											"end": 7963,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7938,
											"end": 7971,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7988,
											"end": 8007,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 7988,
											"end": 8007,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3671,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 7788,
											"end": 8013,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3671,
											"end": 3733,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 3671,
											"end": 3733,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3743,
											"end": 3763,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3794,
											"end": 3797,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3780,
											"end": 3790,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 3780,
											"end": 3790,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3767,
											"end": 3777,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3767,
											"end": 3790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 3767,
											"end": 3790,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3767,
											"end": 3790,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3767,
											"end": 3790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 3767,
											"end": 3790,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3767,
											"end": 3790,
											"name": "tag",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 3767,
											"end": 3790,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3766,
											"end": 3797,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 3766,
											"end": 3797,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3766,
											"end": 3797,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3766,
											"end": 3797,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 3766,
											"end": 3797,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3766,
											"end": 3797,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 3766,
											"end": 3797,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3743,
											"end": 3797,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3743,
											"end": 3797,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3830,
											"end": 3831,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3815,
											"end": 3827,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3815,
											"end": 3831,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3807,
											"end": 3873,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 3807,
											"end": 3873,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3807,
											"end": 3873,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3807,
											"end": 3873,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3807,
											"end": 3873,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3807,
											"end": 3873,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5944,
											"end": 5946,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3807,
											"end": 3873,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3807,
											"end": 3873,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3807,
											"end": 3873,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5926,
											"end": 5947,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5983,
											"end": 5985,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 5963,
											"end": 5981,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5963,
											"end": 5981,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5963,
											"end": 5981,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5956,
											"end": 5986,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6022,
											"end": 6056,
											"name": "PUSH",
											"source": 6,
											"value": "686F6C6465727327207368617265206D75737420626520677265617465722074"
										},
										{
											"begin": 6002,
											"end": 6020,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 6002,
											"end": 6020,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6002,
											"end": 6020,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5995,
											"end": 6057,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68616E203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6073,
											"end": 6091,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6073,
											"end": 6091,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6091,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6066,
											"end": 6101,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6118,
											"end": 6137,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 6118,
											"end": 6137,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3873,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 5916,
											"end": 6143,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3873,
											"name": "tag",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 3807,
											"end": 3873,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3883,
											"end": 3905,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3941,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3922,
											"end": 3934,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 3922,
											"end": 3934,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3909,
											"end": 3919,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3909,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 3909,
											"end": 3934,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3909,
											"end": 3934,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3909,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 3909,
											"end": 3934,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3909,
											"end": 3934,
											"name": "tag",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 3909,
											"end": 3934,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3908,
											"end": 3941,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 3908,
											"end": 3941,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3908,
											"end": 3941,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3908,
											"end": 3941,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 3908,
											"end": 3941,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3908,
											"end": 3941,
											"name": "tag",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 3908,
											"end": 3941,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3883,
											"end": 3941,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3883,
											"end": 3941,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3976,
											"end": 3977,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3959,
											"end": 3973,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3959,
											"end": 3977,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 4020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 3951,
											"end": 4020,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 4020,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3951,
											"end": 4020,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3951,
											"end": 4020,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 4020,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3949,
											"end": 3951,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3951,
											"end": 4020,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3951,
											"end": 4020,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 4020,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3931,
											"end": 3952,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 3990,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 3968,
											"end": 3986,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3968,
											"end": 3986,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3968,
											"end": 3986,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3961,
											"end": 3991,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4061,
											"name": "PUSH",
											"source": 6,
											"value": "65636F73797374656D207368617265206D757374206265206772656174657220"
										},
										{
											"begin": 4007,
											"end": 4025,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4007,
											"end": 4025,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4007,
											"end": 4025,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4000,
											"end": 4062,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7468616E203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4078,
											"end": 4096,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4078,
											"end": 4096,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4078,
											"end": 4096,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4071,
											"end": 4107,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4124,
											"end": 4143,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4124,
											"end": 4143,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3951,
											"end": 4020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 3921,
											"end": 4149,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3951,
											"end": 4020,
											"name": "tag",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 3951,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4063,
											"end": 4079,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4063,
											"end": 4079,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4031,
											"end": 4049,
											"name": "PUSH",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 4031,
											"end": 4049,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4031,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 4031,
											"end": 4096,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4031,
											"end": 4049,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4031,
											"end": 4049,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4031,
											"end": 4049,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4031,
											"end": 4049,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4063,
											"end": 4079,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4081,
											"end": 4095,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4031,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 4031,
											"end": 4096,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4031,
											"end": 4096,
											"name": "tag",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 4031,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4153,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4139,
											"end": 4153,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4107,
											"end": 4125,
											"name": "PUSH",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 4107,
											"end": 4125,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4107,
											"end": 4168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 4107,
											"end": 4168,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4107,
											"end": 4125,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4107,
											"end": 4125,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4107,
											"end": 4125,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4107,
											"end": 4125,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4153,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4155,
											"end": 4167,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4107,
											"end": 4138,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 4107,
											"end": 4168,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4107,
											"end": 4168,
											"name": "tag",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 4107,
											"end": 4168,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3597,
											"end": 4175,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3597,
											"end": 4175,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3597,
											"end": 4175,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3597,
											"end": 4175,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1094,
											"end": 1122,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 1094,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1122,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 1094,
											"end": 1122,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1122,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1122,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1122,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1122,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 1094,
											"end": 1122,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1122,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 1122,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1122,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2529,
											"end": 2637,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2529,
											"end": 2637,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 1609,
											"end": 1619,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "tag",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "tag",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2607,
											"end": 2619,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2607,
											"end": 2630,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2607,
											"end": 2630,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2607,
											"end": 2630,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2607,
											"end": 2630,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2607,
											"end": 2630,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2607,
											"end": 2630,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2607,
											"end": 2630,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2607,
											"end": 2630,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2607,
											"end": 2630,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2607,
											"end": 2630,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2607,
											"end": 2630,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2607,
											"end": 2630,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2607,
											"end": 2630,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2529,
											"end": 2637,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4537,
											"end": 4933,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 4537,
											"end": 4933,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1448,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1435,
											"end": 1448,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1435,
											"end": 1448,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1421,
											"end": 1431,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1421,
											"end": 1448,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "tag",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4623,
											"end": 4643,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4643,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4643,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4655,
											"end": 4656,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4623,
											"end": 4643,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4643,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4643,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4629,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 4623,
											"end": 4643,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4623,
											"end": 4643,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4643,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4623,
											"end": 4643,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4643,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4643,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4643,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4614,
											"end": 4681,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 4614,
											"end": 4681,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4614,
											"end": 4681,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4614,
											"end": 4681,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4614,
											"end": 4681,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4614,
											"end": 4681,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4614,
											"end": 4681,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4614,
											"end": 4681,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4614,
											"end": 4681,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 4614,
											"end": 4681,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4614,
											"end": 4681,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 4614,
											"end": 4681,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4614,
											"end": 4681,
											"name": "tag",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 4614,
											"end": 4681,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4707,
											"end": 4727,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4727,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4727,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4707,
											"end": 4727,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4727,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4727,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4713,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 4707,
											"end": 4727,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4707,
											"end": 4727,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4727,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4707,
											"end": 4727,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4727,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4700,
											"end": 4727,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4700,
											"end": 4727,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4700,
											"end": 4727,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4700,
											"end": 4727,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4700,
											"end": 4727,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4738,
											"end": 4927,
											"name": "tag",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 4738,
											"end": 4927,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 4762,
											"end": 4781,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4758,
											"end": 4781,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4758,
											"end": 4781,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4738,
											"end": 4927,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4738,
											"end": 4927,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 4738,
											"end": 4927,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4825,
											"end": 4837,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4806,
											"end": 4837,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4806,
											"end": 4818,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 4819,
											"end": 4820,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4806,
											"end": 4821,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4806,
											"end": 4821,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4806,
											"end": 4821,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4806,
											"end": 4821,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4806,
											"end": 4821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 4806,
											"end": 4821,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4806,
											"end": 4821,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4806,
											"end": 4821,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4806,
											"end": 4821,
											"name": "PUSH",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 4806,
											"end": 4821,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4806,
											"end": 4821,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4806,
											"end": 4821,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4806,
											"end": 4821,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4806,
											"end": 4821,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4806,
											"end": 4821,
											"name": "tag",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 4806,
											"end": 4821,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4806,
											"end": 4821,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4806,
											"end": 4821,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4806,
											"end": 4821,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4806,
											"end": 4821,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4806,
											"end": 4821,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4806,
											"end": 4821,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4806,
											"end": 4821,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4806,
											"end": 4821,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4806,
											"end": 4821,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4806,
											"end": 4821,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4806,
											"end": 4821,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4806,
											"end": 4837,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4802,
											"end": 4917,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4802,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 4802,
											"end": 4917,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4864,
											"end": 4876,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 4877,
											"end": 4878,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4864,
											"end": 4879,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4864,
											"end": 4879,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4864,
											"end": 4879,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4864,
											"end": 4879,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4864,
											"end": 4879,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 4864,
											"end": 4879,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4864,
											"end": 4879,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4864,
											"end": 4879,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4864,
											"end": 4879,
											"name": "PUSH",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 4864,
											"end": 4879,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4864,
											"end": 4879,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4864,
											"end": 4879,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4864,
											"end": 4879,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4864,
											"end": 4879,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4802,
											"end": 4917,
											"name": "tag",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 4802,
											"end": 4917,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4783,
											"end": 4786,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4783,
											"end": 4786,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 4783,
											"end": 4786,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4783,
											"end": 4786,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 4783,
											"end": 4786,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4783,
											"end": 4786,
											"name": "tag",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 4783,
											"end": 4786,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4783,
											"end": 4786,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4783,
											"end": 4786,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4783,
											"end": 4786,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4738,
											"end": 4927,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 4738,
											"end": 4927,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2869,
											"end": 3124,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 2869,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 1609,
											"end": 1619,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "tag",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "tag",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2986,
											"end": 2988,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 2972,
											"end": 2983,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2972,
											"end": 2988,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2951,
											"end": 3080,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 2951,
											"end": 3080,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2951,
											"end": 3080,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2951,
											"end": 3080,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2951,
											"end": 3080,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2951,
											"end": 3080,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4709,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2951,
											"end": 3080,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2951,
											"end": 3080,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2951,
											"end": 3080,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4689,
											"end": 4710,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 4748,
											"name": "PUSH",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 4726,
											"end": 4744,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4726,
											"end": 4744,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4726,
											"end": 4744,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4719,
											"end": 4749,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4785,
											"end": 4819,
											"name": "PUSH",
											"source": 6,
											"value": "5669672070657263656E74616765206D75737420626520657870726573736564"
										},
										{
											"begin": 4765,
											"end": 4783,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4765,
											"end": 4783,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4765,
											"end": 4783,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4758,
											"end": 4820,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4856,
											"end": 4890,
											"name": "PUSH",
											"source": 6,
											"value": "20696E203020746F2031302070657263656E746167652E204578616D706C653A"
										},
										{
											"begin": 4836,
											"end": 4854,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4836,
											"end": 4854,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4836,
											"end": 4854,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4829,
											"end": 4891,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "101B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4907,
											"end": 4926,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4907,
											"end": 4926,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4907,
											"end": 4926,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4900,
											"end": 4933,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4950,
											"end": 4969,
											"name": "PUSH",
											"source": 6,
											"value": "A4"
										},
										{
											"begin": 4950,
											"end": 4969,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2951,
											"end": 3080,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 4679,
											"end": 4975,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2951,
											"end": 3080,
											"name": "tag",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 2951,
											"end": 3080,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3090,
											"end": 3103,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 3090,
											"end": 3117,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2869,
											"end": 3124,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4943,
											"end": 5298,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 4943,
											"end": 5298,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 1609,
											"end": 1619,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "tag",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "tag",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1907,
											"end": 1925,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1907,
											"end": 1925,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1907,
											"end": 1925,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1937,
											"end": 1938,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1907,
											"end": 1925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1907,
											"end": 1925,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1907,
											"end": 1925,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1907,
											"end": 1918,
											"name": "PUSH",
											"source": 4,
											"value": "E"
										},
										{
											"begin": 1907,
											"end": 1925,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1907,
											"end": 1925,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1907,
											"end": 1925,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1907,
											"end": 1925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1907,
											"end": 1925,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1907,
											"end": 1925,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5047,
											"end": 5052,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5047,
											"end": 5052,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1907,
											"end": 1925,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1907,
											"end": 1939,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 1899,
											"end": 1966,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1966,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1899,
											"end": 1966,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1899,
											"end": 1966,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1966,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4356,
											"end": 4358,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1899,
											"end": 1966,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1899,
											"end": 1966,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1966,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4338,
											"end": 4359,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4395,
											"end": 4397,
											"name": "PUSH",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 4375,
											"end": 4393,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4375,
											"end": 4393,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4375,
											"end": 4393,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4368,
											"end": 4398,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "30B63932B0B23C9030B71032BB32B73A1030B236B4B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4414,
											"end": 4432,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4414,
											"end": 4432,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4414,
											"end": 4432,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4407,
											"end": 4459,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4476,
											"end": 4494,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4476,
											"end": 4494,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 4328,
											"end": 4500,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1966,
											"name": "tag",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 1899,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5090,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5076,
											"end": 5090,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5076,
											"end": 5090,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5104,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5104,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 5076,
											"end": 5138,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5108,
											"end": 5124,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5108,
											"end": 5124,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5108,
											"end": 5124,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5108,
											"end": 5138,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5138,
											"name": "tag",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 5076,
											"end": 5138,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5068,
											"end": 5221,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 5068,
											"end": 5221,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5068,
											"end": 5221,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5068,
											"end": 5221,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5068,
											"end": 5221,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5068,
											"end": 5221,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5068,
											"end": 5221,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5068,
											"end": 5221,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5068,
											"end": 5221,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 5068,
											"end": 5221,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5068,
											"end": 5221,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 5068,
											"end": 5221,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4185,
											"end": 4531,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 4185,
											"end": 4531,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1448,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1435,
											"end": 1448,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1435,
											"end": 1448,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1421,
											"end": 1431,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1421,
											"end": 1448,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "tag",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1771,
											"end": 1784,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1771,
											"end": 1784,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1771,
											"end": 1784,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1796,
											"end": 1797,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1771,
											"end": 1784,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1771,
											"end": 1784,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1771,
											"end": 1784,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 1771,
											"end": 1784,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1771,
											"end": 1784,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1771,
											"end": 1784,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1771,
											"end": 1784,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1771,
											"end": 1784,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1771,
											"end": 1784,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4284,
											"end": 4289,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4284,
											"end": 4289,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1771,
											"end": 1784,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1771,
											"end": 1798,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1763,
											"end": 1825,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 1763,
											"end": 1825,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1763,
											"end": 1825,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1763,
											"end": 1825,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1763,
											"end": 1825,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1763,
											"end": 1825,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5593,
											"end": 5595,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1763,
											"end": 1825,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1763,
											"end": 1825,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1763,
											"end": 1825,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5575,
											"end": 5596,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5632,
											"end": 5634,
											"name": "PUSH",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 5612,
											"end": 5630,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5612,
											"end": 5630,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5612,
											"end": 5630,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5605,
											"end": 5635,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "30B63932B0B23C90309039BCB9BA32B69030B236B4B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5651,
											"end": 5669,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5651,
											"end": 5669,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5669,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5644,
											"end": 5696,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5731,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5713,
											"end": 5731,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1763,
											"end": 1825,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 5565,
											"end": 5737,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1763,
											"end": 1825,
											"name": "tag",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 1763,
											"end": 1825,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4313,
											"end": 4327,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4313,
											"end": 4327,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4313,
											"end": 4327,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4313,
											"end": 4341,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4313,
											"end": 4341,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4313,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 4313,
											"end": 4375,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4345,
											"end": 4375,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4313,
											"end": 4375,
											"name": "tag",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 4313,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4305,
											"end": 4458,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 4305,
											"end": 4458,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4305,
											"end": 4458,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4305,
											"end": 4458,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4305,
											"end": 4458,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4305,
											"end": 4458,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4305,
											"end": 4458,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4305,
											"end": 4458,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4305,
											"end": 4458,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 4305,
											"end": 4458,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4305,
											"end": 4458,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 4305,
											"end": 4458,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4305,
											"end": 4458,
											"name": "tag",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 4305,
											"end": 4458,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4469,
											"end": 4481,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 4469,
											"end": 4493,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4469,
											"end": 4493,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4469,
											"end": 4493,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4469,
											"end": 4493,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4469,
											"end": 4493,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4469,
											"end": 4493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4469,
											"end": 4493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4469,
											"end": 4493,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4469,
											"end": 4493,
											"name": "PUSH",
											"source": 4,
											"value": "C65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8"
										},
										{
											"begin": 4469,
											"end": 4493,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4469,
											"end": 4493,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4469,
											"end": 4493,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4469,
											"end": 4493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4469,
											"end": 4493,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4469,
											"end": 4493,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4469,
											"end": 4493,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4469,
											"end": 4493,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4469,
											"end": 4493,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4469,
											"end": 4493,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4469,
											"end": 4493,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 4469,
											"end": 4493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4469,
											"end": 4493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4469,
											"end": 4493,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4503,
											"end": 4516,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4503,
											"end": 4516,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4503,
											"end": 4516,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4503,
											"end": 4509,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 4469,
											"end": 4493,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4503,
											"end": 4516,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4503,
											"end": 4516,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4503,
											"end": 4516,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4503,
											"end": 4516,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4503,
											"end": 4524,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4503,
											"end": 4524,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4503,
											"end": 4524,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4503,
											"end": 4524,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4503,
											"end": 4524,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4503,
											"end": 4524,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 4503,
											"end": 4524,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4503,
											"end": 4524,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4185,
											"end": 4531,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5304,
											"end": 5709,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 5304,
											"end": 5709,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 1609,
											"end": 1619,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "tag",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "tag",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5395,
											"end": 5419,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5395,
											"end": 5419,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5395,
											"end": 5419,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5431,
											"end": 5432,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5395,
											"end": 5419,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5395,
											"end": 5419,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5395,
											"end": 5419,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5395,
											"end": 5406,
											"name": "PUSH",
											"source": 4,
											"value": "E"
										},
										{
											"begin": 5395,
											"end": 5419,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5395,
											"end": 5419,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5395,
											"end": 5419,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5395,
											"end": 5419,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5395,
											"end": 5419,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5395,
											"end": 5419,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5395,
											"end": 5419,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5386,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 5386,
											"end": 5457,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5386,
											"end": 5457,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5386,
											"end": 5457,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5386,
											"end": 5457,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5386,
											"end": 5457,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5386,
											"end": 5457,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5386,
											"end": 5457,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5386,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 5386,
											"end": 5457,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5386,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 5386,
											"end": 5457,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5386,
											"end": 5457,
											"name": "tag",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 5386,
											"end": 5457,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5483,
											"end": 5507,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5483,
											"end": 5507,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5483,
											"end": 5507,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5483,
											"end": 5507,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5483,
											"end": 5507,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5483,
											"end": 5507,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5483,
											"end": 5494,
											"name": "PUSH",
											"source": 4,
											"value": "E"
										},
										{
											"begin": 5483,
											"end": 5507,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5483,
											"end": 5507,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5483,
											"end": 5507,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5483,
											"end": 5507,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5483,
											"end": 5507,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5476,
											"end": 5507,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5476,
											"end": 5507,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5476,
											"end": 5507,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5476,
											"end": 5507,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5476,
											"end": 5507,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5518,
											"end": 5703,
											"name": "tag",
											"source": 4,
											"value": "326"
										},
										{
											"begin": 5518,
											"end": 5703,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5542,
											"end": 5553,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5538,
											"end": 5560,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5538,
											"end": 5560,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5518,
											"end": 5703,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5518,
											"end": 5703,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 5518,
											"end": 5703,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5603,
											"end": 5614,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5585,
											"end": 5614,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5585,
											"end": 5596,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 5597,
											"end": 5598,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5585,
											"end": 5599,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5585,
											"end": 5599,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5585,
											"end": 5599,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5585,
											"end": 5599,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5585,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 5585,
											"end": 5599,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5585,
											"end": 5599,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5585,
											"end": 5599,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5585,
											"end": 5599,
											"name": "PUSH",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 5585,
											"end": 5599,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5585,
											"end": 5599,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5585,
											"end": 5599,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5585,
											"end": 5599,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5585,
											"end": 5599,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5585,
											"end": 5599,
											"name": "tag",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 5585,
											"end": 5599,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5585,
											"end": 5599,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5585,
											"end": 5599,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5585,
											"end": 5599,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5585,
											"end": 5599,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5585,
											"end": 5599,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5585,
											"end": 5599,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5585,
											"end": 5599,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5585,
											"end": 5599,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5585,
											"end": 5599,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5585,
											"end": 5599,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5585,
											"end": 5599,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5585,
											"end": 5614,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5581,
											"end": 5693,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5581,
											"end": 5693,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 5581,
											"end": 5693,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5652,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 5653,
											"end": 5654,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5655,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5655,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5655,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5655,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5655,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 5641,
											"end": 5655,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5641,
											"end": 5655,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5641,
											"end": 5655,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5655,
											"name": "PUSH",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 5641,
											"end": 5655,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5641,
											"end": 5655,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5655,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5641,
											"end": 5655,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5641,
											"end": 5655,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5581,
											"end": 5693,
											"name": "tag",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 5581,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5562,
											"end": 5565,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5562,
											"end": 5565,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "334"
										},
										{
											"begin": 5562,
											"end": 5565,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5562,
											"end": 5565,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 5562,
											"end": 5565,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5562,
											"end": 5565,
											"name": "tag",
											"source": 4,
											"value": "334"
										},
										{
											"begin": 5562,
											"end": 5565,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5562,
											"end": 5565,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5562,
											"end": 5565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5562,
											"end": 5565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5518,
											"end": 5703,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "326"
										},
										{
											"begin": 5518,
											"end": 5703,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 763,
											"end": 968,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 763,
											"end": 968,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1764,
											"end": 1796,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1764,
											"end": 1796,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1764,
											"end": 1796,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 902,
											"end": 960,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1797,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1813,
											"end": 1831,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1813,
											"end": 1831,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1813,
											"end": 1831,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1813,
											"end": 1831,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1806,
											"end": 1840,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1806,
											"end": 1840,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1806,
											"end": 1840,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 902,
											"end": 960,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1719,
											"end": 1737,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1719,
											"end": 1737,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1719,
											"end": 1737,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1719,
											"end": 1737,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 902,
											"end": 960,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 902,
											"end": 960,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 902,
											"end": 960,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 2,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 875,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 875,
											"end": 961,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 895,
											"end": 900,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 895,
											"end": 900,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "tag",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4275,
											"end": 4292,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4275,
											"end": 4292,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4261,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4261,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4275,
											"end": 4296,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4370,
											"end": 4380,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "tag",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7405,
											"end": 7407,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7387,
											"end": 7408,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7444,
											"end": 7446,
											"name": "PUSH",
											"source": 6,
											"value": "2A"
										},
										{
											"begin": 7424,
											"end": 7442,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7424,
											"end": 7442,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7424,
											"end": 7442,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7417,
											"end": 7447,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7483,
											"end": 7517,
											"name": "PUSH",
											"source": 6,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 7463,
											"end": 7481,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 7463,
											"end": 7481,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7481,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7456,
											"end": 7518,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD081CDD58D8D95959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7534,
											"end": 7552,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7534,
											"end": 7552,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7534,
											"end": 7552,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7527,
											"end": 7567,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7584,
											"end": 7603,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 7584,
											"end": 7603,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 7377,
											"end": 7609,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "tag",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3994,
											"end": 4006,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "350"
										},
										{
											"begin": 4047,
											"end": 4053,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4055,
											"end": 4059,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4061,
											"end": 4062,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4025,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "tag",
											"source": 3,
											"value": "350"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "tag",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "tag",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5113,
											"end": 5125,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5170,
											"end": 5175,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5145,
											"end": 5166,
											"name": "SELFBALANCE",
											"source": 3
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3542,
											"end": 3544,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3524,
											"end": 3545,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3581,
											"end": 3583,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3584,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3620,
											"end": 3654,
											"name": "PUSH",
											"source": 6,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 3600,
											"end": 3618,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3600,
											"end": 3618,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3600,
											"end": 3618,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3655,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C8818D85B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3671,
											"end": 3689,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3671,
											"end": 3689,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3671,
											"end": 3689,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3664,
											"end": 3700,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3717,
											"end": 3736,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3717,
											"end": 3736,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 3514,
											"end": 3742,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6350,
											"end": 6352,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6332,
											"end": 6353,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6389,
											"end": 6391,
											"name": "PUSH",
											"source": 6,
											"value": "1D"
										},
										{
											"begin": 6369,
											"end": 6387,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6369,
											"end": 6387,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6369,
											"end": 6387,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6362,
											"end": 6392,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6428,
											"end": 6459,
											"name": "PUSH",
											"source": 6,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 6408,
											"end": 6426,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 6408,
											"end": 6426,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6408,
											"end": 6426,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6401,
											"end": 6460,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6495,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6477,
											"end": 6495,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 6322,
											"end": 6501,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5300,
											"end": 5312,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5337,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5347,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5360,
											"end": 5365,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5367,
											"end": 5371,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "366"
										},
										{
											"begin": 5406,
											"end": 5413,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5415,
											"end": 5425,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5427,
											"end": 5439,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "tag",
											"source": 3,
											"value": "366"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7561,
											"end": 8303,
											"name": "tag",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 7561,
											"end": 8303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7707,
											"end": 7719,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7735,
											"end": 7742,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "370"
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7765,
											"end": 7775,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "tag",
											"source": 3,
											"value": "370"
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7876,
											"end": 7893,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7876,
											"end": 7893,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7876,
											"end": 7897,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7872,
											"end": 8287,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "372"
										},
										{
											"begin": 7872,
											"end": 8287,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8120,
											"end": 8130,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8114,
											"end": 8131,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8180,
											"end": 8195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8167,
											"end": 8177,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8163,
											"end": 8165,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8159,
											"end": 8178,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8152,
											"end": 8196,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8069,
											"end": 8214,
											"name": "tag",
											"source": 3,
											"value": "372"
										},
										{
											"begin": 8069,
											"end": 8214,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8259,
											"end": 8271,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 320,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 14,
											"end": 320,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 94,
											"end": 96,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 94,
											"end": 96,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 94,
											"end": 96,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 147,
											"end": 153,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 139,
											"end": 145,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 132,
											"end": 154,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 94,
											"end": 96,
											"name": "tag",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 94,
											"end": 96,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 178,
											"end": 201,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 178,
											"end": 201,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 230,
											"end": 261,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 230,
											"end": 261,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 220,
											"end": 262,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 220,
											"end": 262,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 210,
											"end": 212,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 210,
											"end": 212,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 281,
											"end": 287,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 273,
											"end": 279,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 266,
											"end": 288,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 325,
											"end": 622,
											"name": "tag",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 325,
											"end": 622,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 392,
											"end": 398,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 447,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 433,
											"end": 442,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 424,
											"end": 431,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 420,
											"end": 443,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 416,
											"end": 448,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 413,
											"end": 415,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 413,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 413,
											"end": 415,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 466,
											"end": 472,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 458,
											"end": 464,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 451,
											"end": 473,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 413,
											"end": 415,
											"name": "tag",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 413,
											"end": 415,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 503,
											"end": 512,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 497,
											"end": 513,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 556,
											"end": 561,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 549,
											"end": 562,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 542,
											"end": 563,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 535,
											"end": 540,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 532,
											"end": 564,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 522,
											"end": 524,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 522,
											"end": 524,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 583,
											"end": 589,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 575,
											"end": 581,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 568,
											"end": 590,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 627,
											"end": 817,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 627,
											"end": 817,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 686,
											"end": 692,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 739,
											"end": 741,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 727,
											"end": 736,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 718,
											"end": 725,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 714,
											"end": 737,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 710,
											"end": 742,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 707,
											"end": 709,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 707,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 707,
											"end": 709,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 760,
											"end": 766,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 752,
											"end": 758,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 745,
											"end": 767,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 707,
											"end": 709,
											"name": "tag",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 707,
											"end": 709,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 788,
											"end": 811,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 788,
											"end": 811,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 697,
											"end": 817,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 697,
											"end": 817,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 822,
											"end": 1080,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 822,
											"end": 1080,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 890,
											"end": 896,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 898,
											"end": 904,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 951,
											"end": 953,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 939,
											"end": 948,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 930,
											"end": 937,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 926,
											"end": 949,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 922,
											"end": 954,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 919,
											"end": 921,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 919,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "386"
										},
										{
											"begin": 919,
											"end": 921,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 972,
											"end": 978,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 964,
											"end": 970,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 957,
											"end": 979,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 919,
											"end": 921,
											"name": "tag",
											"source": 6,
											"value": "386"
										},
										{
											"begin": 919,
											"end": 921,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1000,
											"end": 1023,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1023,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1023,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1070,
											"end": 1072,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1055,
											"end": 1073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1055,
											"end": 1073,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1055,
											"end": 1073,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1074,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1074,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 909,
											"end": 1080,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1085,
											"end": 1359,
											"name": "tag",
											"source": 6,
											"value": "362"
										},
										{
											"begin": 1085,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1214,
											"end": 1217,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1252,
											"end": 1258,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1246,
											"end": 1259,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1268,
											"end": 1321,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "388"
										},
										{
											"begin": 1314,
											"end": 1320,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1309,
											"end": 1312,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1306,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1294,
											"end": 1300,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1290,
											"end": 1307,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1268,
											"end": 1321,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "389"
										},
										{
											"begin": 1268,
											"end": 1321,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1268,
											"end": 1321,
											"name": "tag",
											"source": 6,
											"value": "388"
										},
										{
											"begin": 1268,
											"end": 1321,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1353,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1353,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1353,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1353,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1353,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1359,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1222,
											"end": 1359,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2043,
											"end": 2426,
											"name": "tag",
											"source": 6,
											"value": "375"
										},
										{
											"begin": 2043,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2192,
											"end": 2194,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2181,
											"end": 2190,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2174,
											"end": 2195,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2155,
											"end": 2159,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2224,
											"end": 2230,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2231,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2267,
											"end": 2273,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2262,
											"end": 2264,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2251,
											"end": 2260,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2247,
											"end": 2265,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2240,
											"end": 2274,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2283,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "394"
										},
										{
											"begin": 2342,
											"end": 2348,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2337,
											"end": 2339,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2326,
											"end": 2335,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2322,
											"end": 2340,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2317,
											"end": 2319,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2309,
											"end": 2315,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2320,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2283,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "389"
										},
										{
											"begin": 2283,
											"end": 2349,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2283,
											"end": 2349,
											"name": "tag",
											"source": 6,
											"value": "394"
										},
										{
											"begin": 2283,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2410,
											"end": 2412,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2389,
											"end": 2404,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2385,
											"end": 2414,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2415,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2415,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2415,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2415,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2417,
											"end": 2419,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2366,
											"end": 2420,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2366,
											"end": 2420,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2164,
											"end": 2426,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2164,
											"end": 2426,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4980,
											"end": 5386,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 4980,
											"end": 5386,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5182,
											"end": 5184,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5164,
											"end": 5185,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5164,
											"end": 5185,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5164,
											"end": 5185,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5221,
											"end": 5223,
											"name": "PUSH",
											"source": 6,
											"value": "2A"
										},
										{
											"begin": 5201,
											"end": 5219,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5201,
											"end": 5219,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5201,
											"end": 5219,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5194,
											"end": 5224,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5260,
											"end": 5294,
											"name": "PUSH",
											"source": 6,
											"value": "596F752068617665206E6F2070726976696C65676520746F2072756E20746869"
										},
										{
											"begin": 5255,
											"end": 5257,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5240,
											"end": 5258,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5240,
											"end": 5258,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5233,
											"end": 5295,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3990333AB731BA34B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5326,
											"end": 5328,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5311,
											"end": 5329,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5311,
											"end": 5329,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5304,
											"end": 5344,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5376,
											"end": 5379,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 5361,
											"end": 5380,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5361,
											"end": 5380,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5154,
											"end": 5386,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6506,
											"end": 6849,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 6506,
											"end": 6849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6708,
											"end": 6710,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6690,
											"end": 6711,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6690,
											"end": 6711,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6690,
											"end": 6711,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6747,
											"end": 6749,
											"name": "PUSH",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 6727,
											"end": 6745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6727,
											"end": 6745,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6727,
											"end": 6745,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6720,
											"end": 6750,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24B73B30B634B21032BB32B73A1037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "69"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6781,
											"end": 6783,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6766,
											"end": 6784,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6766,
											"end": 6784,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6759,
											"end": 6808,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6840,
											"end": 6842,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 6825,
											"end": 6843,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6825,
											"end": 6843,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6680,
											"end": 6849,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8018,
											"end": 8500,
											"name": "tag",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 8018,
											"end": 8500,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8220,
											"end": 8222,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8202,
											"end": 8223,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8202,
											"end": 8223,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8202,
											"end": 8223,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8259,
											"end": 8261,
											"name": "PUSH",
											"source": 6,
											"value": "4E"
										},
										{
											"begin": 8239,
											"end": 8257,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8239,
											"end": 8257,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8239,
											"end": 8257,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8232,
											"end": 8262,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8298,
											"end": 8332,
											"name": "PUSH",
											"source": 6,
											"value": "796F75206D7573742073657420686F6C6465727320616E642065636F73797374"
										},
										{
											"begin": 8293,
											"end": 8295,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8278,
											"end": 8296,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8278,
											"end": 8296,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8271,
											"end": 8333,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8369,
											"end": 8403,
											"name": "PUSH",
											"source": 6,
											"value": "6D654164647265737320616464726573736573206265666F726520616464696E"
										},
										{
											"begin": 8364,
											"end": 8366,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 8349,
											"end": 8367,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8367,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8342,
											"end": 8404,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "67206576656E74206F776E657273"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8435,
											"end": 8438,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 8420,
											"end": 8439,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8420,
											"end": 8439,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8413,
											"end": 8458,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8490,
											"end": 8493,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 8475,
											"end": 8494,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8475,
											"end": 8494,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8192,
											"end": 8500,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8687,
											"end": 8815,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 8687,
											"end": 8815,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8727,
											"end": 8730,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8758,
											"end": 8759,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8754,
											"end": 8760,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 8751,
											"end": 8752,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8748,
											"end": 8761,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8745,
											"end": 8747,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8745,
											"end": 8747,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "413"
										},
										{
											"begin": 8745,
											"end": 8747,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8764,
											"end": 8782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "413"
										},
										{
											"begin": 8764,
											"end": 8782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "414"
										},
										{
											"begin": 8764,
											"end": 8782,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8764,
											"end": 8782,
											"name": "tag",
											"source": 6,
											"value": "413"
										},
										{
											"begin": 8764,
											"end": 8782,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8800,
											"end": 8809,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8800,
											"end": 8809,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8735,
											"end": 8815,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8820,
											"end": 9037,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 8820,
											"end": 9037,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8860,
											"end": 8861,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8886,
											"end": 8887,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8876,
											"end": 8878,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "416"
										},
										{
											"begin": 8876,
											"end": 8878,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8911,
											"end": 8942,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8911,
											"end": 8942,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8965,
											"end": 8969,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 8962,
											"end": 8963,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8955,
											"end": 8970,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8993,
											"end": 8997,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8918,
											"end": 8919,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8983,
											"end": 8998,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8876,
											"end": 8878,
											"name": "tag",
											"source": 6,
											"value": "416"
										},
										{
											"begin": 8876,
											"end": 8878,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9022,
											"end": 9031,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 9022,
											"end": 9031,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8866,
											"end": 9037,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9042,
											"end": 9210,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 9042,
											"end": 9210,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9082,
											"end": 9089,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9148,
											"end": 9149,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9144,
											"end": 9145,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9140,
											"end": 9146,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 9136,
											"end": 9150,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 9133,
											"end": 9134,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9130,
											"end": 9151,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9125,
											"end": 9126,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9118,
											"end": 9127,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9111,
											"end": 9128,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9107,
											"end": 9152,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9104,
											"end": 9106,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9104,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "419"
										},
										{
											"begin": 9104,
											"end": 9106,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9155,
											"end": 9173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "419"
										},
										{
											"begin": 9155,
											"end": 9173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "414"
										},
										{
											"begin": 9155,
											"end": 9173,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9155,
											"end": 9173,
											"name": "tag",
											"source": 6,
											"value": "419"
										},
										{
											"begin": 9155,
											"end": 9173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9195,
											"end": 9204,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9195,
											"end": 9204,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9094,
											"end": 9210,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9215,
											"end": 9473,
											"name": "tag",
											"source": 6,
											"value": "389"
										},
										{
											"begin": 9215,
											"end": 9473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9287,
											"end": 9288,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9297,
											"end": 9410,
											"name": "tag",
											"source": 6,
											"value": "421"
										},
										{
											"begin": 9297,
											"end": 9410,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9311,
											"end": 9317,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9309,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9305,
											"end": 9318,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9297,
											"end": 9410,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9297,
											"end": 9410,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 9297,
											"end": 9410,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9387,
											"end": 9398,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9387,
											"end": 9398,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9387,
											"end": 9398,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9381,
											"end": 9399,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9379,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9379,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9379,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9361,
											"end": 9400,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9333,
											"end": 9335,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9326,
											"end": 9336,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9297,
											"end": 9410,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "421"
										},
										{
											"begin": 9297,
											"end": 9410,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9297,
											"end": 9410,
											"name": "tag",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 9297,
											"end": 9410,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9428,
											"end": 9434,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9425,
											"end": 9426,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9422,
											"end": 9435,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9419,
											"end": 9421,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9419,
											"end": 9421,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "424"
										},
										{
											"begin": 9419,
											"end": 9421,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9463,
											"end": 9464,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9454,
											"end": 9460,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9449,
											"end": 9452,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9445,
											"end": 9461,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9438,
											"end": 9465,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9419,
											"end": 9421,
											"name": "tag",
											"source": 6,
											"value": "424"
										},
										{
											"begin": 9419,
											"end": 9421,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9419,
											"end": 9421,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9268,
											"end": 9473,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9268,
											"end": 9473,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9268,
											"end": 9473,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9268,
											"end": 9473,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9478,
											"end": 9613,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 9478,
											"end": 9613,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9517,
											"end": 9520,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9538,
											"end": 9555,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9538,
											"end": 9555,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 9535,
											"end": 9537,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9535,
											"end": 9537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "427"
										},
										{
											"begin": 9535,
											"end": 9537,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9558,
											"end": 9576,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "427"
										},
										{
											"begin": 9558,
											"end": 9576,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "414"
										},
										{
											"begin": 9558,
											"end": 9576,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9558,
											"end": 9576,
											"name": "tag",
											"source": 6,
											"value": "427"
										},
										{
											"begin": 9558,
											"end": 9576,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9605,
											"end": 9606,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9594,
											"end": 9607,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9594,
											"end": 9607,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9525,
											"end": 9613,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9618,
											"end": 9745,
											"name": "tag",
											"source": 6,
											"value": "414"
										},
										{
											"begin": 9618,
											"end": 9745,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9679,
											"end": 9689,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 9674,
											"end": 9677,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 9670,
											"end": 9690,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 9667,
											"end": 9668,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9660,
											"end": 9691,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9710,
											"end": 9714,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 9707,
											"end": 9708,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9700,
											"end": 9715,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9734,
											"end": 9738,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 9731,
											"end": 9732,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9724,
											"end": 9739,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addBlacked(address)": "9b460aa9",
							"addEventAdmin(address)": "e3c0ed78",
							"addSystemAdmin(address)": "ed9f7eb9",
							"admins(address)": "429b62e5",
							"betFactory()": "2e1a9618",
							"blackList(uint256)": "709ec8b4",
							"blacked(address)": "80036b34",
							"contractOwner()": "ce606ee0",
							"deleteEventAdmin(address)": "f2210b2c",
							"deleteSystemAdmin(address)": "d5494869",
							"ecosystemAddress()": "06a5cb3a",
							"ecosystemVig()": "9376b94c",
							"eventAdmins(uint256)": "d37e87fd",
							"eventFactory()": "6fdbd3f6",
							"eventOwners(address)": "85d8349b",
							"holdersAddress()": "0da4ee50",
							"holdersVig()": "486d1e50",
							"isBlack(address)": "332daccf",
							"isEventAdmin(address)": "cb146622",
							"isSystemAdmin(address)": "4fb43199",
							"marketFactory()": "06ae7095",
							"removeBlacked(address)": "681ada8c",
							"setBetFactory(address)": "89fefbe1",
							"setEcosystemAddress(address)": "a8e01b28",
							"setEventFactory(address)": "d43cbb15",
							"setHoldersAddress(address)": "327372e4",
							"setMarketFactory(address)": "4dcc434a",
							"setStableCoin(address)": "23af4e17",
							"setVigPercentage(uint256)": "d6c1ca26",
							"setVigPercentageShares(uint256,uint256)": "64886880",
							"shareBetEarnings(uint256)": "cbf89c63",
							"stableCoin()": "992642e5",
							"systemAdmins(uint256)": "026c1a4d",
							"vigPercentage()": "387440e6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"addBlacked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"addEventAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"addSystemAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"admins\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"betFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"blackList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"blacked\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_eventOwner\",\"type\":\"address\"}],\"name\":\"deleteEventAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_systemAdmin\",\"type\":\"address\"}],\"name\":\"deleteSystemAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ecosystemAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ecosystemVig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"eventAdmins\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eventFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"eventOwners\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"holdersAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"holdersVig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isBlack\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isEventAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isSystemAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_eventOwner\",\"type\":\"address\"}],\"name\":\"removeBlacked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"setBetFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"setEcosystemAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"setEventFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"setHoldersAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"setMarketFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"setStableCoin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_percentage\",\"type\":\"uint256\"}],\"name\":\"setVigPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"hVig\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"eVig\",\"type\":\"uint256\"}],\"name\":\"setVigPercentageShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_vigAmount\",\"type\":\"uint256\"}],\"name\":\"shareBetEarnings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stableCoin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"systemAdmins\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vigPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Victor Okoro\",\"custom:security\":\"contact okoro.victor@web3bets.io\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Web3Bets Contract for FixedOdds decentralized betting exchange\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains Web3Bets ecosystem's variables and functions\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Web3BetsFO.sol\":\"Web3BetsFO\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"contracts/Web3BetsFO.sol\":{\"keccak256\":\"0xe62b475bf33fabb8deb16ef3a6e5fbf9a9f8009433ae3ef2a7df7782d676e13b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://381f88710a822f1d85394bebb963fc4e6de25a6f74d4c6c3c6423d7561daaf7b\",\"dweb:/ipfs/QmTpy749yLqVMgi8SqhtgWG7CkqysKqb6o7Wf6iJKTbdch\"]},\"contracts/interface/IWeb3BetsFO.sol\":{\"keccak256\":\"0xf26009d5800c2fda64d98cca410bc883a836cb93c8ee7d87664b52c351867a18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c1b4421f6f8cc84b8e39973de31c49c0f0b96a676c1287f1006958bb434651e\",\"dweb:/ipfs/QmU812vmW5wPKN9R55okmru3gc5bSQ4Gh8EDUfuJR3Hkg4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 703,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "contractOwner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 706,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "ecosystemAddress",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 709,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "holdersAddress",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 712,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "stableCoin",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 715,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "eventFactory",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 718,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "marketFactory",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 721,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "betFactory",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 725,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "holdersVig",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 729,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "ecosystemVig",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 733,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "vigPercentage",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 736,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "systemAdmins",
								"offset": 0,
								"slot": "10",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 739,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "eventAdmins",
								"offset": 0,
								"slot": "11",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 742,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "blackList",
								"offset": 0,
								"slot": "12",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 746,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "admins",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 750,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "eventOwners",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 754,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "blacked",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 760,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "_stableCoinWrapper",
								"offset": 0,
								"slot": "16",
								"type": "t_contract(IERC20)77"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contains Web3Bets ecosystem's variables and functions",
						"version": 1
					}
				}
			},
			"contracts/interface/IWeb3BetsFO.sol": {
				"IWeb3BetsFO": {
					"abi": [
						{
							"inputs": [],
							"name": "betFactory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ecosystemAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ecosystemVig",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "eventFactory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "holdersAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "holdersVig",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "isBlack",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "isEventAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "isSystemAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "marketFactory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_vigAmount",
									"type": "uint256"
								}
							],
							"name": "shareBetEarnings",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stableCoin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vigPercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"betFactory()": "2e1a9618",
							"ecosystemAddress()": "06a5cb3a",
							"ecosystemVig()": "9376b94c",
							"eventFactory()": "6fdbd3f6",
							"holdersAddress()": "0da4ee50",
							"holdersVig()": "486d1e50",
							"isBlack(address)": "332daccf",
							"isEventAdmin(address)": "cb146622",
							"isSystemAdmin(address)": "4fb43199",
							"marketFactory()": "06ae7095",
							"shareBetEarnings(uint256)": "cbf89c63",
							"stableCoin()": "992642e5",
							"vigPercentage()": "387440e6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"betFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ecosystemAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ecosystemVig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eventFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"holdersAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"holdersVig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isBlack\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isEventAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isSystemAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_vigAmount\",\"type\":\"uint256\"}],\"name\":\"shareBetEarnings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stableCoin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vigPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IWeb3BetsFO.sol\":\"IWeb3BetsFO\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interface/IWeb3BetsFO.sol\":{\"keccak256\":\"0xf26009d5800c2fda64d98cca410bc883a836cb93c8ee7d87664b52c351867a18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c1b4421f6f8cc84b8e39973de31c49c0f0b96a676c1287f1006958bb434651e\",\"dweb:/ipfs/QmU812vmW5wPKN9R55okmru3gc5bSQ4Gh8EDUfuJR3Hkg4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5740",
				"formattedMessage": "Warning: Unreachable code.\n   --> contracts/Web3BetsFO.sol:211:21:\n    |\n211 |                     break;\n    |                     ^^^^^\n\n",
				"message": "Unreachable code.",
				"severity": "warning",
				"sourceLocation": {
					"end": 6589,
					"file": "contracts/Web3BetsFO.sol",
					"start": 6584
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							113
						]
					},
					"id": 114,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "114:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "139:480:1",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 113,
							"linearizedBaseContracts": [
								113
							],
							"name": "IERC20Permit",
							"nameLocation": "630:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "649:792:1",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 98,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1455:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1479:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1471:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1502:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1494:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1494:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1527:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1519:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1550:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1542:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1574:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1568:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 90,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1568:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1593:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1585:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 92,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1585:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1612:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1604:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 94,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1604:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1461:158:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1628:0:1"
									},
									"scope": 113,
									"src": "1446:183:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "1635:294:1",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "1943:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1958:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "1950:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1950:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1949:15:1"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "1988:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1988:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1987:9:1"
									},
									"scope": 113,
									"src": "1934:63:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "2003:128:1",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2198:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2214:2:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "2240:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 109,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2240:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2239:9:1"
									},
									"scope": 113,
									"src": "2189:60:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 114,
							"src": "620:1631:1",
							"usedErrors": []
						}
					],
					"src": "114:2138:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							689
						],
						"IERC20": [
							77
						],
						"IERC20Permit": [
							113
						],
						"SafeERC20": [
							394
						]
					},
					"id": 395,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 115,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 116,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 395,
							"sourceUnit": 78,
							"src": "140:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
							"file": "../extensions/draft-IERC20Permit.sol",
							"id": 117,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 395,
							"sourceUnit": 114,
							"src": "164:46:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 118,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 395,
							"sourceUnit": 690,
							"src": "211:36:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 119,
								"nodeType": "StructuredDocumentation",
								"src": "249:457:2",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 394,
							"linearizedBaseContracts": [
								394
							],
							"name": "SafeERC20",
							"nameLocation": "715:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 122,
									"libraryName": {
										"id": 120,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 689,
										"src": "737:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "731:26:2",
									"typeName": {
										"id": 121,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "749:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 144,
										"nodeType": "Block",
										"src": "865:103:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 133,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "895:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 136,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 125,
																			"src": "925:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 44,
																		"src": "925:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "925:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 139,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 127,
																	"src": "950:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 140,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 129,
																	"src": "954:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 134,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "902:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 135,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "902:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "902:58:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 132,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "875:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "875:86:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "875:86:2"
											}
										]
									},
									"id": 145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "772:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "801:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "794:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 124,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 123,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "794:6:2"
													},
													"referencedDeclaration": 77,
													"src": "794:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "824:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "816:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "844:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "836:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "784:71:2"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "865:0:2"
									},
									"scope": 394,
									"src": "763:205:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 170,
										"nodeType": "Block",
										"src": "1102:113:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 158,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "1132:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 161,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 148,
																			"src": "1162:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 76,
																		"src": "1162:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1162:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 164,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "1191:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 165,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 152,
																	"src": "1197:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 166,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 154,
																	"src": "1201:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 159,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1139:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 160,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1139:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1139:68:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 157,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "1112:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1112:96:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 169,
												"nodeType": "ExpressionStatement",
												"src": "1112:96:2"
											}
										]
									},
									"id": 171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "983:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1016:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "1009:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 147,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 146,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1009:6:2"
													},
													"referencedDeclaration": 77,
													"src": "1009:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1039:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "1031:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1061:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "1053:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1081:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "1073:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "999:93:2"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1102:0:2"
									},
									"scope": 394,
									"src": "974:241:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "1581:497:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 183,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 179,
																			"src": "1830:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 184,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1839:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1830:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 186,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1829:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 191,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1870:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$394",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$394",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 190,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1862:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 189,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1862:7:2",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 192,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1862:13:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 193,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 177,
																					"src": "1877:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 187,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 175,
																					"src": "1846:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 188,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 54,
																				"src": "1846:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 194,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1846:39:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 195,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1889:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1846:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 197,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1845:46:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1829:62:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1905:56:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 182,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1808:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1808:163:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 201,
												"nodeType": "ExpressionStatement",
												"src": "1808:163:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 203,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "2001:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 206,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 175,
																			"src": "2031:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 64,
																		"src": "2031:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2031:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 209,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 177,
																	"src": "2055:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 210,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 179,
																	"src": "2064:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 204,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2008:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2008:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2008:62:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 202,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "1981:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1981:90:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 213,
												"nodeType": "ExpressionStatement",
												"src": "1981:90:2"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1221:249:2",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1484:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1512:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1505:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 174,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 173,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1505:6:2"
													},
													"referencedDeclaration": 77,
													"src": "1505:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1535:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1527:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1527:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1560:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1552:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1552:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:76:2"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1581:0:2"
									},
									"scope": 394,
									"src": "1475:603:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "2200:194:2",
										"statements": [
											{
												"assignments": [
													226
												],
												"declarations": [
													{
														"constant": false,
														"id": 226,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2218:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 250,
														"src": "2210:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 225,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2210:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 237,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 231,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2257:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$394",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$394",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2249:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 229,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2249:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2249:13:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 233,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "2264:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 227,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 218,
																"src": "2233:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 54,
															"src": "2233:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2233:39:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 235,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "2275:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2233:47:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2210:70:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 239,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "2310:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 242,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 218,
																			"src": "2340:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 64,
																		"src": "2340:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2340:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 245,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 220,
																	"src": "2364:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 246,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 226,
																	"src": "2373:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 240,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2317:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 241,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2317:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2317:69:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 238,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "2290:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2290:97:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 249,
												"nodeType": "ExpressionStatement",
												"src": "2290:97:2"
											}
										]
									},
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2093:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2131:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2124:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 217,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 216,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2124:6:2"
													},
													"referencedDeclaration": 77,
													"src": "2124:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2154:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2146:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2146:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2179:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2171:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2114:76:2"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2200:0:2"
									},
									"scope": 394,
									"src": "2084:310:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 298,
										"nodeType": "Block",
										"src": "2516:370:2",
										"statements": [
											{
												"id": 297,
												"nodeType": "UncheckedBlock",
												"src": "2526:354:2",
												"statements": [
													{
														"assignments": [
															262
														],
														"declarations": [
															{
																"constant": false,
																"id": 262,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2558:12:2",
																"nodeType": "VariableDeclaration",
																"scope": 297,
																"src": "2550:20:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 261,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2550:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 271,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 267,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2597:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$394",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$394",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2589:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 265,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2589:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2589:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 269,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 256,
																	"src": "2604:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 263,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "2573:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 54,
																"src": "2573:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2573:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2550:62:2"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "2634:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 274,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 258,
																		"src": "2650:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2634:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2657:43:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2626:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2626:75:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "2626:75:2"
													},
													{
														"assignments": [
															280
														],
														"declarations": [
															{
																"constant": false,
																"id": 280,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2723:12:2",
																"nodeType": "VariableDeclaration",
																"scope": 297,
																"src": "2715:20:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 279,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2715:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 284,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 281,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 262,
																"src": "2738:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 282,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 258,
																"src": "2753:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2738:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2715:43:2"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 286,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "2792:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 289,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 254,
																					"src": "2822:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 290,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 64,
																				"src": "2822:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 291,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2822:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 292,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 256,
																			"src": "2846:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 293,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 280,
																			"src": "2855:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 287,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2799:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2799:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:69:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 285,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 393,
																"src": "2772:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2772:97:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 296,
														"nodeType": "ExpressionStatement",
														"src": "2772:97:2"
													}
												]
											}
										]
									},
									"id": 299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2409:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2447:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "2440:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 253,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 252,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2440:6:2"
													},
													"referencedDeclaration": 77,
													"src": "2440:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2470:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "2462:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2462:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2495:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "2487:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:76:2"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2516:0:2"
									},
									"scope": 394,
									"src": "2400:486:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "3107:257:2",
										"statements": [
											{
												"assignments": [
													320
												],
												"declarations": [
													{
														"constant": false,
														"id": 320,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "3125:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 354,
														"src": "3117:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 319,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3117:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 325,
												"initialValue": {
													"arguments": [
														{
															"id": 323,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "3152:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 321,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "3139:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$113",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 322,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 106,
														"src": "3139:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3139:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3117:41:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 329,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "3181:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 330,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "3188:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 331,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "3197:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 332,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "3204:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 333,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "3214:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 334,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "3217:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 335,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "3220:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 326,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "3168:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$113",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 328,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 98,
														"src": "3168:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3168:54:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 337,
												"nodeType": "ExpressionStatement",
												"src": "3168:54:2"
											},
											{
												"assignments": [
													339
												],
												"declarations": [
													{
														"constant": false,
														"id": 339,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "3240:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 354,
														"src": "3232:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 338,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3232:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 344,
												"initialValue": {
													"arguments": [
														{
															"id": 342,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "3266:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 340,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "3253:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$113",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 106,
														"src": "3253:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3253:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3232:40:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 346,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 339,
																"src": "3290:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 349,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 347,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 320,
																	"src": "3304:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3318:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3304:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3290:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3321:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 345,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3282:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3282:75:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 353,
												"nodeType": "ExpressionStatement",
												"src": "3282:75:2"
											}
										]
									},
									"id": 355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "2901:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2934:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "2921:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$113",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 301,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 300,
														"name": "IERC20Permit",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 113,
														"src": "2921:12:2"
													},
													"referencedDeclaration": 113,
													"src": "2921:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$113",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2957:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "2949:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2949:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2980:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "2972:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2972:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3005:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "2997:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3028:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3020:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3020:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3052:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3046:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 311,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3046:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3071:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3063:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 313,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3090:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3082:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 315,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3082:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2911:186:2"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3107:0:2"
									},
									"scope": 394,
									"src": "2892:472:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 392,
										"nodeType": "Block",
										"src": "3817:636:2",
										"statements": [
											{
												"assignments": [
													365
												],
												"declarations": [
													{
														"constant": false,
														"id": 365,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4179:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 392,
														"src": "4166:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 364,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4166:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 374,
												"initialValue": {
													"arguments": [
														{
															"id": 371,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "4220:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4226:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 368,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 359,
																	"src": "4200:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 367,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4192:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 366,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4192:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4192:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 483,
														"src": "4192:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4192:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4166:95:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 375,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "4275:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4275:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4295:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4275:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 391,
												"nodeType": "IfStatement",
												"src": "4271:176:2",
												"trueBody": {
													"id": 390,
													"nodeType": "Block",
													"src": "4298:149:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 382,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 365,
																				"src": "4370:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 384,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4383:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 383,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "4383:4:2",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 385,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4382:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 380,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4359:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 381,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "4359:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4359:30:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4391:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 379,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4351:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4351:85:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 389,
															"nodeType": "ExpressionStatement",
															"src": "4351:85:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "3370:372:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3756:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3783:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "3776:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 358,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 357,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "3776:6:2"
													},
													"referencedDeclaration": 77,
													"src": "3776:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3803:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "3790:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 360,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3790:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:33:2"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3817:0:2"
									},
									"scope": 394,
									"src": "3747:706:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 395,
							"src": "707:3748:2",
							"usedErrors": []
						}
					],
					"src": "115:4341:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							689
						]
					},
					"id": 690,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 396,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 397,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 689,
							"linearizedBaseContracts": [
								689
							],
							"name": "Address",
							"nameLocation": "202:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "1241:254:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 405,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "1465:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 407,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 408,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 404,
												"id": 410,
												"nodeType": "Return",
												"src": "1458:30:3"
											}
										]
									},
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:3",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "1195:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:3"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "1235:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 402,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:3"
									},
									"scope": 689,
									"src": "1175:320:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "2483:241:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 423,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$689",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$689",
																				"typeString": "library Address"
																			}
																		],
																		"id": 422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 421,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 426,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "2526:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 420,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 430,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:3"
											},
											{
												"assignments": [
													432,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 432,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 445,
														"src": "2578:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 431,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 439,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 433,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "2596:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 436,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 435,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "2618:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 441,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "2647:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 440,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:3"
											}
										]
									},
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "2431:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "2458:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:3"
									},
									"returnParameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:3"
									},
									"scope": 689,
									"src": "2412:312:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 462,
										"nodeType": "Block",
										"src": "3555:84:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 457,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "3585:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 458,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "3593:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 459,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 456,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															463,
															483
														],
														"referencedDeclaration": 483,
														"src": "3572:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 455,
												"id": 461,
												"nodeType": "Return",
												"src": "3565:67:3"
											}
										]
									},
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "3488:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "3504:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 450,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:3"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "3541:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 453,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:3"
									},
									"scope": 689,
									"src": "3466:173:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 482,
										"nodeType": "Block",
										"src": "4008:76:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 476,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "4047:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 477,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "4055:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 479,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "4064:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 475,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															503,
															553
														],
														"referencedDeclaration": 553,
														"src": "4025:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 474,
												"id": 481,
												"nodeType": "Return",
												"src": "4018:59:3"
											}
										]
									},
									"documentation": {
										"id": 464,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "3892:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "3916:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 467,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "3943:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 469,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:3"
									},
									"returnParameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "3994:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 472,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:3"
									},
									"scope": 689,
									"src": "3861:223:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 502,
										"nodeType": "Block",
										"src": "4589:111:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 496,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "4628:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "4636:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 498,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "4642:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 495,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															503,
															553
														],
														"referencedDeclaration": 553,
														"src": "4606:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 494,
												"id": 501,
												"nodeType": "Return",
												"src": "4599:94:3"
											}
										]
									},
									"documentation": {
										"id": 484,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "4486:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "4510:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 487,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "4537:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:3"
									},
									"returnParameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "4575:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 492,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:3"
									},
									"scope": 689,
									"src": "4446:254:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 552,
										"nodeType": "Block",
										"src": "5127:320:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 520,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$689",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$689",
																				"typeString": "library Address"
																			}
																		],
																		"id": 519,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 518,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 523,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 510,
																"src": "5170:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 517,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 530,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 506,
																	"src": "5247:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 529,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "5236:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 528,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 534,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:3"
											},
											{
												"assignments": [
													536,
													538
												],
												"declarations": [
													{
														"constant": false,
														"id": 536,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 552,
														"src": "5300:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 535,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 538,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 552,
														"src": "5314:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 537,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 545,
												"initialValue": {
													"arguments": [
														{
															"id": 543,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "5367:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 539,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 506,
																"src": "5341:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 542,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 541,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 510,
																"src": "5360:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 547,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "5406:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 548,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 538,
															"src": "5415:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 549,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "5427:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 546,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "5389:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 516,
												"id": 551,
												"nodeType": "Return",
												"src": "5382:58:3"
											}
										]
									},
									"documentation": {
										"id": 504,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:3",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "4988:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5012:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 507,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5039:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5062:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 511,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:3"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5113:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 514,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:3"
									},
									"scope": 689,
									"src": "4948:499:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "5724:97:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 564,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "5760:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 565,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "5768:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 563,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															570,
															605
														],
														"referencedDeclaration": 605,
														"src": "5741:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 562,
												"id": 568,
												"nodeType": "Return",
												"src": "5734:80:3"
											}
										]
									},
									"documentation": {
										"id": 554,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "5652:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "5668:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 557,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:3"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "5710:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 560,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:3"
									},
									"scope": 689,
									"src": "5624:197:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 604,
										"nodeType": "Block",
										"src": "6163:228:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 584,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 573,
																	"src": "6192:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 583,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "6181:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 582,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 588,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:3"
											},
											{
												"assignments": [
													590,
													592
												],
												"declarations": [
													{
														"constant": false,
														"id": 590,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 604,
														"src": "6252:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 589,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 592,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 604,
														"src": "6266:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 591,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 597,
												"initialValue": {
													"arguments": [
														{
															"id": 595,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "6311:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 593,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "6293:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 599,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 590,
															"src": "6350:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 600,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "6359:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 601,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "6371:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 598,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "6333:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 581,
												"id": 603,
												"nodeType": "Return",
												"src": "6326:58:3"
											}
										]
									},
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "6042:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "6066:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 574,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "6093:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 576,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:3"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "6149:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 579,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:3"
									},
									"scope": 689,
									"src": "6005:386:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 621,
										"nodeType": "Block",
										"src": "6667:101:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 616,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "6705:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 617,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "6713:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 615,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															622,
															657
														],
														"referencedDeclaration": 657,
														"src": "6684:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 614,
												"id": 620,
												"nodeType": "Return",
												"src": "6677:84:3"
											}
										]
									},
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "6600:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "6616:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 609,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:3"
									},
									"returnParameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "6653:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 612,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:3"
									},
									"scope": 689,
									"src": "6570:198:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "7109:232:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 636,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 625,
																	"src": "7138:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 635,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "7127:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 634,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 640,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:3"
											},
											{
												"assignments": [
													642,
													644
												],
												"declarations": [
													{
														"constant": false,
														"id": 642,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 656,
														"src": "7200:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 641,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 644,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 656,
														"src": "7214:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 643,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 649,
												"initialValue": {
													"arguments": [
														{
															"id": 647,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "7261:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 645,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "7241:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 646,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 651,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "7300:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 652,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "7309:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 653,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "7321:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 650,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "7283:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 633,
												"id": 655,
												"nodeType": "Return",
												"src": "7276:58:3"
											}
										]
									},
									"documentation": {
										"id": 623,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "6993:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "7017:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 626,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "7044:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 628,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:3"
									},
									"returnParameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "7095:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 631,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:3"
									},
									"scope": 689,
									"src": "6954:387:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 687,
										"nodeType": "Block",
										"src": "7721:582:3",
										"statements": [
											{
												"condition": {
													"id": 669,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 660,
													"src": "7735:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 685,
													"nodeType": "Block",
													"src": "7792:505:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 673,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 662,
																		"src": "7876:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 683,
																"nodeType": "Block",
																"src": "8234:53:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 680,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 664,
																					"src": "8259:12:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 679,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8252:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 681,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8252:20:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 682,
																		"nodeType": "ExpressionStatement",
																		"src": "8252:20:3"
																	}
																]
															},
															"id": 684,
															"nodeType": "IfStatement",
															"src": "7872:415:3",
															"trueBody": {
																"id": 678,
																"nodeType": "Block",
																"src": "7899:329:3",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8069:145:3",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8091:40:3",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8120:10:3"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8114:5:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8114:17:3"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8095:15:3",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8163:2:3",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8167:10:3"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8159:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8159:19:3"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8180:15:3"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8152:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8152:44:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8152:44:3"
																				}
																			]
																		},
																		"documentation": "@solidity memory-safe-assembly",
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 662,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8120:10:3",
																				"valueSize": 1
																			},
																			{
																				"declaration": 662,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8167:10:3",
																				"valueSize": 1
																			}
																		],
																		"id": 677,
																		"nodeType": "InlineAssembly",
																		"src": "8060:154:3"
																	}
																]
															}
														}
													]
												},
												"id": 686,
												"nodeType": "IfStatement",
												"src": "7731:566:3",
												"trueBody": {
													"id": 672,
													"nodeType": "Block",
													"src": "7744:42:3",
													"statements": [
														{
															"expression": {
																"id": 670,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 662,
																"src": "7765:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 668,
															"id": 671,
															"nodeType": "Return",
															"src": "7758:17:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 658,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:3",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 688,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "7596:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 659,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "7618:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 661,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "7651:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 663,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:3"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "7707:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 666,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:3"
									},
									"scope": 689,
									"src": "7561:742:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 690,
							"src": "194:8111:3",
							"usedErrors": []
						}
					],
					"src": "101:8205:3"
				},
				"id": 3
			},
			"contracts/Web3BetsFO.sol": {
				"ast": {
					"absolutePath": "contracts/Web3BetsFO.sol",
					"exportedSymbols": {
						"Address": [
							689
						],
						"IERC20": [
							77
						],
						"IERC20Permit": [
							113
						],
						"IWeb3BetsFO": [
							1429
						],
						"SafeERC20": [
							394
						],
						"Web3BetsFO": [
							1355
						]
					},
					"id": 1356,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 691,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"absolutePath": "contracts/interface/IWeb3BetsFO.sol",
							"file": "./interface/IWeb3BetsFO.sol",
							"id": 692,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1356,
							"sourceUnit": 1430,
							"src": "58:37:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 693,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1356,
							"sourceUnit": 78,
							"src": "96:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 694,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1356,
							"sourceUnit": 395,
							"src": "153:65:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 696,
										"name": "IWeb3BetsFO",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1429,
										"src": "571:11:4"
									},
									"id": 697,
									"nodeType": "InheritanceSpecifier",
									"src": "571:11:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 695,
								"nodeType": "StructuredDocumentation",
								"src": "220:219:4",
								"text": "@author Victor Okoro\n @title Web3Bets Contract for FixedOdds decentralized betting exchange\n @notice Contains Web3Bets ecosystem's variables and functions\n @custom:security contact okoro.victor@web3bets.io"
							},
							"fullyImplemented": true,
							"id": 1355,
							"linearizedBaseContracts": [
								1355,
								1429
							],
							"name": "Web3BetsFO",
							"nameLocation": "557:10:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 701,
									"libraryName": {
										"id": 698,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 394,
										"src": "595:9:4"
									},
									"nodeType": "UsingForDirective",
									"src": "589:27:4",
									"typeName": {
										"id": 700,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 699,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "609:6:4"
										},
										"referencedDeclaration": 77,
										"src": "609:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "ce606ee0",
									"id": 703,
									"mutability": "mutable",
									"name": "contractOwner",
									"nameLocation": "637:13:4",
									"nodeType": "VariableDeclaration",
									"scope": 1355,
									"src": "622:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 702,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "622:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1362
									],
									"constant": false,
									"functionSelector": "06a5cb3a",
									"id": 706,
									"mutability": "mutable",
									"name": "ecosystemAddress",
									"nameLocation": "685:16:4",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 705,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "676:8:4"
									},
									"scope": 1355,
									"src": "661:40:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 704,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "661:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1367
									],
									"constant": false,
									"functionSelector": "0da4ee50",
									"id": 709,
									"mutability": "mutable",
									"name": "holdersAddress",
									"nameLocation": "731:14:4",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 708,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "722:8:4"
									},
									"scope": 1355,
									"src": "707:38:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 707,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "707:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1372
									],
									"constant": false,
									"functionSelector": "992642e5",
									"id": 712,
									"mutability": "mutable",
									"name": "stableCoin",
									"nameLocation": "775:10:4",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 711,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "766:8:4"
									},
									"scope": 1355,
									"src": "751:34:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 710,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "751:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1377
									],
									"constant": false,
									"functionSelector": "6fdbd3f6",
									"id": 715,
									"mutability": "mutable",
									"name": "eventFactory",
									"nameLocation": "816:12:4",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 714,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "807:8:4"
									},
									"scope": 1355,
									"src": "792:36:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 713,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "792:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1382
									],
									"constant": false,
									"functionSelector": "06ae7095",
									"id": 718,
									"mutability": "mutable",
									"name": "marketFactory",
									"nameLocation": "858:13:4",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 717,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "849:8:4"
									},
									"scope": 1355,
									"src": "834:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 716,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "834:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1387
									],
									"constant": false,
									"functionSelector": "2e1a9618",
									"id": 721,
									"mutability": "mutable",
									"name": "betFactory",
									"nameLocation": "901:10:4",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 720,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "892:8:4"
									},
									"scope": 1355,
									"src": "877:34:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 719,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "877:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1392
									],
									"constant": false,
									"functionSelector": "486d1e50",
									"id": 725,
									"mutability": "mutable",
									"name": "holdersVig",
									"nameLocation": "942:10:4",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 723,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "933:8:4"
									},
									"scope": 1355,
									"src": "918:39:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 722,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "918:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3530",
										"id": 724,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "955:2:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "50"
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1397
									],
									"constant": false,
									"functionSelector": "9376b94c",
									"id": 729,
									"mutability": "mutable",
									"name": "ecosystemVig",
									"nameLocation": "987:12:4",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 727,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "978:8:4"
									},
									"scope": 1355,
									"src": "963:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 726,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "963:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3530",
										"id": 728,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1002:2:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "50"
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1402
									],
									"constant": false,
									"functionSelector": "387440e6",
									"id": 733,
									"mutability": "mutable",
									"name": "vigPercentage",
									"nameLocation": "1034:13:4",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 731,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1025:8:4"
									},
									"scope": 1355,
									"src": "1010:42:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 730,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1010:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 732,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1050:2:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "026c1a4d",
									"id": 736,
									"mutability": "mutable",
									"name": "systemAdmins",
									"nameLocation": "1076:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 1355,
									"src": "1059:29:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 734,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 735,
										"nodeType": "ArrayTypeName",
										"src": "1059:9:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d37e87fd",
									"id": 739,
									"mutability": "mutable",
									"name": "eventAdmins",
									"nameLocation": "1111:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 1355,
									"src": "1094:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 737,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1094:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 738,
										"nodeType": "ArrayTypeName",
										"src": "1094:9:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "709ec8b4",
									"id": 742,
									"mutability": "mutable",
									"name": "blackList",
									"nameLocation": "1145:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1355,
									"src": "1128:26:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 740,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1128:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 741,
										"nodeType": "ArrayTypeName",
										"src": "1128:9:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "429b62e5",
									"id": 746,
									"mutability": "mutable",
									"name": "admins",
									"nameLocation": "1196:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 1355,
									"src": "1161:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 745,
										"keyType": {
											"id": 743,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1169:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1161:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueType": {
											"id": 744,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1180:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "85d8349b",
									"id": 750,
									"mutability": "mutable",
									"name": "eventOwners",
									"nameLocation": "1243:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 1355,
									"src": "1208:46:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 749,
										"keyType": {
											"id": 747,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1216:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1208:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueType": {
											"id": 748,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1227:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "80036b34",
									"id": 754,
									"mutability": "mutable",
									"name": "blacked",
									"nameLocation": "1295:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1355,
									"src": "1260:42:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 753,
										"keyType": {
											"id": 751,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1268:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1260:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueType": {
											"id": 752,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1279:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 760,
									"mutability": "mutable",
									"name": "_stableCoinWrapper",
									"nameLocation": "1324:18:4",
									"nodeType": "VariableDeclaration",
									"scope": 1355,
									"src": "1309:54:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 756,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 755,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "1309:6:4"
										},
										"referencedDeclaration": 77,
										"src": "1309:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 758,
												"name": "stableCoin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 712,
												"src": "1352:10:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 757,
											"name": "IERC20",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 77,
											"src": "1345:6:4",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
												"typeString": "type(contract IERC20)"
											}
										},
										"id": 759,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1345:18:4",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 771,
										"nodeType": "Block",
										"src": "1390:144:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 763,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1421:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 764,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1421:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 765,
																"name": "contractOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 703,
																"src": "1435:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1421:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752068617665206e6f2070726976696c65676520746f2072756e20746869732066756e6374696f6e",
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1462:44:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a32508753827975e20a3cb78ea7eb704498ada6e4989facfc2206514cbd8980",
																"typeString": "literal_string \"You have no privilege to run this function\""
															},
															"value": "You have no privilege to run this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a32508753827975e20a3cb78ea7eb704498ada6e4989facfc2206514cbd8980",
																"typeString": "literal_string \"You have no privilege to run this function\""
															}
														],
														"id": 762,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1400:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1400:116:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 769,
												"nodeType": "ExpressionStatement",
												"src": "1400:116:4"
											},
											{
												"id": 770,
												"nodeType": "PlaceholderStatement",
												"src": "1526:1:4"
											}
										]
									},
									"id": 772,
									"name": "onlyUser",
									"nameLocation": "1379:8:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1387:2:4"
									},
									"src": "1370:164:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "1564:142:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 776,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1609:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1609:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 775,
																"name": "isSystemAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1336,
																"src": "1595:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1595:25:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752068617665206e6f2070726976696c65676520746f2072756e20746869732066756e6374696f6e",
															"id": 779,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1634:44:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a32508753827975e20a3cb78ea7eb704498ada6e4989facfc2206514cbd8980",
																"typeString": "literal_string \"You have no privilege to run this function\""
															},
															"value": "You have no privilege to run this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a32508753827975e20a3cb78ea7eb704498ada6e4989facfc2206514cbd8980",
																"typeString": "literal_string \"You have no privilege to run this function\""
															}
														],
														"id": 774,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1574:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1574:114:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 781,
												"nodeType": "ExpressionStatement",
												"src": "1574:114:4"
											},
											{
												"id": 782,
												"nodeType": "PlaceholderStatement",
												"src": "1698:1:4"
											}
										]
									},
									"id": 784,
									"name": "onlySystemAdmin",
									"nameLocation": "1548:15:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1564:0:4"
									},
									"src": "1539:167:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 801,
										"nodeType": "Block",
										"src": "1753:90:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 789,
																	"name": "admins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 746,
																	"src": "1771:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																		"typeString": "mapping(address => address)"
																	}
																},
																"id": 791,
																"indexExpression": {
																	"id": 790,
																	"name": "_addr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 786,
																	"src": "1778:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1771:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 794,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1796:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1788:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 792,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1788:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1788:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1771:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616c726561647920612073797374656d2061646d696e",
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1800:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8eb64a2f8e2d063b4ba2137a06420c5ddac18fa973b5a68e7e93cc21be8e7511",
																"typeString": "literal_string \"already a system admin\""
															},
															"value": "already a system admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8eb64a2f8e2d063b4ba2137a06420c5ddac18fa973b5a68e7e93cc21be8e7511",
																"typeString": "literal_string \"already a system admin\""
															}
														],
														"id": 788,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1763:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1763:62:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 799,
												"nodeType": "ExpressionStatement",
												"src": "1763:62:4"
											},
											{
												"id": 800,
												"nodeType": "PlaceholderStatement",
												"src": "1835:1:4"
											}
										]
									},
									"id": 802,
									"name": "uniqueSystemAdmin",
									"nameLocation": "1720:17:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "1746:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "1738:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1738:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1737:15:4"
									},
									"src": "1711:132:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 819,
										"nodeType": "Block",
										"src": "1889:95:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 807,
																	"name": "eventOwners",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 750,
																	"src": "1907:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																		"typeString": "mapping(address => address)"
																	}
																},
																"id": 809,
																"indexExpression": {
																	"id": 808,
																	"name": "_addr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "1919:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1907:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 812,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1937:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1929:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 810,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1929:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1929:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1907:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616c726561647920616e206576656e742061646d696e",
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1941:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_69bfbcf965758bc5ddd17591a0451b2942bc0583d49424ab0acec67f0d5555cc",
																"typeString": "literal_string \"already an event admin\""
															},
															"value": "already an event admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_69bfbcf965758bc5ddd17591a0451b2942bc0583d49424ab0acec67f0d5555cc",
																"typeString": "literal_string \"already an event admin\""
															}
														],
														"id": 806,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1899:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1899:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "1899:67:4"
											},
											{
												"id": 818,
												"nodeType": "PlaceholderStatement",
												"src": "1976:1:4"
											}
										]
									},
									"id": 820,
									"name": "uniqueEventAdmin",
									"nameLocation": "1857:16:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "1882:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "1874:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1873:15:4"
									},
									"src": "1848:136:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 837,
										"nodeType": "Block",
										"src": "2025:89:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 825,
																	"name": "blacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 754,
																	"src": "2043:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																		"typeString": "mapping(address => address)"
																	}
																},
																"id": 827,
																"indexExpression": {
																	"id": 826,
																	"name": "_addr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 822,
																	"src": "2051:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2043:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2069:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 829,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2061:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 828,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2061:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2061:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2043:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616c726561647920696e20626c61636b6c697374",
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2073:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e0baece3d3231f6d1df745826117bd57a5bd6c7623789b8f7c141128ebba2355",
																"typeString": "literal_string \"already in blacklist\""
															},
															"value": "already in blacklist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e0baece3d3231f6d1df745826117bd57a5bd6c7623789b8f7c141128ebba2355",
																"typeString": "literal_string \"already in blacklist\""
															}
														],
														"id": 824,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2035:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2035:61:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 835,
												"nodeType": "ExpressionStatement",
												"src": "2035:61:4"
											},
											{
												"id": 836,
												"nodeType": "PlaceholderStatement",
												"src": "2106:1:4"
											}
										]
									},
									"id": 838,
									"name": "uniqueBlack",
									"nameLocation": "1998:11:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "2018:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "2010:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2010:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2009:15:4"
									},
									"src": "1989:125:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 846,
										"nodeType": "Block",
										"src": "2134:43:4",
										"statements": [
											{
												"expression": {
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 841,
														"name": "contractOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "2144:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 842,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2160:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2160:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2144:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 845,
												"nodeType": "ExpressionStatement",
												"src": "2144:26:4"
											}
										]
									},
									"id": 847,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2131:2:4"
									},
									"returnParameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2134:0:4"
									},
									"scope": 1355,
									"src": "2120:57:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 858,
										"nodeType": "Block",
										"src": "2255:40:4",
										"statements": [
											{
												"expression": {
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 854,
														"name": "holdersAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 709,
														"src": "2265:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 855,
														"name": "holder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 849,
														"src": "2282:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2265:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 857,
												"nodeType": "ExpressionStatement",
												"src": "2265:23:4"
											}
										]
									},
									"functionSelector": "327372e4",
									"id": 859,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 852,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 851,
												"name": "onlySystemAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 784,
												"src": "2239:15:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2239:15:4"
										}
									],
									"name": "setHoldersAddress",
									"nameLocation": "2196:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "holder",
												"nameLocation": "2222:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "2214:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2214:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2213:16:4"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2255:0:4"
									},
									"scope": 1355,
									"src": "2187:108:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 870,
										"nodeType": "Block",
										"src": "2371:42:4",
										"statements": [
											{
												"expression": {
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 866,
														"name": "ecosystemAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 706,
														"src": "2381:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 867,
														"name": "holder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 861,
														"src": "2400:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2381:25:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 869,
												"nodeType": "ExpressionStatement",
												"src": "2381:25:4"
											}
										]
									},
									"functionSelector": "a8e01b28",
									"id": 871,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 864,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 863,
												"name": "onlySystemAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 784,
												"src": "2355:15:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2355:15:4"
										}
									],
									"name": "setEcosystemAddress",
									"nameLocation": "2310:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "holder",
												"nameLocation": "2338:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "2330:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 860,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2329:16:4"
									},
									"returnParameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2371:0:4"
									},
									"scope": 1355,
									"src": "2301:112:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 882,
										"nodeType": "Block",
										"src": "2483:40:4",
										"statements": [
											{
												"expression": {
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 878,
														"name": "holdersAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 709,
														"src": "2493:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 879,
														"name": "holder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "2510:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2493:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 881,
												"nodeType": "ExpressionStatement",
												"src": "2493:23:4"
											}
										]
									},
									"functionSelector": "23af4e17",
									"id": 883,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 876,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 875,
												"name": "onlySystemAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 784,
												"src": "2467:15:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2467:15:4"
										}
									],
									"name": "setStableCoin",
									"nameLocation": "2428:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "holder",
												"nameLocation": "2450:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "2442:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2442:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2441:16:4"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:4"
									},
									"scope": 1355,
									"src": "2419:104:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "2597:40:4",
										"statements": [
											{
												"expression": {
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 890,
														"name": "eventFactory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 715,
														"src": "2607:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 891,
														"name": "_factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 885,
														"src": "2622:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2607:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 893,
												"nodeType": "ExpressionStatement",
												"src": "2607:23:4"
											}
										]
									},
									"functionSelector": "d43cbb15",
									"id": 895,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 888,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 887,
												"name": "onlySystemAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 784,
												"src": "2581:15:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2581:15:4"
										}
									],
									"name": "setEventFactory",
									"nameLocation": "2538:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "_factory",
												"nameLocation": "2562:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "2554:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 884,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2553:18:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2597:0:4"
									},
									"scope": 1355,
									"src": "2529:108:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 906,
										"nodeType": "Block",
										"src": "2712:41:4",
										"statements": [
											{
												"expression": {
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 902,
														"name": "marketFactory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "2722:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 903,
														"name": "_factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "2738:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2722:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 905,
												"nodeType": "ExpressionStatement",
												"src": "2722:24:4"
											}
										]
									},
									"functionSelector": "4dcc434a",
									"id": 907,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 900,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 899,
												"name": "onlySystemAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 784,
												"src": "2696:15:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2696:15:4"
										}
									],
									"name": "setMarketFactory",
									"nameLocation": "2652:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "_factory",
												"nameLocation": "2677:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "2669:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2669:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2668:18:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2712:0:4"
									},
									"scope": 1355,
									"src": "2643:110:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 918,
										"nodeType": "Block",
										"src": "2825:38:4",
										"statements": [
											{
												"expression": {
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 914,
														"name": "betFactory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 721,
														"src": "2835:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 915,
														"name": "_factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "2848:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2835:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 917,
												"nodeType": "ExpressionStatement",
												"src": "2835:21:4"
											}
										]
									},
									"functionSelector": "89fefbe1",
									"id": 919,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 912,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 911,
												"name": "onlySystemAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 784,
												"src": "2809:15:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2809:15:4"
										}
									],
									"name": "setBetFactory",
									"nameLocation": "2768:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "_factory",
												"nameLocation": "2790:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "2782:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2782:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2781:18:4"
									},
									"returnParameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2825:0:4"
									},
									"scope": 1355,
									"src": "2759:104:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 937,
										"nodeType": "Block",
										"src": "2941:183:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 927,
																"name": "_percentage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 921,
																"src": "2972:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "3130",
																"id": 928,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2986:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"src": "2972:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5669672070657263656e74616765206d7573742062652065787072657373656420696e203020746f2031302070657263656e746167652e204578616d706c653a2036",
															"id": 930,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3002:68:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_83c81a4385a848c15720cf694c5cbee8421a6aa41771576a7616bbfaf9243065",
																"typeString": "literal_string \"Vig percentage must be expressed in 0 to 10 percentage. Example: 6\""
															},
															"value": "Vig percentage must be expressed in 0 to 10 percentage. Example: 6"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_83c81a4385a848c15720cf694c5cbee8421a6aa41771576a7616bbfaf9243065",
																"typeString": "literal_string \"Vig percentage must be expressed in 0 to 10 percentage. Example: 6\""
															}
														],
														"id": 926,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2951:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2951:129:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 932,
												"nodeType": "ExpressionStatement",
												"src": "2951:129:4"
											},
											{
												"expression": {
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 933,
														"name": "vigPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "3090:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 934,
														"name": "_percentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "3106:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3090:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 936,
												"nodeType": "ExpressionStatement",
												"src": "3090:27:4"
											}
										]
									},
									"functionSelector": "d6c1ca26",
									"id": 938,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 924,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 923,
												"name": "onlySystemAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 784,
												"src": "2925:15:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2925:15:4"
										}
									],
									"name": "setVigPercentage",
									"nameLocation": "2878:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "_percentage",
												"nameLocation": "2903:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "2895:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2895:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2894:21:4"
									},
									"returnParameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2941:0:4"
									},
									"scope": 1355,
									"src": "2869:255:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 975,
										"nodeType": "Block",
										"src": "3237:354:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 954,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 950,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 948,
																	"name": "hVig",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 940,
																	"src": "3268:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3276:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "3268:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 953,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 951,
																	"name": "eVig",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 942,
																	"src": "3283:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3291:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "3283:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3268:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5669672070657263656e746167657320736861726573206d7573742062652065787072657373656420696e206120203020746f2031303020726174696f2e204578616d706c653a203330",
															"id": 955,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3308:76:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1ea722c975dd923ae0b75537d4a6f8d0f8ea761a34abf3ac37b846d3b7f49d9a",
																"typeString": "literal_string \"Vig percentages shares must be expressed in a  0 to 100 ratio. Example: 30\""
															},
															"value": "Vig percentages shares must be expressed in a  0 to 100 ratio. Example: 30"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1ea722c975dd923ae0b75537d4a6f8d0f8ea761a34abf3ac37b846d3b7f49d9a",
																"typeString": "literal_string \"Vig percentages shares must be expressed in a  0 to 100 ratio. Example: 30\""
															}
														],
														"id": 947,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3247:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3247:147:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 957,
												"nodeType": "ExpressionStatement",
												"src": "3247:147:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 959,
																	"name": "hVig",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 940,
																	"src": "3425:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 960,
																	"name": "eVig",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 942,
																	"src": "3432:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3425:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "313030",
																"id": 962,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3441:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "3425:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468652073756d206f6620616c6c205669672070657263656e7461676520736861726573206d75737420626520657175616c20746f20313030",
															"id": 964,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3458:59:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1259fd8c5642b570806e5ff7f9d256e63345574756956799d684a5f17f81362f",
																"typeString": "literal_string \"The sum of all Vig percentage shares must be equal to 100\""
															},
															"value": "The sum of all Vig percentage shares must be equal to 100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1259fd8c5642b570806e5ff7f9d256e63345574756956799d684a5f17f81362f",
																"typeString": "literal_string \"The sum of all Vig percentage shares must be equal to 100\""
															}
														],
														"id": 958,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3404:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3404:123:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 966,
												"nodeType": "ExpressionStatement",
												"src": "3404:123:4"
											},
											{
												"expression": {
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 967,
														"name": "holdersVig",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 725,
														"src": "3538:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 968,
														"name": "hVig",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 940,
														"src": "3551:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3538:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "3538:17:4"
											},
											{
												"expression": {
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 971,
														"name": "ecosystemVig",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 729,
														"src": "3565:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 972,
														"name": "eVig",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "3580:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3565:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 974,
												"nodeType": "ExpressionStatement",
												"src": "3565:19:4"
											}
										]
									},
									"functionSelector": "64886880",
									"id": 976,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 945,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 944,
												"name": "onlySystemAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 784,
												"src": "3221:15:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3221:15:4"
										}
									],
									"name": "setVigPercentageShares",
									"nameLocation": "3139:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "hVig",
												"nameLocation": "3179:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "3171:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3171:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "eVig",
												"nameLocation": "3201:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "3193:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3193:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3161:50:4"
									},
									"returnParameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3237:0:4"
									},
									"scope": 1355,
									"src": "3130:461:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1407
									],
									"body": {
										"id": 1035,
										"nodeType": "Block",
										"src": "3661:514:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 983,
																"name": "_vigAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 978,
																"src": "3679:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 984,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3692:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3679:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "626574206561726e696e6773206d7573742062652067726561746572207468616e2030",
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3695:37:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ea0d8c73f223a0b01c3df36ce229bb84c80da681204066053edb0fc262d4988f",
																"typeString": "literal_string \"bet earnings must be greater than 0\""
															},
															"value": "bet earnings must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ea0d8c73f223a0b01c3df36ce229bb84c80da681204066053edb0fc262d4988f",
																"typeString": "literal_string \"bet earnings must be greater than 0\""
															}
														],
														"id": 982,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3671:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3671:62:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 988,
												"nodeType": "ExpressionStatement",
												"src": "3671:62:4"
											},
											{
												"assignments": [
													990
												],
												"declarations": [
													{
														"constant": false,
														"id": 990,
														"mutability": "mutable",
														"name": "holdersShare",
														"nameLocation": "3751:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 1035,
														"src": "3743:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 989,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3743:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 997,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 991,
																	"name": "_vigAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 978,
																	"src": "3767:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 992,
																	"name": "holdersVig",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 725,
																	"src": "3780:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3767:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 994,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3766:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 995,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3794:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "3766:31:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3743:54:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 999,
																"name": "holdersShare",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 990,
																"src": "3815:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1000,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3830:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3815:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "686f6c6465727327207368617265206d7573742062652067726561746572207468616e2030",
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3833:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b4db35318a7bfd06b87e9cc407f608351727b9b09f84d5df4df95bf66ed078cf",
																"typeString": "literal_string \"holders' share must be greater than 0\""
															},
															"value": "holders' share must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b4db35318a7bfd06b87e9cc407f608351727b9b09f84d5df4df95bf66ed078cf",
																"typeString": "literal_string \"holders' share must be greater than 0\""
															}
														],
														"id": 998,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3807:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3807:66:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1004,
												"nodeType": "ExpressionStatement",
												"src": "3807:66:4"
											},
											{
												"assignments": [
													1006
												],
												"declarations": [
													{
														"constant": false,
														"id": 1006,
														"mutability": "mutable",
														"name": "ecosystemShare",
														"nameLocation": "3891:14:4",
														"nodeType": "VariableDeclaration",
														"scope": 1035,
														"src": "3883:22:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1005,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3883:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1013,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1009,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1007,
																	"name": "_vigAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 978,
																	"src": "3909:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1008,
																	"name": "ecosystemVig",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "3922:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3909:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1010,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3908:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1011,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3938:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "3908:33:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3883:58:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1015,
																"name": "ecosystemShare",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1006,
																"src": "3959:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1016,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3976:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3959:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "65636f73797374656d207368617265206d7573742062652067726561746572207468616e2030",
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3979:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6345453b5eff66eb9614fcf2d78159a2b71747dab29fc7893becd03bd411a89a",
																"typeString": "literal_string \"ecosystem share must be greater than 0\""
															},
															"value": "ecosystem share must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6345453b5eff66eb9614fcf2d78159a2b71747dab29fc7893becd03bd411a89a",
																"typeString": "literal_string \"ecosystem share must be greater than 0\""
															}
														],
														"id": 1014,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3951:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3951:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1020,
												"nodeType": "ExpressionStatement",
												"src": "3951:69:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1024,
															"name": "ecosystemAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "4063:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1025,
															"name": "ecosystemShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "4081:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1021,
															"name": "_stableCoinWrapper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "4031:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 1023,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 145,
														"src": "4031:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4031:65:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1027,
												"nodeType": "ExpressionStatement",
												"src": "4031:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1031,
															"name": "holdersAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "4139:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1032,
															"name": "holdersShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "4155:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1028,
															"name": "_stableCoinWrapper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "4107:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 1030,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 145,
														"src": "4107:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4107:61:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1034,
												"nodeType": "ExpressionStatement",
												"src": "4107:61:4"
											}
										]
									},
									"functionSelector": "cbf89c63",
									"id": 1036,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "shareBetEarnings",
									"nameLocation": "3606:16:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 980,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3652:8:4"
									},
									"parameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "_vigAmount",
												"nameLocation": "3631:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "3623:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3623:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3622:20:4"
									},
									"returnParameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3661:0:4"
									},
									"scope": 1355,
									"src": "3597:578:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1075,
										"nodeType": "Block",
										"src": "4295:236:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1052,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1047,
																	"name": "holdersAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 709,
																	"src": "4313:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1050,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4339:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1049,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4331:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1048,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4331:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1051,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4331:10:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4313:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1058,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1053,
																	"name": "ecosystemAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 706,
																	"src": "4345:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1056,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4373:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1055,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4365:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1054,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4365:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1057,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4365:10:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4345:30:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4313:62:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "796f75206d7573742073657420686f6c6465727320616e642065636f737973746d654164647265737320616464726573736573206265666f726520616464696e67206576656e74206f776e657273",
															"id": 1060,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4377:80:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f1af95a1d0630510198328b92eeb705a94a825ee39d9f1ab21a794feac721e0a",
																"typeString": "literal_string \"you must set holders and ecosystmeAddress addresses before adding event owners\""
															},
															"value": "you must set holders and ecosystmeAddress addresses before adding event owners"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f1af95a1d0630510198328b92eeb705a94a825ee39d9f1ab21a794feac721e0a",
																"typeString": "literal_string \"you must set holders and ecosystmeAddress addresses before adding event owners\""
															}
														],
														"id": 1046,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4305:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4305:153:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1062,
												"nodeType": "ExpressionStatement",
												"src": "4305:153:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1066,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "4487:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1063,
															"name": "systemAdmins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "4469:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1065,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "4469:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4469:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1068,
												"nodeType": "ExpressionStatement",
												"src": "4469:24:4"
											},
											{
												"expression": {
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1069,
															"name": "admins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "4503:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 1071,
														"indexExpression": {
															"id": 1070,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "4510:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4503:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1072,
														"name": "_addr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1038,
														"src": "4519:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4503:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1074,
												"nodeType": "ExpressionStatement",
												"src": "4503:21:4"
											}
										]
									},
									"functionSelector": "ed9f7eb9",
									"id": 1076,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1041,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1040,
												"name": "onlyUser",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 772,
												"src": "4249:8:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "4249:8:4"
										},
										{
											"arguments": [
												{
													"id": 1043,
													"name": "_addr",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1038,
													"src": "4284:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1044,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1042,
												"name": "uniqueSystemAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 802,
												"src": "4266:17:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "4266:24:4"
										}
									],
									"name": "addSystemAdmin",
									"nameLocation": "4194:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "4217:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "4209:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4209:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4208:15:4"
									},
									"returnParameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4295:0:4"
									},
									"scope": 1355,
									"src": "4185:346:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1126,
										"nodeType": "Block",
										"src": "4604:329:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1084,
																	"name": "admins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 746,
																	"src": "4623:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																		"typeString": "mapping(address => address)"
																	}
																},
																"id": 1086,
																"indexExpression": {
																	"id": 1085,
																	"name": "_systemAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1078,
																	"src": "4630:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4623:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1089,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4655:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1088,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4647:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1087,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4647:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1090,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4647:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4623:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206576656e74206f776e6572",
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4659:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dfa222cc65bd1d711fea183d18f3dda4d5a273a9aef270b54dadd7de68a596ae",
																"typeString": "literal_string \"Invalid event owner\""
															},
															"value": "Invalid event owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dfa222cc65bd1d711fea183d18f3dda4d5a273a9aef270b54dadd7de68a596ae",
																"typeString": "literal_string \"Invalid event owner\""
															}
														],
														"id": 1083,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4614:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4614:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1094,
												"nodeType": "ExpressionStatement",
												"src": "4614:67:4"
											},
											{
												"expression": {
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "4700:27:4",
													"subExpression": {
														"baseExpression": {
															"id": 1095,
															"name": "admins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "4707:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 1097,
														"indexExpression": {
															"id": 1096,
															"name": "_systemAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1078,
															"src": "4714:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4707:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1099,
												"nodeType": "ExpressionStatement",
												"src": "4700:27:4"
											},
											{
												"body": {
													"id": 1124,
													"nodeType": "Block",
													"src": "4788:139:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1111,
																		"name": "systemAdmins",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 736,
																		"src": "4806:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1113,
																	"indexExpression": {
																		"id": 1112,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1101,
																		"src": "4819:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4806:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1114,
																	"name": "_systemAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1078,
																	"src": "4825:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4806:31:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1123,
															"nodeType": "IfStatement",
															"src": "4802:115:4",
															"trueBody": {
																"id": 1122,
																"nodeType": "Block",
																"src": "4839:78:4",
																"statements": [
																	{
																		"expression": {
																			"id": 1119,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "delete",
																			"prefix": true,
																			"src": "4857:22:4",
																			"subExpression": {
																				"baseExpression": {
																					"id": 1116,
																					"name": "systemAdmins",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 736,
																					"src": "4864:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1118,
																				"indexExpression": {
																					"id": 1117,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1101,
																					"src": "4877:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "4864:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1120,
																		"nodeType": "ExpressionStatement",
																		"src": "4857:22:4"
																	},
																	{
																		"id": 1121,
																		"nodeType": "Break",
																		"src": "4897:5:4"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1104,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1101,
														"src": "4758:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1105,
															"name": "systemAdmins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "4762:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4762:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4758:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1125,
												"initializationExpression": {
													"assignments": [
														1101
													],
													"declarations": [
														{
															"constant": false,
															"id": 1101,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4751:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 1125,
															"src": "4743:9:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1100,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4743:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1103,
													"initialValue": {
														"hexValue": "30",
														"id": 1102,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4755:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4743:13:4"
												},
												"loopExpression": {
													"expression": {
														"id": 1109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4783:3:4",
														"subExpression": {
															"id": 1108,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "4783:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1110,
													"nodeType": "ExpressionStatement",
													"src": "4783:3:4"
												},
												"nodeType": "ForStatement",
												"src": "4738:189:4"
											}
										]
									},
									"functionSelector": "d5494869",
									"id": 1127,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1081,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1080,
												"name": "onlyUser",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 772,
												"src": "4595:8:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "4595:8:4"
										}
									],
									"name": "deleteSystemAdmin",
									"nameLocation": "4546:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "_systemAdmin",
												"nameLocation": "4572:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "4564:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4564:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4563:22:4"
									},
									"returnParameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4604:0:4"
									},
									"scope": 1355,
									"src": "4537:396:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1166,
										"nodeType": "Block",
										"src": "5058:240:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1143,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1138,
																	"name": "holdersAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 709,
																	"src": "5076:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1141,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5102:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5094:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1139,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5094:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5094:10:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5076:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1144,
																	"name": "ecosystemAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 706,
																	"src": "5108:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1147,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5136:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1146,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5128:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1145,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5128:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5128:10:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5108:30:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5076:62:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "796f75206d7573742073657420686f6c6465727320616e642065636f737973746d654164647265737320616464726573736573206265666f726520616464696e67206576656e74206f776e657273",
															"id": 1151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5140:80:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f1af95a1d0630510198328b92eeb705a94a825ee39d9f1ab21a794feac721e0a",
																"typeString": "literal_string \"you must set holders and ecosystmeAddress addresses before adding event owners\""
															},
															"value": "you must set holders and ecosystmeAddress addresses before adding event owners"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f1af95a1d0630510198328b92eeb705a94a825ee39d9f1ab21a794feac721e0a",
																"typeString": "literal_string \"you must set holders and ecosystmeAddress addresses before adding event owners\""
															}
														],
														"id": 1137,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5068:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5068:153:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1153,
												"nodeType": "ExpressionStatement",
												"src": "5068:153:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1157,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "5249:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1154,
															"name": "eventAdmins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "5232:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "5232:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5232:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1159,
												"nodeType": "ExpressionStatement",
												"src": "5232:23:4"
											},
											{
												"expression": {
													"id": 1164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1160,
															"name": "eventOwners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "5265:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 1162,
														"indexExpression": {
															"id": 1161,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "5277:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5265:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1163,
														"name": "_addr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "5286:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5265:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1165,
												"nodeType": "ExpressionStatement",
												"src": "5265:26:4"
											}
										]
									},
									"functionSelector": "e3c0ed78",
									"id": 1167,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1132,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1131,
												"name": "onlySystemAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 784,
												"src": "5006:15:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "5006:15:4"
										},
										{
											"arguments": [
												{
													"id": 1134,
													"name": "_addr",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1129,
													"src": "5047:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1135,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1133,
												"name": "uniqueEventAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 820,
												"src": "5030:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "5030:23:4"
										}
									],
									"name": "addEventAdmin",
									"nameLocation": "4952:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "4974:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "4966:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4966:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4965:15:4"
									},
									"returnParameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5058:0:4"
									},
									"scope": 1355,
									"src": "4943:355:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1217,
										"nodeType": "Block",
										"src": "5376:333:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1175,
																	"name": "eventOwners",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 750,
																	"src": "5395:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																		"typeString": "mapping(address => address)"
																	}
																},
																"id": 1177,
																"indexExpression": {
																	"id": 1176,
																	"name": "_eventOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1169,
																	"src": "5407:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5395:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1180,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5431:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5423:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1178,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5423:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1181,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5423:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5395:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206576656e74206f776e6572",
															"id": 1183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5435:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dfa222cc65bd1d711fea183d18f3dda4d5a273a9aef270b54dadd7de68a596ae",
																"typeString": "literal_string \"Invalid event owner\""
															},
															"value": "Invalid event owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dfa222cc65bd1d711fea183d18f3dda4d5a273a9aef270b54dadd7de68a596ae",
																"typeString": "literal_string \"Invalid event owner\""
															}
														],
														"id": 1174,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5386:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5386:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1185,
												"nodeType": "ExpressionStatement",
												"src": "5386:71:4"
											},
											{
												"expression": {
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "5476:31:4",
													"subExpression": {
														"baseExpression": {
															"id": 1186,
															"name": "eventOwners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "5483:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 1188,
														"indexExpression": {
															"id": 1187,
															"name": "_eventOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "5495:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5483:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1190,
												"nodeType": "ExpressionStatement",
												"src": "5476:31:4"
											},
											{
												"body": {
													"id": 1215,
													"nodeType": "Block",
													"src": "5567:136:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1202,
																		"name": "eventAdmins",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 739,
																		"src": "5585:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1204,
																	"indexExpression": {
																		"id": 1203,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1192,
																		"src": "5597:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5585:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1205,
																	"name": "_eventOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1169,
																	"src": "5603:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5585:29:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1214,
															"nodeType": "IfStatement",
															"src": "5581:112:4",
															"trueBody": {
																"id": 1213,
																"nodeType": "Block",
																"src": "5616:77:4",
																"statements": [
																	{
																		"expression": {
																			"id": 1210,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "delete",
																			"prefix": true,
																			"src": "5634:21:4",
																			"subExpression": {
																				"baseExpression": {
																					"id": 1207,
																					"name": "eventAdmins",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 739,
																					"src": "5641:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1209,
																				"indexExpression": {
																					"id": 1208,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1192,
																					"src": "5653:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "5641:14:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1211,
																		"nodeType": "ExpressionStatement",
																		"src": "5634:21:4"
																	},
																	{
																		"id": 1212,
																		"nodeType": "Break",
																		"src": "5673:5:4"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1195,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1192,
														"src": "5538:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1196,
															"name": "eventAdmins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "5542:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1197,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5542:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5538:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1216,
												"initializationExpression": {
													"assignments": [
														1192
													],
													"declarations": [
														{
															"constant": false,
															"id": 1192,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5531:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 1216,
															"src": "5523:9:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1191,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5523:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1194,
													"initialValue": {
														"hexValue": "30",
														"id": 1193,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5535:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5523:13:4"
												},
												"loopExpression": {
													"expression": {
														"id": 1200,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5562:3:4",
														"subExpression": {
															"id": 1199,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "5562:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1201,
													"nodeType": "ExpressionStatement",
													"src": "5562:3:4"
												},
												"nodeType": "ForStatement",
												"src": "5518:185:4"
											}
										]
									},
									"functionSelector": "f2210b2c",
									"id": 1218,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1172,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1171,
												"name": "onlySystemAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 784,
												"src": "5360:15:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "5360:15:4"
										}
									],
									"name": "deleteEventAdmin",
									"nameLocation": "5313:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "_eventOwner",
												"nameLocation": "5338:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "5330:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5330:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5329:21:4"
									},
									"returnParameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5376:0:4"
									},
									"scope": 1355,
									"src": "5304:405:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1240,
										"nodeType": "Block",
										"src": "5826:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1231,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1220,
															"src": "5853:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1228,
															"name": "eventAdmins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "5836:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "5836:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5836:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1233,
												"nodeType": "ExpressionStatement",
												"src": "5836:23:4"
											},
											{
												"expression": {
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1234,
															"name": "eventOwners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "5869:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 1236,
														"indexExpression": {
															"id": 1235,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1220,
															"src": "5881:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5869:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1237,
														"name": "_addr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1220,
														"src": "5890:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5869:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1239,
												"nodeType": "ExpressionStatement",
												"src": "5869:26:4"
											}
										]
									},
									"functionSelector": "9b460aa9",
									"id": 1241,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1223,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1222,
												"name": "onlySystemAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 784,
												"src": "5779:15:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "5779:15:4"
										},
										{
											"arguments": [
												{
													"id": 1225,
													"name": "_addr",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1220,
													"src": "5815:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1226,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1224,
												"name": "uniqueBlack",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 838,
												"src": "5803:11:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "5803:18:4"
										}
									],
									"name": "addBlacked",
									"nameLocation": "5728:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "5747:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "5739:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5739:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5738:15:4"
									},
									"returnParameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5826:0:4"
									},
									"scope": 1355,
									"src": "5719:183:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1291,
										"nodeType": "Block",
										"src": "5977:319:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1249,
																	"name": "blacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 754,
																	"src": "5996:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																		"typeString": "mapping(address => address)"
																	}
																},
																"id": 1251,
																"indexExpression": {
																	"id": 1250,
																	"name": "_eventOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1243,
																	"src": "6004:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5996:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6028:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6020:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1252,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6020:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1255,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6020:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5996:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206576656e74206f776e6572",
															"id": 1257,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6032:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dfa222cc65bd1d711fea183d18f3dda4d5a273a9aef270b54dadd7de68a596ae",
																"typeString": "literal_string \"Invalid event owner\""
															},
															"value": "Invalid event owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dfa222cc65bd1d711fea183d18f3dda4d5a273a9aef270b54dadd7de68a596ae",
																"typeString": "literal_string \"Invalid event owner\""
															}
														],
														"id": 1248,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5987:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5987:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1259,
												"nodeType": "ExpressionStatement",
												"src": "5987:67:4"
											},
											{
												"expression": {
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "6073:27:4",
													"subExpression": {
														"baseExpression": {
															"id": 1260,
															"name": "blacked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "6080:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 1262,
														"indexExpression": {
															"id": 1261,
															"name": "_eventOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1243,
															"src": "6088:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6080:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1264,
												"nodeType": "ExpressionStatement",
												"src": "6073:27:4"
											},
											{
												"body": {
													"id": 1289,
													"nodeType": "Block",
													"src": "6158:132:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1276,
																		"name": "blackList",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 742,
																		"src": "6176:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1278,
																	"indexExpression": {
																		"id": 1277,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1266,
																		"src": "6186:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6176:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1279,
																	"name": "_eventOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1243,
																	"src": "6192:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6176:27:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1288,
															"nodeType": "IfStatement",
															"src": "6172:108:4",
															"trueBody": {
																"id": 1287,
																"nodeType": "Block",
																"src": "6205:75:4",
																"statements": [
																	{
																		"expression": {
																			"id": 1284,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "delete",
																			"prefix": true,
																			"src": "6223:19:4",
																			"subExpression": {
																				"baseExpression": {
																					"id": 1281,
																					"name": "blackList",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 742,
																					"src": "6230:9:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1283,
																				"indexExpression": {
																					"id": 1282,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1266,
																					"src": "6240:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "6230:12:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1285,
																		"nodeType": "ExpressionStatement",
																		"src": "6223:19:4"
																	},
																	{
																		"id": 1286,
																		"nodeType": "Break",
																		"src": "6260:5:4"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1269,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1266,
														"src": "6131:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1270,
															"name": "blackList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "6135:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6135:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6131:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1290,
												"initializationExpression": {
													"assignments": [
														1266
													],
													"declarations": [
														{
															"constant": false,
															"id": 1266,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6124:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 1290,
															"src": "6116:9:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1265,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6116:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1268,
													"initialValue": {
														"hexValue": "30",
														"id": 1267,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6128:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6116:13:4"
												},
												"loopExpression": {
													"expression": {
														"id": 1274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6153:3:4",
														"subExpression": {
															"id": 1273,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1266,
															"src": "6153:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1275,
													"nodeType": "ExpressionStatement",
													"src": "6153:3:4"
												},
												"nodeType": "ForStatement",
												"src": "6111:179:4"
											}
										]
									},
									"functionSelector": "681ada8c",
									"id": 1292,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1246,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1245,
												"name": "onlySystemAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 784,
												"src": "5961:15:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "5961:15:4"
										}
									],
									"name": "removeBlacked",
									"nameLocation": "5917:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "_eventOwner",
												"nameLocation": "5939:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "5931:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5930:21:4"
									},
									"returnParameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5977:0:4"
									},
									"scope": 1355,
									"src": "5908:388:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1414
									],
									"body": {
										"id": 1335,
										"nodeType": "Block",
										"src": "6376:288:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1300,
															"name": "admins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "6389:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 1302,
														"indexExpression": {
															"id": 1301,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1294,
															"src": "6396:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6389:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1305,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6414:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1304,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6406:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1303,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6406:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1306,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6406:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6389:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1332,
												"nodeType": "IfStatement",
												"src": "6386:246:4",
												"trueBody": {
													"id": 1331,
													"nodeType": "Block",
													"src": "6417:215:4",
													"statements": [
														{
															"body": {
																"id": 1329,
																"nodeType": "Block",
																"src": "6481:141:4",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 1323,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"id": 1319,
																					"name": "systemAdmins",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 736,
																					"src": "6503:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1321,
																				"indexExpression": {
																					"id": 1320,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1309,
																					"src": "6516:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6503:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 1322,
																				"name": "_addr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1294,
																				"src": "6522:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "6503:24:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1328,
																		"nodeType": "IfStatement",
																		"src": "6499:109:4",
																		"trueBody": {
																			"id": 1327,
																			"nodeType": "Block",
																			"src": "6529:79:4",
																			"statements": [
																				{
																					"expression": {
																						"hexValue": "74727565",
																						"id": 1324,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "bool",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "6558:4:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						},
																						"value": "true"
																					},
																					"functionReturnParameters": 1299,
																					"id": 1325,
																					"nodeType": "Return",
																					"src": "6551:11:4"
																				},
																				{
																					"id": 1326,
																					"nodeType": "Break",
																					"src": "6584:5:4"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1315,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1312,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1309,
																	"src": "6451:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 1313,
																		"name": "systemAdmins",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 736,
																		"src": "6455:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6455:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6451:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1330,
															"initializationExpression": {
																"assignments": [
																	1309
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1309,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "6444:1:4",
																		"nodeType": "VariableDeclaration",
																		"scope": 1330,
																		"src": "6436:9:4",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1308,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "6436:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1311,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6448:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "6436:13:4"
															},
															"loopExpression": {
																"expression": {
																	"id": 1317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "6476:3:4",
																	"subExpression": {
																		"id": 1316,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1309,
																		"src": "6476:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1318,
																"nodeType": "ExpressionStatement",
																"src": "6476:3:4"
															},
															"nodeType": "ForStatement",
															"src": "6431:191:4"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 1333,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6652:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 1299,
												"id": 1334,
												"nodeType": "Return",
												"src": "6645:12:4"
											}
										]
									},
									"functionSelector": "4fb43199",
									"id": 1336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isSystemAdmin",
									"nameLocation": "6311:13:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1296,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6352:8:4"
									},
									"parameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "6333:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "6325:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6325:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6324:15:4"
									},
									"returnParameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "6370:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1297,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6370:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6369:6:4"
									},
									"scope": 1355,
									"src": "6302:362:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1421
									],
									"body": {
										"id": 1344,
										"nodeType": "Block",
										"src": "6743:16:4",
										"statements": []
									},
									"functionSelector": "cb146622",
									"id": 1345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isEventAdmin",
									"nameLocation": "6679:12:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1340,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6719:8:4"
									},
									"parameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "6700:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "6692:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6692:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6691:15:4"
									},
									"returnParameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "6737:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1341,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6737:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6736:6:4"
									},
									"scope": 1355,
									"src": "6670:89:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1428
									],
									"body": {
										"id": 1353,
										"nodeType": "Block",
										"src": "6833:16:4",
										"statements": []
									},
									"functionSelector": "332daccf",
									"id": 1354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isBlack",
									"nameLocation": "6774:7:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1349,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6809:8:4"
									},
									"parameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "6790:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "6782:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6782:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6781:15:4"
									},
									"returnParameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "6827:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1350,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6827:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6826:6:4"
									},
									"scope": 1355,
									"src": "6765:84:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1356,
							"src": "548:6304:4",
							"usedErrors": []
						}
					],
					"src": "33:6819:4"
				},
				"id": 4
			},
			"contracts/interface/IWeb3BetsFO.sol": {
				"ast": {
					"absolutePath": "contracts/interface/IWeb3BetsFO.sol",
					"exportedSymbols": {
						"IWeb3BetsFO": [
							1429
						]
					},
					"id": 1430,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1357,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1429,
							"linearizedBaseContracts": [
								1429
							],
							"name": "IWeb3BetsFO",
							"nameLocation": "68:11:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "06a5cb3a",
									"id": 1362,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ecosystemAddress",
									"nameLocation": "95:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "111:2:5"
									},
									"returnParameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "136:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "136:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "135:9:5"
									},
									"scope": 1429,
									"src": "86:59:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0da4ee50",
									"id": 1367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "holdersAddress",
									"nameLocation": "160:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "174:2:5"
									},
									"returnParameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "199:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "199:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "198:9:5"
									},
									"scope": 1429,
									"src": "151:57:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "992642e5",
									"id": 1372,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stableCoin",
									"nameLocation": "223:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "233:2:5"
									},
									"returnParameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "258:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "258:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "257:9:5"
									},
									"scope": 1429,
									"src": "214:53:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6fdbd3f6",
									"id": 1377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "eventFactory",
									"nameLocation": "282:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "294:2:5"
									},
									"returnParameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "319:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "319:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "318:9:5"
									},
									"scope": 1429,
									"src": "273:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "06ae7095",
									"id": 1382,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "marketFactory",
									"nameLocation": "343:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "356:2:5"
									},
									"returnParameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "381:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "381:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "380:9:5"
									},
									"scope": 1429,
									"src": "334:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2e1a9618",
									"id": 1387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "betFactory",
									"nameLocation": "405:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "415:2:5"
									},
									"returnParameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "440:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "439:9:5"
									},
									"scope": 1429,
									"src": "396:53:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "486d1e50",
									"id": 1392,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "holdersVig",
									"nameLocation": "464:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "474:2:5"
									},
									"returnParameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "499:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1389,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "499:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "498:6:5"
									},
									"scope": 1429,
									"src": "455:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9376b94c",
									"id": 1397,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ecosystemVig",
									"nameLocation": "520:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "532:2:5"
									},
									"returnParameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "557:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1394,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "557:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:6:5"
									},
									"scope": 1429,
									"src": "511:52:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "387440e6",
									"id": 1402,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "vigPercentage",
									"nameLocation": "578:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "591:2:5"
									},
									"returnParameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "611:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1399,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "611:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "610:6:5"
									},
									"scope": 1429,
									"src": "569:48:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "cbf89c63",
									"id": 1407,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "shareBetEarnings",
									"nameLocation": "632:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "_vigAmount",
												"nameLocation": "657:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "649:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "649:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "648:20:5"
									},
									"returnParameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "677:0:5"
									},
									"scope": 1429,
									"src": "623:55:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4fb43199",
									"id": 1414,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isSystemAdmin",
									"nameLocation": "693:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "715:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "707:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "707:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "706:18:5"
									},
									"returnParameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "743:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1411,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "743:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "742:6:5"
									},
									"scope": 1429,
									"src": "684:65:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "cb146622",
									"id": 1421,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isEventAdmin",
									"nameLocation": "764:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "785:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "777:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:18:5"
									},
									"returnParameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "813:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1418,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "813:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "812:6:5"
									},
									"scope": 1429,
									"src": "755:64:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "332daccf",
									"id": 1428,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isBlack",
									"nameLocation": "834:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "850:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "842:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "841:18:5"
									},
									"returnParameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "878:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1425,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "878:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:6:5"
									},
									"scope": 1429,
									"src": "825:59:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1430,
							"src": "58:828:5",
							"usedErrors": []
						}
					],
					"src": "33:853:5"
				},
				"id": 5
			}
		}
	}
}