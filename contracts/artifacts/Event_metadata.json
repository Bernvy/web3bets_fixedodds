{
	"compiler": {
		"version": "0.8.4+commit.c7e474f2"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "caller_",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "eventTitle_",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "startTime_",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "minimumStake_",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_marketAddress",
						"type": "address"
					}
				],
				"name": "addMarket",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "cancelEvent",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "endEvent",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "eventOwner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getMarkets",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "markets",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "minimumStake",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_startTime",
						"type": "uint256"
					}
				],
				"name": "postponeEvent",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "startEvent",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "startTime",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "status",
				"outputs": [
					{
						"internalType": "enum IEvent.EventStatus",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_eventTitle",
						"type": "string"
					}
				],
				"name": "updateName",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Event.sol": "Event"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/Event.sol": {
			"keccak256": "0x621ca6f36b1c24da5fb0c22948479e7f8cd5cf3a0543040a8cc2c32622f0f96b",
			"license": "MIT",
			"urls": [
				"bzz-raw://497f36d5453485a61c5456bd419a1efe3466e60c583af78884197900ed1c0469",
				"dweb:/ipfs/Qmaf7wcbTN77weBLVTQFuZDq3cykzeu3zWN2byZRWPu2v7"
			]
		},
		"contracts/interface/IEvent.sol": {
			"keccak256": "0x8e2ea108ac8ad01a110dbfccde1e4d731958f12f82a2d90f1e84900c7fa5efde",
			"license": "MIT",
			"urls": [
				"bzz-raw://8cd1313e1ff843720650938df8a3f7b519cd57efc5b3be2c4beca343be98d681",
				"dweb:/ipfs/QmcFXBxyQhKpMLLTCN7b7XmHQfAvFoFQGk8vZ5usKm5UMA"
			]
		},
		"contracts/interface/IMarket.sol": {
			"keccak256": "0xcf86e6f46c9b6815ffe888ef115523b9b1507440b55b26bdbe4a3af7702b4560",
			"license": "MIT",
			"urls": [
				"bzz-raw://cf530abc422f11d95047c03298cef04aa9fc73b58f969f09eda7ecbb90c8caa4",
				"dweb:/ipfs/QmcxwvmbR9eiomBcGxitGVbFQCT34KTtdv4hmrtWDxnEQE"
			]
		},
		"contracts/interface/IWeb3BetsFO.sol": {
			"keccak256": "0x20c3d67d743412db26aa952040f0296c4d416cc366de345313f9fc2be676b786",
			"license": "MIT",
			"urls": [
				"bzz-raw://e9360392b3e11b08d2bdab94506f5a0fbd0fb874c495c8a1ab1f924fdd4e95eb",
				"dweb:/ipfs/QmcBiEwLw3UKMWbe9MjNz2vuvbnsFnxyKo4KrBaFhA1hBh"
			]
		}
	},
	"version": 1
}