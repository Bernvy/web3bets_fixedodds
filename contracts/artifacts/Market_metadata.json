{
	"compiler": {
		"version": "0.8.4+commit.c7e474f2"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner_",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "better",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "marketAddr",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "hash",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "stake",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "odds",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "side",
						"type": "uint256"
					}
				],
				"name": "BetCreated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "beneficiary",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Withdraw",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_better",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_affiliate",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_stake",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_odds",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_side",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "_instant",
						"type": "bool"
					}
				],
				"name": "addBet",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "cancel",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_bet",
						"type": "bytes32"
					}
				],
				"name": "cancelBet",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					}
				],
				"name": "getBalance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					}
				],
				"name": "getUserBets",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "better",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "affiliate",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "stake",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "matched",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "odds",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "side",
								"type": "uint256"
							}
						],
						"internalType": "struct Struct.MarketBet[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_winningSide",
						"type": "uint256"
					}
				],
				"name": "setWinningSide",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_winningSide",
						"type": "uint256"
					}
				],
				"name": "settle",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_bet",
						"type": "bytes32"
					}
				],
				"name": "settleBet",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "start",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "status",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_addr",
						"type": "address"
					}
				],
				"name": "withdraw",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_bet",
						"type": "bytes32"
					}
				],
				"name": "withdrawPending",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Market.sol": "Market"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
			"keccak256": "0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935",
			"license": "MIT",
			"urls": [
				"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2",
				"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
			"license": "MIT",
			"urls": [
				"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
				"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
			]
		},
		"contracts/Market.sol": {
			"keccak256": "0xe89bede1d438379367417cd71bbe5da49ec1507fe6b30867efd36bb6304f725a",
			"license": "MIT",
			"urls": [
				"bzz-raw://b68c3827bf01ff8b66395a6cfc1f7a7a7a6c653b5b3a44067f79e18b5195d9be",
				"dweb:/ipfs/QmeLejH74GvTYQuF7p1UL8kskonCkMDWrvw7CiHXoRwvyg"
			]
		},
		"contracts/interface/IMarket.sol": {
			"keccak256": "0xebd97f4537fd74a5ddf9a83552401597671de23290c1ad91824a2aa66d57bdd0",
			"license": "MIT",
			"urls": [
				"bzz-raw://dcbb158a3c9b9e66a86edb2896faf869c6681e6a127dce69aedea688a339bd5e",
				"dweb:/ipfs/QmSFMG3wJstw8wTnNpejM82LpjErhA6hfU1LprkTB7f4ue"
			]
		},
		"contracts/interface/IWeb3BetsFO.sol": {
			"keccak256": "0x41f0c873e297570d030d56303d5c7d16ea0126e2e44e9d1d6c82d2005d138006",
			"license": "MIT",
			"urls": [
				"bzz-raw://67941851003c3eead5f3e7b56f3c4f1fc79f60c6dfdde930c4651990c1ecf03a",
				"dweb:/ipfs/QmQuQeCevuzB6TgVduS4tA7FteHqMD1GBKJRWe9Kf4v4CL"
			]
		},
		"contracts/library/Struct.sol": {
			"keccak256": "0x14ee8f579f0c902e20996298e3f4ee6dc9e4fc79f80b3b571bbdc1e8df53b4a2",
			"license": "MIT",
			"urls": [
				"bzz-raw://de551fb25bcc629a2f5936c843b8ec51b873ef2ee03edeff292ee7b46447e02f",
				"dweb:/ipfs/QmXE67zMRDY33BXgQqJ7HyReRToeiVRPK9oYuBP8eJrGSw"
			]
		}
	},
	"version": 1
}